[{"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\index.js":"1","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\App.js":"2","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Dashboard.js":"5","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\context\\ThemeDemo.js":"6","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Utils\\PageUtils.js":"7","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\index.js":"8","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\AppKeyList.js":"9","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\SyncList.js":"10","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\api.js":"11","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\ConfigFileList.js":"12","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\DownloadButton.js":"13","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\AddAppKey.js":"14","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Progress.js":"15","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\GeneratedFilesList.js":"16","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Generatekey.js":"17","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Utils\\UtilFunctions.js":"18","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Logs.js":"19","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\SendToServer.js":"20","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\UploadConfigFile.js":"21","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Utils\\TableUtils.js":"22","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\CopyToClipBoard.js":"23"},{"size":753,"mtime":1700648400238,"results":"24","hashOfConfig":"25"},{"size":926,"mtime":1700648400237,"results":"26","hashOfConfig":"25"},{"size":375,"mtime":1700648403379,"results":"27","hashOfConfig":"25"},{"size":9235,"mtime":1700648400853,"results":"28","hashOfConfig":"25"},{"size":4083,"mtime":1701841078442,"results":"29","hashOfConfig":"25"},{"size":3056,"mtime":1700648400854,"results":"30","hashOfConfig":"25"},{"size":275,"mtime":1700648403368,"results":"31","hashOfConfig":"25"},{"size":2086,"mtime":1700984743312,"results":"32","hashOfConfig":"25"},{"size":11309,"mtime":1701859392289,"results":"33","hashOfConfig":"25"},{"size":24362,"mtime":1707746418248,"results":"34","hashOfConfig":"25"},{"size":423,"mtime":1707752217059,"results":"35","hashOfConfig":"25"},{"size":9371,"mtime":1702392633413,"results":"36","hashOfConfig":"25"},{"size":1515,"mtime":1701847058943,"results":"37","hashOfConfig":"25"},{"size":12670,"mtime":1704725286411,"results":"38","hashOfConfig":"25"},{"size":489,"mtime":1700648403360,"results":"39","hashOfConfig":"25"},{"size":5138,"mtime":1707486740251,"results":"40","hashOfConfig":"25"},{"size":4211,"mtime":1702991605522,"results":"41","hashOfConfig":"25"},{"size":359,"mtime":1702978150861,"results":"42","hashOfConfig":"25"},{"size":7968,"mtime":1702301049079,"results":"43","hashOfConfig":"25"},{"size":14994,"mtime":1707741424052,"results":"44","hashOfConfig":"25"},{"size":6891,"mtime":1702377714154,"results":"45","hashOfConfig":"25"},{"size":2295,"mtime":1700927489826,"results":"46","hashOfConfig":"25"},{"size":1365,"mtime":1700907584695,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"110h4gm",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"67","usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"70","usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"77","usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"87","usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"100","usedDeprecatedRules":"51"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"51"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\index.js",["106"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n",["107","108"],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\App.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Dashboard.js",["109"],"import React, {useEffect, useState} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\nimport {getQueryParams} from \"./../components/Utils/PageUtils\";\r\n\r\nimport SyncList from './Sync/SyncList';\r\nimport Setting from './Settings/index';\r\nimport AppKey from './Appkey/AppKeyList'\r\n\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport CloudSyncIcon from '@mui/icons-material/CloudSync';\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    fontSize: \"20px\",\r\n    fontWeight: \"bold\",\r\n    padding: \"5px\",\r\n    paddingBottom: \"10px\",\r\n  },\r\n  inforoot: {\r\n    margin: \"5px\",\r\n  },\r\n\r\n  dropdown: {\r\n    marginTop :\"50px\"\r\n   \r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  downmenu: {\r\n    display: 'flex'\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={5}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    \"aria-controls\": `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\nfunction HomePage(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(null);\r\n  const getstate= props.location && props.location.state ? props.location.state : \" \" ;\r\n  const urlIndex = getQueryParams(\"tab\", props.location && props.location.search ? props.location.search : \"\"); \r\n  const urlTabs = urlIndex !== null ? urlIndex : getstate ;\r\n  useEffect ( () => {\r\n\r\n    switch(urlTabs){  \r\n      case \"database-sync\": return setValue(0)\r\n      case \"setting\": return setValue(1)\r\n\r\n      default: return setValue(0)\r\n    }\r\n  }, [urlIndex]);\r\n  \r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n     <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>Client Sync</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <br/>\r\n    <div className={classes.root} >\r\n      <AppBar position=\"static\" style={{backgroundColor:'#fff'}}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"primary\"\r\n          aria-label=\"scrollable force tabs example\"\r\n        >\r\n           <Tab style={{textTransform:\"none\"}} label=\"Generate & Upload JSON Files\" icon={<CloudSyncIcon />} {...a11yProps(0)} />\r\n         \r\n          {/*<Tab className={classes.title} label=\"WebSocket  \" icon={<SettingsIcon />} {...a11yProps(1)}/> */}\r\n          <Tab className={classes.title} style={{textTransform:\"none\"}} label=\"App Key Management\" icon={<SettingsIcon />} {...a11yProps(2)}/>\r\n          <Tab className={classes.title} style={{textTransform:\"none\"}} label=\"Configuration  \" icon={<SettingsIcon />} {...a11yProps(1)}/> \r\n      </Tabs>\r\n      </AppBar>\r\n\r\n     \r\n      <TabPanel value={value} index={0}>\r\n      <SyncList />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <AppKey />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <Setting />\r\n      </TabPanel>\r\n       \r\n     </div> \r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default HomePage;\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Utils\\PageUtils.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\index.js",["110","111","112","113","114","115","116"],"import React, {useState, useEffect} from 'react'\r\nimport axios from \"axios\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport ConfigFileList from './ConfigFileList'\r\n\r\n\r\n\r\nconst TabExampleMenuPositionRight = (props) => {\r\n\r\n    const defaultValues = { username: \"\", password: \"\", url:\"\" }\r\n    const [patDetails, setPatDetails] = useState(defaultValues);\r\n    const [saving, setSaving] = useState(false);\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      ServerUrl()\r\n    }, []);\r\n        ///GET LIST OF Facilities\r\n        async function ServerUrl() {\r\n          axios\r\n              .get(`${baseUrl}sync/remote-urls`,\r\n              //{ headers: {\"Authorization\" : `Bearer ${token}`} }\r\n              )\r\n              .then((response) => {\r\n                  console.log(response.data)\r\n                  setServerUrl(\r\n                      Object.entries(response.data).map(([key, value]) => ({\r\n                          label: value.url,\r\n                          value: value.id,\r\n                        }))\r\n                  );\r\n              })\r\n              .catch((error) => {\r\n  \r\n              });\r\n      \r\n      }\r\n    \r\n    const handleInputChange = e => {\r\n      setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n      console.log(patDetails)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();      \r\n      setSaving(true);\r\n      axios.post(`${baseUrl}sync/remote-access-token`,\r\n     // { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n      patDetails\r\n      )\r\n        .then(response => {\r\n            setSaving(false);\r\n            toast.success(\"Token Generated Successful\");\r\n\r\n        })\r\n        .catch(error => {\r\n            setSaving(false);\r\n            toast.error(\"Something went wrong\");\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n  return (    \r\n          \r\n          <ConfigFileList />\r\n        )\r\n\r\n}\r\n\r\nexport default TabExampleMenuPositionRight","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\AppKeyList.js",["117","118","119","120","121","122"],"import React, { useState, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport {\r\n    Modal, ModalHeader, ModalBody, Form, Card, CardBody, FormGroup, Label, Input, Alert\r\n} from 'reactstrap';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {Row, Col} from 'reactstrap';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//import { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\n//import { MdModeEdit } from \"react-icons/md\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Dropdown,Button as Buuton2, Menu,  } from 'semantic-ui-react'\r\nimport AddAppKey from \"./AddAppKey\";\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport DownloadButton from '../Sync/DownloadButton';\r\nimport { set } from 'date-fns';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AppKeyList = (props) => {\r\n    //let history = useHistory();\r\n    // The state for our timer\r\n    const classes = useStyles()\r\n    const [keyList, setKeyList] = useState( [])\r\n    const [appKeysListTable, showAppKeysListTable] = useState( true)\r\n    const [keyObj, setKeyObj] = useState( null)\r\n    const [showViewKey, setShowViewKey] = useState(false)\r\n    const [appKeyModalIsOpen, setAppKeyModalIsOpen] = useState(false);\r\n\r\n\r\n    const toggleAppKeyModalIsOpen = () => {\r\n        setAppKeyModalIsOpen(!appKeyModalIsOpen);\r\n    }\r\n    useEffect(() => {\r\n        AppKeyHistory();\r\n    }, []);\r\n\r\n    ///GET LIST OF Sync History\r\n    async function AppKeyHistory() {\r\n        axios\r\n            .get(`${baseUrl}sync/app-key`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setKeyList(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    const createAppKey =()=> {\r\n        setShowViewKey(false)\r\n        showAppKeysListTable(false)\r\n    }\r\n    const updateKey = (rowObj) => {\r\n        setShowViewKey(false)\r\n        showAppKeysListTable(false)\r\n        setKeyObj(rowObj)\r\n    }\r\n    const viewAppKey =(rowObj)=> {\r\n        // setShowViewKey(true)\r\n        setKeyObj(rowObj)\r\n        setAppKeyModalIsOpen(true);\r\n        // showAppKeysListTable(false)\r\n    }\r\n    //\r\n\r\n    return (\r\n        <div>\r\n            {appKeysListTable ? (<>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{backgroundColor: keyList.length === 0 && \"#014d88\" }}\r\n                    className=\" float-right mr-1\"\r\n                    //startIcon={<FaUserPlus />}\r\n                    onClick={createAppKey}\r\n                    disabled={keyList.length > 0}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Add App Key </span>\r\n                </Button>\r\n                <br/><br/>\r\n                <MaterialTable\r\n                    icons={tableIcons}\r\n                    title=\"APP Key List \"\r\n                    columns={[\r\n                        // { title: \" ID\", field: \"Id\" },\r\n                        {\r\n                            title: \"Facility Name\",\r\n                            field: \"facilityName\",\r\n                        },\r\n                        { title: \"Server Url\", field: \"serverUrl\", filtering: false },\r\n                        { title: \"Action\", field: \"actions\", filtering: false },\r\n                    ]}\r\n                    data={ keyList.map((row) => ({\r\n                        //Id: manager.id,\r\n                        facilityName: row.facilityName,\r\n                        serverUrl: row.serverUrl,\r\n                        actions:(<div>\r\n                            <Menu.Menu position='right'  >\r\n                                <Menu.Item >\r\n                                    <Buuton2 style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                                        <Dropdown item text='Action'>\r\n\r\n                                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n\r\n                                                {row.appKey && <Dropdown.Item  onClick={() => viewAppKey(row)}><VisibilityIcon color=\"primary\"/>View key\r\n                                                </Dropdown.Item>}\r\n                                                {row.appKey && <Dropdown.Item  onClick={() => updateKey(row)}><Edit color=\"primary\"/>Edit key\r\n                                                </Dropdown.Item>}\r\n\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </Buuton2>\r\n                                </Menu.Item>\r\n                            </Menu.Menu>\r\n                        </div>)\r\n                    }))}\r\n\r\n                    options={{\r\n                        headerStyle: {\r\n                            backgroundColor: \"#014d88\",\r\n                            color: \"#fff\",\r\n                        },\r\n                        searchFieldStyle: {\r\n                            width : '200%',\r\n                            margingLeft: '250px',\r\n                        },\r\n                        filtering: false,\r\n                        exportButton: true,\r\n                        searchFieldAlignment: 'left',\r\n                        pageSizeOptions:[10,20,100],\r\n                        pageSize:10,\r\n                        debounceInterval: 400\r\n                    }}\r\n                />\r\n            </>)\r\n                :\r\n            (<>\r\n            <AddAppKey setShowViewKey={setShowViewKey} showViewKey={showViewKey} showAppKeysListTable={showAppKeysListTable} AppKeyHistory={AppKeyHistory} keyObj={keyObj}/>\r\n            </>)\r\n            }\r\n\r\n        <Modal isOpen={appKeyModalIsOpen} style={{ textTransform: \"none\" }} toggle={toggleAppKeyModalIsOpen} size=\"lg\" backdrop='static'>\r\n                <Form >\r\n                    <ModalHeader className={classes.header} toggle={toggleAppKeyModalIsOpen}>App Key</ModalHeader>\r\n                    <ModalBody>\r\n\r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                    <Col md={12} >\r\n                                        <Alert color=\"primary\" >\r\n                                            <p>\r\n                                                Info : &nbsp;&nbsp;&nbsp;<span style={{ fontWeight: 'bolder' }}>{'Kindly click on the button to download the app key'}</span>\r\n                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                                            </p>\r\n\r\n                                        </Alert>\r\n\r\n                                        <Typography marginTop={2}>\r\n                                            {keyObj && keyObj.appKey}\r\n                                        </Typography>\r\n\r\n                                        <Box display={\"flex\"} marginTop={\"10px\"} justifyContent={\"space-between\"} width={\"100%\"} >\r\n                                            <DownloadButton styles={classes.button} textToDownload={keyObj && keyObj.appKey} />\r\n\r\n                                            <Button variant='contained' color='default' onClick={toggleAppKeyModalIsOpen} >\r\n                                                <CancelIcon />\r\n                                                <Typography style={{ marginLeft: \"5px\" }}>\r\n                                                    Cancel\r\n                                                </Typography>\r\n                                            </Button>\r\n                                        </Box>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                            </CardBody>\r\n                        </Card>\r\n                    </ModalBody>\r\n\r\n                </Form>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppKeyList;\r\n\r\n\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\SyncList.js",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138"],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\api.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\ConfigFileList.js",["139","140","141","142","143","144","145"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport UploadConfigFile from './UploadConfigFile';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Dropdown, Button as Buuton2, Menu, } from 'semantic-ui-react'\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport moment from 'moment';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst ConfigFileList = (props) => {\r\n\r\n    const [serverConfig, setServerConfig] = useState([])\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const toggleModal = () => setShowModal(!showModal);\r\n    const [configDetailObj, setConfigDetailObj] = useState(null)\r\n    const [showConfigView, setShowConfigView] = useState(false)\r\n    useEffect(() => {\r\n        ServerConfigFile()\r\n    }, []);\r\n    ///GET LIST OF Remote URL\r\n    async function ServerConfigFile() {\r\n        axios\r\n            .get(`${baseUrl}sync/sync-config`,\r\n                { headers: { \"Authorization\": `Bearer ${token}` } }\r\n            )\r\n            .then((response) => {\r\n\r\n                setServerConfig(response.data)\r\n\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n\r\n    }\r\n    const uploadConfigFile = () => {\r\n        setShowModal(!showModal)\r\n    }\r\n    const viewConfigDetail = (row) => {\r\n        setShowConfigView(true)\r\n        setConfigDetailObj(row)\r\n    }\r\n    const backButton = () => {\r\n        setShowConfigView(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-right mr-1\"\r\n                style={{ backgroundColor: \"#014d88\" }}\r\n                onClick={showConfigView ? backButton : uploadConfigFile}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>{showConfigView ? \"<< Back\" : \"Upload Config File\"} </span>\r\n            </Button>\r\n            <br /><br />\r\n            <br />\r\n            {!showConfigView && (\r\n                <MaterialTable\r\n                    icons={tableIcons}\r\n                    title=\"Config Information \"\r\n                    columns={[\r\n                        { title: \" File Name\", field: \"name\" },\r\n                        {\r\n                            title: \"Version\",\r\n                            field: \"version\",\r\n                        },\r\n                        { title: \"Release Date\", field: \"releaseDate\", filtering: false },\r\n                        { title: \"Upload Date\", field: \"uploadDate\", filtering: false },\r\n                        { title: \"Status\", field: \"status\", filtering: false },\r\n                        { title: \"Action\", field: \"actions\", filtering: false },\r\n\r\n\r\n                    ]}\r\n                    data={serverConfig.sort((a, b) =>\r\n                        moment(a.uploadDate).isBefore(moment(b.uploadDate)) ? 1 : -1\r\n                    ).map((row) => ({\r\n                        //Id: manager.id,\r\n                        name: row.name,\r\n                        version: row.version,\r\n                        releaseDate: moment(row.releaseDate).format(\"LLLL\"),\r\n                        uploadDate: moment(row.uploadDate).format(\"LLLL\"),\r\n                        status: row.active === true ? \"Active\" : \"Previous\",\r\n                        actions: (<div>\r\n                            <Menu.Menu position='right'  >\r\n                                <Menu.Item >\r\n                                    <Buuton2 style={{ backgroundColor: 'rgb(153,46,98)' }} primary>\r\n                                        <Dropdown item text='Action'>\r\n                                            <Dropdown.Menu style={{ marginTop: \"10px\", }}>\r\n                                                <Dropdown.Item onClick={() => viewConfigDetail(row)}><VisibilityIcon /> View </Dropdown.Item>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </Buuton2>\r\n                                </Menu.Item>\r\n                            </Menu.Menu>\r\n                        </div>)\r\n\r\n                    }))}\r\n\r\n                    options={{\r\n                        headerStyle: {\r\n                            backgroundColor: \"#014d88\",\r\n                            color: \"#fff\",\r\n                        },\r\n                        searchFieldStyle: {\r\n                            width: '200%',\r\n                            margingLeft: '250px',\r\n                        },\r\n                        filtering: false,\r\n                        exportButton: false,\r\n                        searchFieldAlignment: 'left',\r\n                        pageSizeOptions: [10, 20, 100],\r\n                        pageSize: 10,\r\n                        debounceInterval: 400\r\n                    }}\r\n                />\r\n            )}\r\n            {showConfigView && (\r\n                <>\r\n\r\n                    <MaterialTable\r\n                        icons={tableIcons}\r\n                        title={\"Config Information - \" + configDetailObj.name}\r\n                        columns={[\r\n                            { title: \" Module Name\", field: \"moduleName\" },\r\n                            {\r\n                                title: \"Version\",\r\n                                field: \"version\",\r\n                            },\r\n                        ]}\r\n                        data={configDetailObj.configModules.map((row) => ({\r\n                            //Id: manager.id,\r\n                            moduleName: row.moduleName,\r\n                            version: row.version,\r\n\r\n\r\n                        }))}\r\n\r\n                        options={{\r\n                            headerStyle: {\r\n                                backgroundColor: \"#014d88\",\r\n                                color: \"#fff\",\r\n                            },\r\n                            searchFieldStyle: {\r\n                                width: '200%',\r\n                                margingLeft: '250px',\r\n                            },\r\n                            filtering: false,\r\n                            exportButton: false,\r\n                            searchFieldAlignment: 'left',\r\n                            pageSizeOptions: [10, 20, 100],\r\n                            pageSize: 10,\r\n                            debounceInterval: 400\r\n                        }}\r\n                    />\r\n                </>\r\n            )}\r\n            <UploadConfigFile serverConfigFile={ServerConfigFile} toggleModal={toggleModal} showModal={showModal} ServerUrl={serverConfig} />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConfigFileList;\r\n\r\n\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\DownloadButton.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\AddAppKey.js",["146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162"],"import React, {useState, useEffect, forwardRef} from 'react';\r\nimport {\r\n    Modal, ModalHeader, ModalBody, Form, FormFeedback,\r\n    Row, Col, Card, CardBody, FormGroup, Label, Input\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\nimport {toast} from \"react-toastify\";\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: 'red'\r\n    }\r\n}))\r\n\r\n\r\nconst Index = (props) => {\r\n    \r\n    const classes = useStyles()\r\n    const defaultValues = { appKey: \"\", facilityId:\"\", id:\"\", serverUrl:\"\"}\r\n    const [appKeyObj, setAppKeyObj] = useState(null);\r\n    const [keyDetails, setKeyDetails] = useState(defaultValues);\r\n    const [facilities, setFacilities] = useState( [])\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [key, setKey] = useState(null);\r\n    const [fileContent, setFileContent] = useState('');\r\n    \r\n    useEffect(() => {\r\n        Facilities();\r\n        // AppKeyHistory();\r\n        setKeyDetails(props.keyObj);\r\n    }, [props]);\r\n    // useEffect(() => {\r\n    //     if (props.keyObj) {\r\n    //         setKey(props.keyObj.appKey);\r\n    //     }\r\n    // }, [props.keyObj]);\r\n    async function AppKeyHistory() {\r\n        axios\r\n            .get(`${baseUrl}sync/app-key`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setAppKeyObj(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function Facilities() {\r\n        axios\r\n            .get(`${baseUrl}account`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n\r\n                setFacilities(\r\n                    Object.entries(response.data.applicationUserOrganisationUnits).map(([key, value]) => ({\r\n                        label: value.organisationUnitName,\r\n                        value: value.organisationUnitId,\r\n                    }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors };\r\n        temp.appKey = keyDetails.appKey\r\n            ? \"\"\r\n            : \"Key is required\";\r\n        \r\n        temp.serverUrl = keyDetails.serverUrl\r\n            ? keyDetails.serverUrl.endsWith('/')\r\n                ? \"Server URL must not end with a slash\"\r\n                : \"\"\r\n            : \"Server URL is required\";\r\n        temp.facilityId = keyDetails.facilityId\r\n            ? \"\"\r\n            : \"Facility is required\";\r\n\r\n        setErrors({\r\n            ...temp,\r\n        });\r\n        return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n\r\n    const handleInputChange = e => {\r\n        setKeyDetails ({...keyDetails,  [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"its here\");\r\n        console.log(keyDetails);\r\n        if (validate()) {\r\n            console.log(\"now here\");\r\n            setSaving(true);\r\n            axios.post(`${baseUrl}sync/app-key`,keyDetails,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n            )\r\n                .then(response => {\r\n                    setSaving(false);\r\n                    toast.success(\"APP KEY save successful\")\r\n                    props.showAppKeysListTable(true)\r\n                    props.AppKeyHistory();\r\n                })\r\n                .catch(error => {\r\n                    setSaving(false);\r\n                    toast.error(\"Something went wrong\");\r\n                });\r\n        };\r\n    }\r\n    //\r\n    const showListiew =()=> {\r\n        props.showAppKeysListTable(true)\r\n        props.setShowViewKey(false)\r\n    }\r\n\r\n\r\n  const handleFileRead = (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    if (file && file.name.endsWith('.key')) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (event) => {\r\n        // Read the content of the file\r\n        const content = event.target.result;\r\n        console.log(content);\r\n        setFileContent(content);\r\n        setKeyDetails ({...keyDetails,  appKey: content});\r\n      };\r\n\r\n\r\n      reader.readAsText(file);\r\n    } else {\r\n      alert('Please select a valid .key file.');\r\n    }\r\n  };\r\n\r\n    return (\r\n        <div >\r\n\r\n            <h1>App Key</h1>\r\n            <br/>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-right mr-1\"\r\n                //startIcon={<FaUserPlus />}\r\n                style={{backgroundColor:\"#014d88\"}}\r\n                onClick={showListiew}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>{ \"<< Back\" } </span>\r\n            </Button>\r\n            <br/><br/>\r\n            {!props.showViewKey ?\r\n                (<>\r\n                    <Row >\r\n                        <Col md={12}>\r\n                            <FormGroup>\r\n                                <Label >Server URL *</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"serverUrl\"\r\n                                    id=\"serverUrl\"\r\n                                    defaultValue={keyDetails?.serverUrl}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    value={keyDetails?.serverUrl}\r\n                                >\r\n\r\n                                </Input>\r\n                                {errors.serverUrl !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.serverUrl}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormGroup>\r\n                                <Label >Facility *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"facilityId\"\r\n                                    id=\"facilityId\"\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    value={keyDetails?.facilityId}\r\n                                >\r\n                                    <option > </option>\r\n                                    {facilities.map(({ label, value }) => (\r\n                                        <option key={value} value={value}>\r\n                                            {label}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                                {errors.facilityId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.facilityId}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormGroup>\r\n                                <Label >Key</Label>\r\n                                <Input type=\"file\" accept=\".key\" onChange={handleFileRead} />\r\n                                {(fileContent || keyDetails?.appKey) && <Input\r\n                                    type=\"textarea\"\r\n                                    name=\"appKey\"\r\n                                    id=\"appKey\"\r\n                                    defaultValue={keyDetails?.appKey}\r\n                                    // value={keyDetails?.appKey}\r\n                                    value={fileContent || keyDetails?.appKey}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\",minHeight:\"80px\"}}\r\n                                    required\r\n                                    \r\n                                />}\r\n                                {errors.appKey !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.appKey}</span>\r\n                                ) : \"\" }\r\n\r\n                            </FormGroup>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br/>\r\n                    <Button\r\n                        type='submit'\r\n                        variant='contained'\r\n                        //color='primary'\r\n                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                        //startIcon={<SettingsBackupRestoreIcon />}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>Update Key</span>\r\n                    </Button>\r\n                </>)\r\n                :\r\n                (<>\r\n                    {/* <Box maxWidth={\"90%\"} >\r\n                        <Typography marginTop={2}>\r\n                            APP KEY : {props.keyObj && props.keyObj!==null ? props.keyObj.appKey : \"\"}\r\n                        </Typography>\r\n                    </Box> */}\r\n                \r\n                </>)\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index;\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Progress.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\GeneratedFilesList.js",["163","164"],"import MaterialTable from \"material-table\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Dropdown, Button, Menu,  } from 'semantic-ui-react'\r\nimport { TableIcons } from \"../Utils/TableUtils\";\r\nimport moment from \"moment\";\r\nimport { CloudUpload } from \"@material-ui/icons\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport axios from \"axios\";\r\nimport SendToServer from \"./SendToServer\";\r\n\r\nconst GeneratedFilesList = (props) => {\r\n    const [generatedFiles, setGeneratedFiles] = useState([]);\r\n    const [sendToServerModalIsOpen, setSendToServerModalIsOpen] = useState(false);\r\n    const [rowObj, setRowObj] = useState({});\r\n\r\n    const toggleSendToServerModal = () => {\r\n        setSendToServerModalIsOpen(!sendToServerModalIsOpen);\r\n    }\r\n\r\n    const goBack = () =>{\r\n        props.setGenerateFilesGrid(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetGeneratedFiles();\r\n    }, [props.id])\r\n\r\n    const sendToServerAction = (row) => {\r\n        setRowObj({...row, syncHistoryTrackerUuid: row.uuid});\r\n        toggleSendToServerModal();\r\n\r\n    }\r\n     // Get list of generated files\r\n     async function GetGeneratedFiles() {\r\n        axios\r\n            .get(`${baseUrl}sync/history/${props.id}/tracker`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setGeneratedFiles(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n\r\n    const refreshPrevious = () => {\r\n        GetGeneratedFiles();\r\n        props.jsonSyncHistory();\r\n    }\r\n\r\n    const canExportFiles = () => {\r\n        // map through the generated files and check if any of them is not synced\r\n        let canExport = true;\r\n        generatedFiles.forEach((file) => {\r\n            if(file.status.toLowerCase() !== 'synced'){\r\n                canExport = false;\r\n            }\r\n        });\r\n        return canExport;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SendToServer isSingleFile={true} refreshPrevious={refreshPrevious} toggleModal={toggleSendToServerModal} showModal={sendToServerModalIsOpen} rowObj={rowObj}/>\r\n            <Button\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#014d88\", }}\r\n                className=\" float-right mr-1\"\r\n                onClick={goBack}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>{\"<< Back\"}</span>\r\n            </Button>\r\n            <br /><br />\r\n            <MaterialTable\r\n                icons={TableIcons}\r\n                title=\"Generated Files List \"\r\n                columns={[\r\n                    // { title: \"Facility Name\", field: \"facilityName\"},\r\n                    { title: \"File Name \", field: \"fileName\", filtering: false },\r\n                    { title: \"Record Size \", field: \"recordSize\", filtering: false },\r\n                    { title: \"Date Generated \", field: \"date\", filtering: false },\r\n                    { title: \"Status\", field: \"status\", filtering: false },\r\n                    { title: \"Action\", field: \"actions\", filtering: false },\r\n                ]}\r\n                data={generatedFiles.map((row) => ({\r\n                    // facilityName: row.facilityName,\r\n                    fileName: row.fileName,\r\n                    recordSize: row.recordSize,\r\n                    date: moment(row.timeCreated).format(\"LLLL\"),\r\n                    status: row.status,\r\n                    //errorLog: row.errorLog,\r\n                    actions: (<div>\r\n                        <Menu.Menu position='right'  >\r\n                            <Menu.Item >\r\n                                <Button style={{ backgroundColor: 'rgb(153,46,98)' }} primary>\r\n                                    <Dropdown item text='Action'>\r\n\r\n                                        <Dropdown.Menu style={{ marginTop: \"10px\", }}>\r\n                                            <Dropdown.Item disabled={row.status.toLowerCase() === 'synced'} onClick={() => sendToServerAction(row)}><CloudUpload color=\"primary\" /> Send To Server\r\n                                            </Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </Button>\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>)\r\n                }))}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width: '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: canExportFiles(),\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions: [10, 20, 100],\r\n                    pageSize: 10,\r\n                    debounceInterval: 400\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default GeneratedFilesList;","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Generatekey.js",["165","166","167","168","169","170","171","172","173","174","175","176"],"import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\n    Row,Col, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport { Box, Button, Input, Typography } from '@material-ui/core';\r\nimport CopyToClipboardButton from './CopyToClipBoard';\r\nimport DownloadButton from './DownloadButton';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    header: {\r\n        fontWeight: 600\r\n    }\r\n}))\r\n\r\n\r\nconst GenerateKey = (props) => {\r\n    const classes = useStyles()\r\n\r\n    //const samplesdispatched ={\"sampleManifests\": [] };\r\n    const GenerateKeyProcess = e => {\r\n        e.preventDefault()\r\n        alert(\"Processing \")\r\n        //Closing of the modal \r\n        props.togglestatus();\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop='static'>\r\n                <Form >\r\n                    <ModalHeader className={classes.header} toggle={props.toggleModal}>GENERATED KEY</ModalHeader>\r\n                    <ModalBody>\r\n\r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                    <Col md={12} >\r\n                                        <Alert color=\"primary\" >\r\n                                            <p>\r\n                                                Info : &nbsp;&nbsp;&nbsp;<span style={{ fontWeight: 'bolder'}}>{'Kindly click on the button to copy the generated key for upload'}</span>\r\n                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                                            </p>\r\n\r\n                                        </Alert>\r\n\r\n                                        <Typography marginTop={2}>\r\n                                            {props.genKey}\r\n                                        </Typography>\r\n                                        \r\n                                        <Box display={\"flex\"} marginTop={\"10px\"} justifyContent={\"space-between\"} width={\"100%\"} >\r\n                                            {/* <CopyToClipboardButton styles={classes.button} textToCopy={props.genKey}/> */}\r\n                                            <DownloadButton styles={classes.button} textToDownload={props.genKey} />\r\n\r\n                                            <Button variant='contained' color='default' onClick={props.toggleModal} >\r\n                                                <CancelIcon />\r\n                                                <Typography style={{marginLeft:\"5px\"}}>\r\n                                                Cancel\r\n                                                </Typography>\r\n                                            </Button>\r\n                                        </Box>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                            </CardBody>\r\n                        </Card>\r\n                    </ModalBody>\r\n\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GenerateKey;\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Utils\\UtilFunctions.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Logs.js",["177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196"],"import React, { useState, useEffect, forwardRef } from 'react';\r\nimport {\r\n    Modal, ModalHeader, ModalBody, Form, FormFeedback,\r\n    Row, Col, Card, CardBody\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport moment from \"moment\";\r\nimport { Button } from 'semantic-ui-react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }\r\n}))\r\n\r\n\r\nconst Logs = (props) => {\r\n    const goBack = () =>{\r\n        props.setShowErrorTable(false);\r\n    }\r\n    const classes = useStyles()\r\n\r\n    const [messageLogsData, setMessageLogsData] = useState([]);\r\n    const [tableName, setTableName] = useState();\r\n\r\n\r\n    useEffect(()=> {\r\n        if(props.rowObj){\r\n            setMessageLogsData(props.rowObj.messageLog);\r\n            setTableName( props.rowObj.tableName);\r\n        }\r\n    },[props.rowObj])\r\n\r\n\r\n\r\n    //const samplesdispatched ={\"sampleManifests\": [] };\r\n    const LogsProcess = e => {\r\n        e.preventDefault()\r\n        alert(\"Processing \")\r\n        //Closing of the modal \r\n        props.togglestatus();\r\n\r\n\r\n\r\n    }\r\n\r\n    // function convertArrayToFormattedDate(dateArray) {\r\n    //     const [year, month, day, hour, minute, second, millisecond] = dateArray;\r\n\r\n    //     // Using Date to get timestamp\r\n    //     const dateObject = new Date(year, month - 1, day, hour, minute, second, millisecond);\r\n    //     const timestamp = dateObject.getTime();\r\n\r\n    //     // Using moment to format the timestamp\r\n    //     const formattedDate = moment(timestamp).format('MMM D, YYYY h:mm a');\r\n\r\n    //     return formattedDate;\r\n    // }\r\n\r\n    const getRowCategoryColor = (category) => {\r\n        if (category && category === \"ERROR\") {\r\n            return \"red\";\r\n        } else if (category && category === \"WARNING\") {\r\n            return \"orange\";\r\n        } else if (category && category === \"SUCCESS\") {\r\n            return \"green\";\r\n        } else {\r\n            return \"#000000\";\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n\r\n            <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\", marginTop: \"10px\"}}>\r\n            <Typography style={{fontWeight: 600, fontSize: \"20px\"}} toggle={props.toggleModal}>{`Message Logs  (${tableName})`}</Typography>\r\n            <Button\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#014d88\", }}\r\n                className=\" float-right mr-1\"\r\n                onClick={goBack}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>{\"<< Back\"}</span>\r\n            </Button>\r\n            </div>\r\n            <br /><br />\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title={\"JSON Files Logs \"}\r\n                columns={[\r\n                    { title: \"Module Check\", field: \"activity\", filtering: false },\r\n                    { title: \"Name\", field: \"name\", filtering: false },\r\n                    { title: \"Log Message\", field: \"logMessage\", filtering: false },\r\n                    { title: \"Category\", field: \"category\", filtering: false },\r\n                    { title: \"Others\", field: \"others\", filtering: false },\r\n                    { title: \"Date-Time Created\", field: \"dateTimeCreated\", filtering: false },\r\n                ]}\r\n                data={messageLogsData.map((row) => ({\r\n                    //Id: manager.id,\r\n                    activity: row.activity,\r\n                    name: row.name,\r\n                    logMessage: row.message,\r\n                    category: (\r\n                        <div>\r\n                            <Typography style={{fontWeight: 600, color:getRowCategoryColor(row.category)}}>\r\n                                {row.category}\r\n                            </Typography>\r\n                        </div>\r\n                        ),\r\n                    others: row.others,\r\n                    // dateTimeCreated: convertArrayToFormattedDate(row.timeCreated),\r\n                    dateTimeCreated: row.timeCreated,\r\n                }))}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width: '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: true,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions: [10, 20, 100],\r\n                    pageSize: 10,\r\n                    debounceInterval: 400\r\n                }}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logs;\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\SendToServer.js",["197","198","199","200","201","202","203","204","205","206","207"],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\UploadConfigFile.js",["208","209","210","211","212","213","214","215"],"import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\nRow,Col, Card,CardBody, FormGroup, Input, Label, Table} from 'reactstrap';\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n    header: {\r\n        fontWeight: 600\r\n    }\r\n}))\r\n\r\n\r\n\r\nconst NewToken = (props) => {\r\n    const classes = useStyles()\r\n    const [urlHide, setUrlHide] = useState(false);\r\n    const defaultValues = { file: \"\",}\r\n    const [patDetails, setPatDetails] = useState(defaultValues);\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [dataJSONFile, setDataJSONFile] = useState(null)\r\n    const [dataJSONFileContent, setDataJSONFileContent] = useState(null)\r\n\r\n    const handleInputChange = e => {\r\n      setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n    }\r\n    /*****  Validation */\r\n    const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.file = patDetails.file\r\n        ? \"\"\r\n        : \"File is required\";\r\n\r\n        setErrors({\r\n            ...temp,\r\n        });\r\n        return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n            //if (validate()) {\r\n                    setSaving(true);\r\n                    axios.post(`${baseUrl}sync/sync-config`,dataJSONFile,\r\n                     { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n                    )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            toast.success(\"Config File Uploaded Successful\");\r\n                            props.serverConfigFile();\r\n                            props.toggleModal()\r\n\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            toast.error(\"Something went wrong\");\r\n                            props.toggleModal();\r\n                        });\r\n            //};\r\n        }\r\n\r\n    const readFileOnUpload = (uploadedFile) =>{\r\n        const fileReader = new FileReader();\r\n        //patDetails.file=true\r\n        fileReader.onloadend = ()=>{\r\n            try{\r\n                setDataJSONFile(JSON.parse(fileReader.result));\r\n                //console.log(JSON.parse(fileReader.result))\r\n                setDataJSONFileContent(fileReader.result)\r\n            }catch(e){\r\n                setDataJSONFile(\"**Not valid JSON file!**\");\r\n            }\r\n        }\r\n        if( uploadedFile!== undefined)\r\n            fileReader.readAsText(uploadedFile);\r\n    }\r\n\r\n\r\n  return (      \r\n      <div >\r\n         \r\n            <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop=\"static\">\r\n              <Form >\r\n                <ModalHeader className={classes.header} toggle={props.toggleModal}>UPLOAD CONFIG FILE</ModalHeader>\r\n                <ModalBody>\r\n                    <Card >\r\n                    <CardBody>\r\n                    <Row >\r\n                        <Col md={12}>\r\n                            <FormGroup>\r\n                            <Label >Config File</Label>\r\n                                    <Input\r\n                                        type=\"file\"\r\n                                        name=\"file\"\r\n                                        id=\"file\"\r\n                                        accept=\".json\"\r\n                                        // value={patDetails.file.name}\r\n                                        onChange={(e)=>readFileOnUpload(e.target.files[0])}\r\n                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        required\r\n                                        />\r\n                                        {errors.file !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.file}</span>\r\n                                        ) : \"\" }\r\n\r\n                            </FormGroup>\r\n                            </Col>\r\n                        {dataJSONFileContent !==null && (\r\n                            <>\r\n                                <Col md={12}>\r\n                                    <FormGroup>\r\n                                        <Label >Config File</Label>\r\n                                        <Input\r\n                                            type=\"textarea\"\r\n                                            name=\"file\"\r\n                                            cols=\"15\"\r\n                                            rows=\"25\"\r\n                                            value={dataJSONFileContent}\r\n                                        />\r\n\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </>\r\n                        )}\r\n                    </Row>\r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br/>              \r\n                        <Button\r\n                            type='submit'\r\n                            variant='contained'\r\n                            //color='primary'\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            //startIcon={<SettingsBackupRestoreIcon />}\r\n                            onClick={handleSubmit}   \r\n                        >   \r\n                            <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>Upload Config File</span>\r\n                        </Button>\r\n                    </CardBody>\r\n                    </Card> \r\n                </ModalBody>\r\n            </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewToken;\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Utils\\TableUtils.js",["216","217"],"import { forwardRef } from 'react';\r\nimport CloudUpload from '@material-ui/icons/CloudUpload';\r\nimport moment from \"moment\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\n\r\n\r\nexport const TableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\CopyToClipBoard.js",[],{"ruleId":"218","severity":1,"message":"219","line":4,"column":41,"nodeType":"220","messageId":"221","endLine":4,"endColumn":47},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":96,"column":6,"nodeType":"228","endLine":96,"endColumn":16,"suggestions":"229"},{"ruleId":"218","severity":1,"message":"230","line":4,"column":10,"nodeType":"220","messageId":"221","endLine":4,"endColumn":24},{"ruleId":"231","severity":1,"message":"232","line":6,"column":10,"nodeType":"233","messageId":"234","endLine":6,"endColumn":24,"fix":"235"},{"ruleId":"218","severity":1,"message":"236","line":6,"column":19,"nodeType":"220","messageId":"221","endLine":6,"endColumn":24},{"ruleId":"218","severity":1,"message":"237","line":15,"column":12,"nodeType":"220","messageId":"221","endLine":15,"endColumn":18},{"ruleId":"218","severity":1,"message":"238","line":16,"column":12,"nodeType":"220","messageId":"221","endLine":16,"endColumn":21},{"ruleId":"218","severity":1,"message":"239","line":44,"column":11,"nodeType":"220","messageId":"221","endLine":44,"endColumn":28},{"ruleId":"218","severity":1,"message":"240","line":49,"column":11,"nodeType":"220","messageId":"221","endLine":49,"endColumn":23},{"ruleId":"231","severity":1,"message":"232","line":4,"column":10,"nodeType":"233","messageId":"234","endLine":4,"endColumn":24,"fix":"241"},{"ruleId":"218","severity":1,"message":"242","line":7,"column":58,"nodeType":"220","messageId":"221","endLine":7,"endColumn":67},{"ruleId":"218","severity":1,"message":"243","line":7,"column":69,"nodeType":"220","messageId":"221","endLine":7,"endColumn":74},{"ruleId":"218","severity":1,"message":"244","line":7,"column":76,"nodeType":"220","messageId":"221","endLine":7,"endColumn":81},{"ruleId":"218","severity":1,"message":"245","line":28,"column":11,"nodeType":"220","messageId":"221","endLine":28,"endColumn":16},{"ruleId":"218","severity":1,"message":"246","line":43,"column":10,"nodeType":"220","messageId":"221","endLine":43,"endColumn":13},{"ruleId":"231","severity":1,"message":"232","line":4,"column":10,"nodeType":"233","messageId":"234","endLine":4,"endColumn":24,"fix":"247"},{"ruleId":"218","severity":1,"message":"248","line":32,"column":45,"nodeType":"220","messageId":"221","endLine":32,"endColumn":57},{"ruleId":"218","severity":1,"message":"249","line":129,"column":9,"nodeType":"220","messageId":"221","endLine":129,"endColumn":23},{"ruleId":"218","severity":1,"message":"250","line":130,"column":9,"nodeType":"220","messageId":"221","endLine":130,"endColumn":32},{"ruleId":"218","severity":1,"message":"251","line":141,"column":10,"nodeType":"220","messageId":"221","endLine":141,"endColumn":22},{"ruleId":"218","severity":1,"message":"252","line":141,"column":24,"nodeType":"220","messageId":"221","endLine":141,"endColumn":39},{"ruleId":"218","severity":1,"message":"253","line":142,"column":10,"nodeType":"220","messageId":"221","endLine":142,"endColumn":26},{"ruleId":"218","severity":1,"message":"254","line":142,"column":28,"nodeType":"220","messageId":"221","endLine":142,"endColumn":47},{"ruleId":"218","severity":1,"message":"255","line":145,"column":10,"nodeType":"220","messageId":"221","endLine":145,"endColumn":32},{"ruleId":"218","severity":1,"message":"256","line":145,"column":34,"nodeType":"220","messageId":"221","endLine":145,"endColumn":59},{"ruleId":"257","severity":1,"message":"258","line":215,"column":51,"nodeType":"259","messageId":"260","endLine":215,"endColumn":76,"fix":"261"},{"ruleId":"257","severity":1,"message":"258","line":218,"column":51,"nodeType":"259","messageId":"260","endLine":218,"endColumn":65,"fix":"262"},{"ruleId":"218","severity":1,"message":"263","line":226,"column":23,"nodeType":"220","messageId":"221","endLine":226,"endColumn":26},{"ruleId":"218","severity":1,"message":"264","line":251,"column":11,"nodeType":"220","messageId":"221","endLine":251,"endColumn":30},{"ruleId":"218","severity":1,"message":"265","line":277,"column":11,"nodeType":"220","messageId":"221","endLine":277,"endColumn":30},{"ruleId":"218","severity":1,"message":"266","line":304,"column":13,"nodeType":"220","messageId":"221","endLine":304,"endColumn":22},{"ruleId":"218","severity":1,"message":"267","line":1,"column":27,"nodeType":"220","messageId":"221","endLine":1,"endColumn":33},{"ruleId":"231","severity":1,"message":"232","line":4,"column":10,"nodeType":"233","messageId":"234","endLine":4,"endColumn":24,"fix":"268"},{"ruleId":"218","severity":1,"message":"230","line":23,"column":10,"nodeType":"220","messageId":"221","endLine":23,"endColumn":24},{"ruleId":"218","severity":1,"message":"245","line":23,"column":26,"nodeType":"220","messageId":"221","endLine":23,"endColumn":31},{"ruleId":"218","severity":1,"message":"269","line":26,"column":10,"nodeType":"220","messageId":"221","endLine":26,"endColumn":20},{"ruleId":"218","severity":1,"message":"270","line":28,"column":10,"nodeType":"220","messageId":"221","endLine":28,"endColumn":20},{"ruleId":"218","severity":1,"message":"271","line":59,"column":11,"nodeType":"220","messageId":"221","endLine":59,"endColumn":17},{"ruleId":"218","severity":1,"message":"272","line":3,"column":5,"nodeType":"220","messageId":"221","endLine":3,"endColumn":10},{"ruleId":"218","severity":1,"message":"273","line":3,"column":12,"nodeType":"220","messageId":"221","endLine":3,"endColumn":23},{"ruleId":"218","severity":1,"message":"274","line":3,"column":25,"nodeType":"220","messageId":"221","endLine":3,"endColumn":34},{"ruleId":"218","severity":1,"message":"275","line":3,"column":36,"nodeType":"220","messageId":"221","endLine":3,"endColumn":40},{"ruleId":"218","severity":1,"message":"248","line":3,"column":42,"nodeType":"220","messageId":"221","endLine":3,"endColumn":54},{"ruleId":"218","severity":1,"message":"276","line":4,"column":15,"nodeType":"220","messageId":"221","endLine":4,"endColumn":19},{"ruleId":"218","severity":1,"message":"277","line":4,"column":21,"nodeType":"220","messageId":"221","endLine":4,"endColumn":29},{"ruleId":"218","severity":1,"message":"278","line":6,"column":8,"nodeType":"220","messageId":"221","endLine":6,"endColumn":17},{"ruleId":"218","severity":1,"message":"279","line":8,"column":8,"nodeType":"220","messageId":"221","endLine":8,"endColumn":16},{"ruleId":"218","severity":1,"message":"280","line":9,"column":10,"nodeType":"220","messageId":"221","endLine":9,"endColumn":15},{"ruleId":"218","severity":1,"message":"281","line":31,"column":10,"nodeType":"220","messageId":"221","endLine":31,"endColumn":13},{"ruleId":"218","severity":1,"message":"282","line":31,"column":15,"nodeType":"220","messageId":"221","endLine":31,"endColumn":25},{"ruleId":"218","severity":1,"message":"283","line":34,"column":7,"nodeType":"220","messageId":"221","endLine":34,"endColumn":17},{"ruleId":"218","severity":1,"message":"284","line":96,"column":12,"nodeType":"220","messageId":"221","endLine":96,"endColumn":21},{"ruleId":"218","severity":1,"message":"285","line":101,"column":12,"nodeType":"220","messageId":"221","endLine":101,"endColumn":15},{"ruleId":"218","severity":1,"message":"286","line":101,"column":17,"nodeType":"220","messageId":"221","endLine":101,"endColumn":23},{"ruleId":"218","severity":1,"message":"287","line":114,"column":20,"nodeType":"220","messageId":"221","endLine":114,"endColumn":33},{"ruleId":"231","severity":1,"message":"232","line":7,"column":10,"nodeType":"233","messageId":"234","endLine":7,"endColumn":24,"fix":"288"},{"ruleId":"226","severity":1,"message":"289","line":26,"column":8,"nodeType":"228","endLine":26,"endColumn":18,"suggestions":"290"},{"ruleId":"218","severity":1,"message":"291","line":1,"column":16,"nodeType":"220","messageId":"221","endLine":1,"endColumn":24},{"ruleId":"218","severity":1,"message":"292","line":1,"column":26,"nodeType":"220","messageId":"221","endLine":1,"endColumn":35},{"ruleId":"218","severity":1,"message":"248","line":2,"column":45,"nodeType":"220","messageId":"221","endLine":2,"endColumn":57},{"ruleId":"218","severity":1,"message":"278","line":4,"column":8,"nodeType":"220","messageId":"221","endLine":4,"endColumn":17},{"ruleId":"218","severity":1,"message":"279","line":6,"column":8,"nodeType":"220","messageId":"221","endLine":6,"endColumn":16},{"ruleId":"218","severity":1,"message":"293","line":9,"column":10,"nodeType":"220","messageId":"221","endLine":9,"endColumn":17},{"ruleId":"218","severity":1,"message":"294","line":10,"column":8,"nodeType":"220","messageId":"221","endLine":10,"endColumn":13},{"ruleId":"218","severity":1,"message":"295","line":11,"column":10,"nodeType":"220","messageId":"221","endLine":11,"endColumn":22},{"ruleId":"218","severity":1,"message":"296","line":12,"column":8,"nodeType":"220","messageId":"221","endLine":12,"endColumn":33},{"ruleId":"218","severity":1,"message":"244","line":13,"column":23,"nodeType":"220","messageId":"221","endLine":13,"endColumn":28},{"ruleId":"218","severity":1,"message":"297","line":14,"column":8,"nodeType":"220","messageId":"221","endLine":14,"endColumn":29},{"ruleId":"218","severity":1,"message":"298","line":62,"column":11,"nodeType":"220","messageId":"221","endLine":62,"endColumn":29},{"ruleId":"218","severity":1,"message":"272","line":3,"column":5,"nodeType":"220","messageId":"221","endLine":3,"endColumn":10},{"ruleId":"218","severity":1,"message":"273","line":3,"column":12,"nodeType":"220","messageId":"221","endLine":3,"endColumn":23},{"ruleId":"218","severity":1,"message":"274","line":3,"column":25,"nodeType":"220","messageId":"221","endLine":3,"endColumn":34},{"ruleId":"218","severity":1,"message":"275","line":3,"column":36,"nodeType":"220","messageId":"221","endLine":3,"endColumn":40},{"ruleId":"218","severity":1,"message":"248","line":3,"column":42,"nodeType":"220","messageId":"221","endLine":3,"endColumn":54},{"ruleId":"218","severity":1,"message":"299","line":4,"column":5,"nodeType":"220","messageId":"221","endLine":4,"endColumn":8},{"ruleId":"218","severity":1,"message":"300","line":4,"column":10,"nodeType":"220","messageId":"221","endLine":4,"endColumn":13},{"ruleId":"218","severity":1,"message":"276","line":4,"column":15,"nodeType":"220","messageId":"221","endLine":4,"endColumn":19},{"ruleId":"218","severity":1,"message":"277","line":4,"column":21,"nodeType":"220","messageId":"221","endLine":4,"endColumn":29},{"ruleId":"218","severity":1,"message":"278","line":6,"column":8,"nodeType":"220","messageId":"221","endLine":6,"endColumn":17},{"ruleId":"218","severity":1,"message":"279","line":8,"column":8,"nodeType":"220","messageId":"221","endLine":8,"endColumn":16},{"ruleId":"218","severity":1,"message":"301","line":9,"column":8,"nodeType":"220","messageId":"221","endLine":9,"endColumn":18},{"ruleId":"218","severity":1,"message":"280","line":10,"column":10,"nodeType":"220","messageId":"221","endLine":10,"endColumn":15},{"ruleId":"218","severity":1,"message":"293","line":11,"column":10,"nodeType":"220","messageId":"221","endLine":11,"endColumn":17},{"ruleId":"218","severity":1,"message":"294","line":12,"column":8,"nodeType":"220","messageId":"221","endLine":12,"endColumn":13},{"ruleId":"218","severity":1,"message":"295","line":13,"column":10,"nodeType":"220","messageId":"221","endLine":13,"endColumn":22},{"ruleId":"218","severity":1,"message":"296","line":14,"column":8,"nodeType":"220","messageId":"221","endLine":14,"endColumn":33},{"ruleId":"218","severity":1,"message":"302","line":31,"column":8,"nodeType":"220","messageId":"221","endLine":31,"endColumn":14},{"ruleId":"218","severity":1,"message":"303","line":95,"column":11,"nodeType":"220","messageId":"221","endLine":95,"endColumn":18},{"ruleId":"218","severity":1,"message":"304","line":111,"column":11,"nodeType":"220","messageId":"221","endLine":111,"endColumn":22},{"ruleId":"231","severity":1,"message":"232","line":13,"column":10,"nodeType":"233","messageId":"234","endLine":13,"endColumn":24,"fix":"305"},{"ruleId":"218","severity":1,"message":"306","line":19,"column":10,"nodeType":"220","messageId":"221","endLine":19,"endColumn":12},{"ruleId":"218","severity":1,"message":"246","line":20,"column":10,"nodeType":"220","messageId":"221","endLine":20,"endColumn":13},{"ruleId":"218","severity":1,"message":"307","line":72,"column":12,"nodeType":"220","messageId":"221","endLine":72,"endColumn":18},{"ruleId":"218","severity":1,"message":"308","line":74,"column":12,"nodeType":"220","messageId":"221","endLine":74,"endColumn":19},{"ruleId":"218","severity":1,"message":"309","line":74,"column":21,"nodeType":"220","messageId":"221","endLine":74,"endColumn":31},{"ruleId":"218","severity":1,"message":"238","line":77,"column":12,"nodeType":"220","messageId":"221","endLine":77,"endColumn":21},{"ruleId":"226","severity":1,"message":"310","line":103,"column":8,"nodeType":"228","endLine":103,"endColumn":22,"suggestions":"311"},{"ruleId":"226","severity":1,"message":"289","line":111,"column":8,"nodeType":"228","endLine":111,"endColumn":22,"suggestions":"312"},{"ruleId":"218","severity":1,"message":"313","line":113,"column":20,"nodeType":"220","messageId":"221","endLine":113,"endColumn":29},{"ruleId":"314","severity":1,"message":"315","line":243,"column":32,"nodeType":"316","messageId":"317","endLine":247,"endColumn":26},{"ruleId":"218","severity":1,"message":"292","line":1,"column":26,"nodeType":"220","messageId":"221","endLine":1,"endColumn":35},{"ruleId":"218","severity":1,"message":"248","line":2,"column":45,"nodeType":"220","messageId":"221","endLine":2,"endColumn":57},{"ruleId":"218","severity":1,"message":"318","line":3,"column":50,"nodeType":"220","messageId":"221","endLine":3,"endColumn":55},{"ruleId":"231","severity":1,"message":"232","line":11,"column":10,"nodeType":"233","messageId":"234","endLine":11,"endColumn":24,"fix":"319"},{"ruleId":"218","severity":1,"message":"308","line":64,"column":12,"nodeType":"220","messageId":"221","endLine":64,"endColumn":19},{"ruleId":"218","severity":1,"message":"309","line":64,"column":21,"nodeType":"220","messageId":"221","endLine":64,"endColumn":31},{"ruleId":"218","severity":1,"message":"239","line":73,"column":11,"nodeType":"220","messageId":"221","endLine":73,"endColumn":28},{"ruleId":"218","severity":1,"message":"320","line":77,"column":11,"nodeType":"220","messageId":"221","endLine":77,"endColumn":19},{"ruleId":"218","severity":1,"message":"321","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":19},{"ruleId":"218","severity":1,"message":"302","line":3,"column":8,"nodeType":"220","messageId":"221","endLine":3,"endColumn":14},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["322"],"no-negated-in-lhs",["323"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'urlTabs'. Either include it or remove the dependency array.","ArrayExpression",["324"],"'ToastContainer' is defined but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"325","text":"326"},"'token' is defined but never used.","'saving' is assigned a value but never used.","'serverUrl' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.",{"range":"327","text":"326"},"'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'toast' is defined but never used.","'set' is defined but never used.",{"range":"328","text":"326"},"'FormFeedback' is defined but never used.","'toggleLogModal' is assigned a value but never used.","'toggleGenerateFilesGrid' is assigned a value but never used.","'showErrorObj' is assigned a value but never used.","'setShowErrorObj' is assigned a value but never used.","'showErrorFileObj' is assigned a value but never used.","'setShowErrorFileObj' is assigned a value but never used.","'syncHistoryTrackerUuid' is assigned a value but never used.","'setSyncHistoryTrackerUuid' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['all'] found.","Property","unnecessarilyComputedProperty",{"range":"329","text":"330"},{"range":"331","text":"330"},"'res' is assigned a value but never used.","'fetchGeneratedFiles' is assigned a value but never used.","'displaySendToServer' is assigned a value but never used.","'canExport' is assigned a value but never used.","'useRef' is defined but never used.",{"range":"332","text":"326"},"'MdModeEdit' is defined but never used.","'makeStyles' is defined but never used.","'toggle' is assigned a value but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Form' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'MatButton' is defined but never used.","'SaveIcon' is defined but never used.","'Alert' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'tableIcons' is assigned a value but never used.","'appKeyObj' is assigned a value but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","'AppKeyHistory' is defined but never used.",{"range":"333","text":"326"},"React Hook useEffect has a missing dependency: 'GetGeneratedFiles'. Either include it or remove the dependency array.",["334"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Spinner' is defined but never used.","'axios' is defined but never used.","'DropzoneArea' is defined but never used.","'SettingsBackupRestoreIcon' is defined but never used.","'CopyToClipboardButton' is defined but never used.","'GenerateKeyProcess' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'CancelIcon' is defined but never used.","'moment' is defined but never used.","'classes' is assigned a value but never used.","'LogsProcess' is assigned a value but never used.",{"range":"335","text":"326"},"'el' is defined but never used.","'rowObj' is assigned a value but never used.","'urlHide' is assigned a value but never used.","'setUrlHide' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'patDetails'. Either include it or remove the dependency array. You can also do a functional update 'setPatDetails(p => ...)' if you only need 'patDetails' in the 'setPatDetails' call.",["336"],["337"],"'ServerUrl' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'errorCount'.","ArrowFunctionExpression","unsafeRefs","'Table' is defined but never used.",{"range":"338","text":"326"},"'validate' is assigned a value but never used.","'CloudUpload' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"339","fix":"340"},[195,209],"token",[134,148],[134,148],[8492,8499],"'all'",[8626,8633],[142,156],[294,308],{"desc":"341","fix":"342"},[460,474],{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},[457,471],"Update the dependencies array to be: [urlIndex, urlTabs]",{"range":"347","text":"348"},"Update the dependencies array to be: [GetGeneratedFiles, props.id]",{"range":"349","text":"350"},"Update the dependencies array to be: [patDetails, props.rowObj]",{"range":"351","text":"352"},"Update the dependencies array to be: [GetGeneratedFiles, props.rowObj]",{"range":"353","text":"354"},[2459,2469],"[urlIndex, urlTabs]",[920,930],"[GetGeneratedFiles, props.id]",[3059,3073],"[patDetails, props.rowObj]",[3213,3227],"[GetGeneratedFiles, props.rowObj]"]