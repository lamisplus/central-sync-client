[{"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\index.js":"1","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\App.js":"2","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\context\\ThemeDemo.js":"5","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Dashboard.js":"6","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\index.js":"7","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Utils\\PageUtils.js":"8","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\NewList.js":"9","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Websocket.js":"10","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\SyncList.js":"11","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\api.js":"12","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\SettingList.js":"13","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Progress.js":"14","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\NewPersonalAccessToken.js":"15","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\UpdateToken.js":"16","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Generatekey.js":"17","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\SendToServer.js":"18","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Logs.js":"19","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\index.js":"20","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\AppKeyList.js":"21","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\AddAppKey.js":"22"},{"size":753,"mtime":1696439989962,"results":"23","hashOfConfig":"24"},{"size":926,"mtime":1696439989960,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1696439995381,"results":"26","hashOfConfig":"24"},{"size":9235,"mtime":1696439990196,"results":"27","hashOfConfig":"24"},{"size":3056,"mtime":1696439990198,"results":"28","hashOfConfig":"24"},{"size":4017,"mtime":1700046697245,"results":"29","hashOfConfig":"24"},{"size":2078,"mtime":1696499844994,"results":"30","hashOfConfig":"24"},{"size":275,"mtime":1696439995361,"results":"31","hashOfConfig":"24"},{"size":22943,"mtime":1696439995345,"results":"32","hashOfConfig":"33"},{"size":17575,"mtime":1696439995353,"results":"34","hashOfConfig":"33"},{"size":20524,"mtime":1700529171721,"results":"35","hashOfConfig":"24"},{"size":423,"mtime":1700744126000,"results":"36","hashOfConfig":"24"},{"size":8814,"mtime":1700042481060,"results":"37","hashOfConfig":"24"},{"size":489,"mtime":1696439995348,"results":"38","hashOfConfig":"24"},{"size":5964,"mtime":1700044990930,"results":"39","hashOfConfig":"24"},{"size":7953,"mtime":1696499844991,"results":"40","hashOfConfig":"33"},{"size":3540,"mtime":1699932040055,"results":"41","hashOfConfig":"24"},{"size":7500,"mtime":1700529514486,"results":"42","hashOfConfig":"24"},{"size":5877,"mtime":1699932040072,"results":"43","hashOfConfig":"24"},{"size":11802,"mtime":1700045957257,"results":"44","hashOfConfig":"33"},{"size":7819,"mtime":1700048459262,"results":"45","hashOfConfig":"24"},{"size":12545,"mtime":1700048372254,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1lis6qj",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"65","usedDeprecatedRules":"66"},"1avw4dh",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":1,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\index.js",["95"],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\App.js",[],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Dashboard.js",["96"],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\index.js",["97","98","99","100","101","102","103"],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Utils\\PageUtils.js",[],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\NewList.js",["104","105","106","107"],"import React, {forwardRef, useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport {Modal, ModalBody, ModalHeader, Form,\r\n    Row,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MaterialTable from 'material-table';\r\nimport CloudUpload from '@material-ui/icons/CloudUpload';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport {FiUploadCloud} from \"react-icons/fi\";\r\nimport FileSaver from \"file-saver\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Dropdown,Button as Buuton2, Menu, Icon } from 'semantic-ui-react'\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Spinner } from 'reactstrap';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from \"moment\";\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref}/>),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref}/>),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref}/>),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref}/>),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref}/>),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref}/>),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref}/>),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref}/>),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref}/>),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref}/>),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref}/>),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref}/>),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref}/>)\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport default function DownloadNdr(props) {\r\n    const classes = useStyles();\r\n    const [syncList, setSyncList] = useState( [])\r\n    const [facilities, setFacilities] = useState( [])\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n    const [loading, setLoading] = useState('')\r\n    const [modal, setModal] = useState(false);\r\n    const [modal2, setModal2] = useState(false);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledTables, setDisabledTables] = useState(true);\r\n    const [errors, setErrors] = useState({});\r\n    const [tableList, setTableList] = useState( [\"patient\",\r\n            \"patient_visit\",\r\n            \"triage_vital_sign\",\r\n            \"hiv_enrollment\",\r\n            \"hiv_art_clinical\",\r\n            \"hiv_art_pharmacy\",\r\n            \"laboratory_order\",\r\n            \"laboratory_test\",\r\n            \"laboratory_sample\",\r\n            \"laboratory_result\",\r\n            \"biometric\",\r\n            \"hiv_status_tracker\",\r\n            \"hiv_eac\",\r\n            \"hiv_eac_session\",\r\n            //hiv_eac_out_come,\r\n            \"hiv_observation\",\r\n            \"prep_eligibility\",\r\n            \"prep_enrollment\",\r\n            \"prep_clinic\",\r\n            \"prep_interruption\"])\r\n    const defaultValues = { facilityId: \"\", serverUrl : \"\", allTables:null, tables:\"\" }\r\n    const [uploadDetails, setUploadDetails] = useState(defaultValues);\r\n    const toggle = () => setModal(!modal);\r\n    const toggle2 = () => setModal2(!modal2);\r\n    useEffect(() => {\r\n        syncHistory()\r\n        Facilities()\r\n        ServerUrl()\r\n        const timer = setTimeout(() => console.log('Initial timeout!'), 1);\r\n        return () => clearTimeout(timer);\r\n      }, []);\r\n\r\n           ///GET LIST OF Sync History\r\n    async function syncHistory() {\r\n\r\n        axios\r\n            .get(`${baseUrl}sync/sync-history`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSyncList(response.data);\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function Facilities() {\r\n        axios\r\n            .get(`${baseUrl}sync/facilities`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setFacilities(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.name,\r\n                        value: value.id,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function ServerUrl() {\r\n        axios\r\n            .get(`${baseUrl}sync/remote-urls`,\r\n             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setServerUrl(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.url + \" - \" + value.username,\r\n                        value: value.url,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Tables\r\n    async function TableList(facilityId) {\r\n        axios\r\n            .get(`${baseUrl}sync/table/${facilityId}`,\r\n             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setTableList(\r\n                    Object.entries(response.data).map((row) => ({\r\n                        label: row,\r\n                        value: row,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    const downloadFile = (fileName) => {\r\n \r\n        axios\r\n            .get(`${baseUrl}ndr/download/${fileName}`,\r\n                {headers: {\"Authorization\": `Bearer ${token}`}, responseType: 'blob'}\r\n            )\r\n            .then((response) => {\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.zip`);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    const handleInputChange = e => {\r\n        setUploadDetails ({...uploadDetails,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"facilityId\" ){\r\n            TableList(e.target.value)\r\n        }\r\n    }\r\n    const handleInputChangeAll =e =>{\r\n        if(e.target.checked){ \r\n            setUploadDetails({...uploadDetails, [e.target.name]: e.target.checked})\r\n            setDisabledTables(true)\r\n         }else{\r\n            setDisabledTables(false)\r\n         }\r\n \r\n    }\r\n         /*****  Validation */\r\n    const validate = () => {\r\n        let temp = { ...errors };\r\n        temp.facilityId = uploadDetails.facilityId\r\n            ? \"\"\r\n            : \"Facility is required\";\r\n            temp.serverUrl  = uploadDetails.serverUrl \r\n            ? \"\"\r\n            : \"URL is required\";\r\n            \r\n            setErrors({\r\n                ...temp,\r\n            });\r\n            return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n     const handleSubmit = (e) => {\r\n       \r\n        e.preventDefault();\r\n             \r\n            \r\n           if(validate()){\r\n            setSaving(true);\r\n            const defaultTable = uploadDetails.tables!==null ? uploadDetails.tables : null ;\r\n            axios.post(`${baseUrl}sync/upload/${defaultTable}`, uploadDetails,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            toast.success(\"Upload Successful\");\r\n                            syncHistory();\r\n                            //Closing of the modal \r\n                            toggle();\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            toast.error(\"Something went wrong\");\r\n                        });\r\n             }       \r\n    };\r\n    const varient =(value)=>{\r\n        console.log(value)\r\n        if(value<=20 ){\r\n            return \"danger\"\r\n        }else if(value> 20 && value<=69){\r\n            return \"warning\"\r\n        }else if(value>= 70 && value<=99){\r\n            return \"info\"\r\n        }else if(value=== 100){\r\n            return \"success\"\r\n        }else{\r\n            return \"success\" \r\n        }\r\n    }\r\n    const CentralUploadStatus =(value)=>{\r\n        if(value<=0 ){\r\n            return \"Not Yet Uploaded\"\r\n        }else if(value> 0 && value<=99){\r\n            return \"Processing\"\r\n        }else if(value=== 100){\r\n            return \"Completed\"\r\n        }else{\r\n            return \"Pending\" \r\n        }\r\n    }\r\n    let tableListObj=[\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Patient\",\r\n            date:\"2023-04-23\",\r\n            status:100,\r\n            centralUpload:100\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Triage\",\r\n            date:\"2023-04-23\",\r\n            status:30,\r\n            centralUpload:30\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Hiv Enrollment\",\r\n            date:\"2023-04-23\",\r\n            status:97,\r\n            centralUpload:97\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"HIV Clinic Visit\",\r\n            date:\"2023-04-23\",\r\n            status:40,\r\n            centralUpload:40\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Biomteric\",\r\n            date:\"2023-04-23\",\r\n            status:0,\r\n            centralUpload:0\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Laboratory\",\r\n            date:\"2023-04-23\",\r\n            status:70,\r\n            centralUpload:70\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Pharmacy\",\r\n            date:\"2023-04-23\",\r\n            status:80,\r\n            centralUpload:80\r\n        },\r\n    ];\r\n    const syncDataBase =()=> {        \r\n        setModal2(!modal2)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-right\"\r\n                startIcon={<FiUploadCloud size=\"10\"/>}\r\n                style={{backgroundColor: '#014d88'}}\r\n                onClick={syncDataBase}\r\n                //href=\"https://ndr.phis3project.org.ng/Identity/Account/Login?ReturnUrl=%2F\"\r\n                //onClick={loadNdrWeb}\r\n                target=\"_blank\"\r\n            >\r\n                <span> Genrate Tables</span>\r\n            </Button>\r\n\r\n            <br/><br/>\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title=\"List of Tables Generated\"\r\n\r\n                columns={[\r\n                    {title: \"Facility Name\", field: \"name\", filtering: false},\r\n                    {\r\n                        title: \"Number of Files Generated\",\r\n                        field: \"number\",\r\n                        filtering: false\r\n                    },\r\n                    {title: \"File Name\", field: \"fileName\", filtering: false},\r\n                    {title: \"Date Last Generated\", field: \"date\", type: \"date\", filtering: false},\r\n                    {title: \"Central Upload Status\", field: \"status\", filtering: false},\r\n\r\n                    {\r\n                        title: \"Action\",\r\n                        field: \"actions\",\r\n                        filtering: false,\r\n                    },\r\n                ]}\r\n                isLoading={loading}\r\n                data={tableListObj.map((row) => ({\r\n                    name: row.name,\r\n                    number: row.number,\r\n                    fileName: row.fileName,\r\n                    date: moment(row.date).format(\"LLLL\"),\r\n                    status:(\r\n                            <>\r\n                            <p><b>{CentralUploadStatus(row.centralUpload)}</b></p>\r\n\r\n                            <ProgressBar now={row.status} variant={varient(row.status)} label={`${row.status}%`} />\r\n                            </>  \r\n                            ),\r\n                    actions:(<div>\r\n                    <Menu.Menu position='right'  >\r\n                    <Menu.Item >\r\n                        <Buuton2 style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                        <Dropdown item text='Action'>\r\n\r\n                        <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                            <Dropdown.Item  onClick={() => downloadFile(row.fileName)} title=\"Download\"><CloudDownloadIcon color=\"primary\"/> Download\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item  ><CloudUpload color=\"primary\" title=\"Upload to Central\"/> Upload To Central\r\n                            </Dropdown.Item>\r\n                            \r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                        </Buuton2>\r\n                    </Menu.Item>\r\n                    </Menu.Menu>\r\n              </div>)\r\n                }))}\r\n                options={{\r\n\r\n                    pageSizeOptions: [5, 10, 50, 100, 150, 500],\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                        margin: \"auto\"\r\n                    },\r\n                    filtering: true,\r\n                    searchFieldStyle: {\r\n                        width: '300%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                }}\r\n\r\n            />\r\n\r\n        {/* <Modal isOpen={modal} toggle={toggle} backdrop={false} fade={true} style={{marginTop:\"250px\"}} size='lg'>\r\n        \r\n        <ModalBody>\r\n        <h1>Uploading File To NDR. Please wait...</h1>\r\n        </ModalBody>\r\n        \r\n        </Modal>  */}\r\n        <Modal isOpen={modal2} toggle={toggle2} className={props.className} size=\"lg\"  backdrop=\"static\">\r\n        <Form >\r\n        <ModalHeader toggle={toggle2}>Upload</ModalHeader>\r\n            <ModalBody>   \r\n                <Card >\r\n                    <CardBody>\r\n                        <Row >                                  \r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >Facility *</Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"facilityId\"\r\n                                id=\"facilityId\"\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                required\r\n                                >\r\n                                <option > </option>\r\n                                {facilities.map(({ label, value }) => (\r\n                                    <option key={value} value={value}>\r\n                                    {label}\r\n                                    </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.facilityId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.facilityId}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        </Col> \r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >URL *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"serverUrl\"\r\n                                    id=\"serverUrl\"\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    required\r\n                                    >\r\n                                    {serverUrl.map(({ label, value }) => (\r\n                                        <option key={value} value={value}>\r\n                                        {label}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                                {errors.serverUrl !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.serverUrl}</span>\r\n                                ) : \"\" } \r\n                        </FormGroup>\r\n                        </Col>\r\n                        {!disabledTables && (\r\n                            <>\r\n                                <Col md={12}>\r\n                                <FormGroup>\r\n                                <Label >Tables</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"tables\"\r\n                                            id=\"tables\"\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        // disabled={}\r\n                                        >\r\n                                            <option >Select Table </option>\r\n                                            {tableList.map((row) => (\r\n                                                <option key={row} value={row}>\r\n                                                {row}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Input>\r\n                                        {errors.tables !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.tables}</span>\r\n                                        ) : \"\" } \r\n                                </FormGroup>\r\n                                </Col>\r\n                            </>\r\n                        )} \r\n                        <div className=\"form-group mb-3 col-md-12\">                                    \r\n                        <div className=\"form-check custom-checkbox ml-1 \">\r\n                            <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"                           \r\n                            name=\"allTables\"\r\n                            id=\"allTables\"\r\n                            checked={disabledTables}\r\n                            onChange={handleInputChangeAll}\r\n                            />\r\n                            <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor=\"basic_checkbox_1\"\r\n                            >\r\n                                All Tables\r\n                            </label>\r\n                        </div>\r\n                        </div>\r\n                        </Row>\r\n                        <br/>\r\n                        {saving ? <Spinner /> : \"\"}\r\n                        <br />\r\n                        \r\n                        <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<SettingsBackupRestoreIcon />}\r\n                            onClick={handleSubmit}\r\n                            \r\n                        >   \r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Upload</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Uploading Please Wait...</span>\r\n                            )\r\n                        } \r\n                        </MatButton>                                          \r\n                        <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={toggle2}\r\n                            className={classes.button}\r\n                            style={{backgroundColor:'#992E62'}}\r\n                            startIcon={<CancelIcon />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>cancel</span>\r\n                        </MatButton>\r\n                    </CardBody>\r\n                </Card> \r\n            </ModalBody>\r\n        </Form>\r\n    </Modal>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n",["108","109"],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Websocket.js",["110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132"],"import React, { useState, useRef, useCallback, useEffect } from 'react'\r\n//import MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"../../../api\";\r\nimport { forwardRef } from 'react';\r\n//import { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//import { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\n//import { MdModeEdit } from \"react-icons/md\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Form,\r\n    Row,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Spinner } from 'reactstrap';\r\n//import { DropzoneArea } from 'material-ui-dropzone';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\nconst SyncList = (props) => {\r\n    let history = useHistory();\r\n  // The state for our timer\r\n  const classes = useStyles()\r\n  const [syncList, setSyncList] = useState( [])\r\n  const [facilities, setFacilities] = useState( [])\r\n  const [serverUrl, setServerUrl] = useState( [])\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const defaultValues = { facilityId: \"\", serverUrl : \"\", allTables:null, tables:\"\" }\r\n  const [uploadDetails, setUploadDetails] = useState(defaultValues);\r\n  const [saving, setSaving] = useState(false);\r\n  const [disabledTables, setDisabledTables] = useState(true);\r\n  const [errors, setErrors] = useState({});\r\n  const [tableList, setTableList] = useState( [])\r\n\r\n    useEffect(() => {\r\n        syncHistory()\r\n        Facilities()\r\n        ServerUrl()\r\n        const timer = setTimeout(() => console.log('Initial timeout!'), 1);\r\n        return () => clearTimeout(timer);\r\n    }, []);\r\n\r\n\r\n    //Public API that will echo messages sent to it back to the client\r\n  const [socketUrl, setSocketUrl] = useState('wss://demo.piesocket.com/v3/channel_123?api_key=VCXCEuvhGcBDP7XhiJJUDvR1e1D3eiVjgZ9VRiaV&notify_self');\r\n  const [messageHistory, setMessageHistory] = useState([]);\r\n\r\n  const { sendMessage, lastMessage, readyState } = useWebSocket(socketUrl);\r\n\r\n  useEffect(() => {\r\n    if (lastMessage !== null) {\r\n      setMessageHistory((prev) => prev.concat(lastMessage));\r\n    }\r\n  }, [lastMessage, setMessageHistory]);\r\n\r\n  const handleClickChangeSocketUrl = useCallback(\r\n    () => setSocketUrl('ws://demos.kaazing.com/echo'),\r\n    []\r\n  );\r\n\r\n  const handleClickSendMessage = useCallback(() => sendMessage('Hello Mathew testing'), []);\r\n\r\n  const connectionStatus = {\r\n    [ReadyState.CONNECTING]: 'Connecting',\r\n    [ReadyState.OPEN]: 'Open',\r\n    [ReadyState.CLOSING]: 'Closing',\r\n    [ReadyState.CLOSED]: 'Closed',\r\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\r\n   }[readyState];\r\n\r\n       \r\n    /*****  Validation */\r\n    const validate = () => {\r\n        let temp = { ...errors };\r\n        temp.facilityId = uploadDetails.facilityId\r\n            ? \"\"\r\n            : \"Facility is required\";\r\n            temp.serverUrl  = uploadDetails.serverUrl \r\n            ? \"\"\r\n            : \"URL is required\";\r\n            \r\n            setErrors({\r\n                ...temp,\r\n            });\r\n            return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n    //GET LIST OF Sync History\r\n    async function syncHistory() {\r\n\r\n        axios\r\n            .get(`${baseUrl}sync/sync-history`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSyncList(response.data);\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function Facilities() {\r\n        axios\r\n            .get(`${baseUrl}sync/facilities`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setFacilities(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.name,\r\n                        value: value.id,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function ServerUrl() {\r\n        axios\r\n            .get(`${baseUrl}sync/remote-urls`,\r\n             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setServerUrl(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.url + \" - \" + value.username,\r\n                        value: value.url,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Tables\r\n    async function TableList(facilityId) {\r\n        axios\r\n            .get(`${baseUrl}sync/table/${facilityId}`,\r\n             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setTableList(\r\n                    Object.entries(response.data).map((row) => ({\r\n                        label: row,\r\n                        value: row,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    const handleInputChange = e => {\r\n        setUploadDetails ({...uploadDetails,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"facilityId\" ){\r\n            TableList(e.target.value)\r\n        }\r\n    }\r\n    const handleInputChangeAll =e =>{\r\n        if(e.target.checked){ \r\n            setUploadDetails({...uploadDetails, [e.target.name]: e.target.checked})\r\n            setDisabledTables(true)\r\n         }else{\r\n            setDisabledTables(false)\r\n         }\r\n \r\n     }\r\n    const handleSubmit = (e) => {\r\n       \r\n        e.preventDefault();\r\n             \r\n            \r\n           if(validate()){\r\n            setSaving(true);\r\n            const defaultTable = uploadDetails.tables!==null ? uploadDetails.tables : null ;\r\n            axios.post(`${baseUrl}sync/upload/${defaultTable}`, uploadDetails,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            toast.success(\"Upload Successful\");\r\n                            syncHistory();\r\n                            //Closing of the modal \r\n                            toggle();\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            toast.error(\"Something went wrong\");\r\n                        });\r\n             }       \r\n      };\r\n\r\n    const syncDataBase =()=> {        \r\n        setModal(!modal)\r\n    }\r\n\r\n    const apiCall = {\r\n        event: 'bts:subscribe',\r\n        data: { channel: 'order_book_btcusd' },\r\n    }; \r\n \r\n    const [bids, setBids] = useState([0]);\r\n\r\n    useEffect(() => {\r\n        const ws = new WebSocket('wss://ws.bitstamp.net');\r\n        ws.onopen = (event) => {\r\n            ws.send(JSON.stringify(apiCall));\r\n        };\r\n        ws.onmessage = function (event) {\r\n            const json = JSON.parse(event.data);\r\n            try {\r\n                if ((json.event == 'data')) {\r\n                    setBids(json.data.bids.slice(0, 5));\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        //clean up function\r\n        return () => ws.close();\r\n    }, []);\r\n    const firstBids = bids.map((item, index) => (\r\n        <div key={index}>\r\n            <p> {item}</p>\r\n        </div>\r\n    ));\r\n  return (\r\n    <div>\r\n       \r\n        <Button\r\n            variant=\"contained\"\r\n            style={{backgroundColor:\"#014d88\", }}\r\n            className=\" float-right mr-1\"\r\n            //startIcon={<FaUserPlus />}\r\n            onClick={syncDataBase}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Upload </span>\r\n        </Button>        \r\n        <br/><br/>\r\n        <div>{firstBids}</div>\r\n        <Button onClick={handleClickChangeSocketUrl}>\r\n            Click Me to change Socket Url\r\n        </Button>\r\n        <Button\r\n            onClick={handleClickSendMessage}\r\n            disabled={readyState !== ReadyState.OPEN}\r\n        >\r\n            Click Me to send 'Hello'\r\n        </Button>\r\n\r\n        <span>The WebSocket is currently {connectionStatus}</span>\r\n        {lastMessage ? <span>Last message: {lastMessage.data}</span> : null}\r\n        <ul>\r\n            {messageHistory.map((message, idx) => (\r\n            <span key={idx}>{message ? message.data : null}</span>\r\n            ))}\r\n        </ul>\r\n             <Form >\r\n  \r\n                <Card >\r\n                    <CardBody>\r\n                        <Row >                                  \r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >Facility *</Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"facilityId\"\r\n                                id=\"facilityId\"\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                required\r\n                                >\r\n                                <option > </option>\r\n                                {facilities.map(({ label, value }) => (\r\n                                    <option key={value} value={value}>\r\n                                    {label}\r\n                                    </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.facilityId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.facilityId}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        </Col> \r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >URL *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"serverUrl\"\r\n                                    id=\"serverUrl\"\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    required\r\n                                    >\r\n                                    {serverUrl.map(({ label, value }) => (\r\n                                        <option key={value} value={value}>\r\n                                        {label}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                                {errors.serverUrl !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.serverUrl}</span>\r\n                                ) : \"\" } \r\n                        </FormGroup>\r\n                        </Col>\r\n                        {!disabledTables && (\r\n                            <>\r\n                                <Col md={12}>\r\n                                <FormGroup>\r\n                                <Label >Tables</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"tables\"\r\n                                            id=\"tables\"\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        // disabled={}\r\n                                        >\r\n                                            <option >Select Table </option>\r\n                                            {tableList.map((row) => (\r\n                                                <option key={row} value={row}>\r\n                                                {row}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Input>\r\n                                        {errors.tables !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.tables}</span>\r\n                                        ) : \"\" } \r\n                                </FormGroup>\r\n                                </Col>\r\n                            </>\r\n                        )} \r\n                        <div className=\"form-group mb-3 col-md-12\">                                    \r\n                        <div className=\"form-check custom-checkbox ml-1 \">\r\n                            <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"                           \r\n                            name=\"allTables\"\r\n                            id=\"allTables\"\r\n                            checked={disabledTables}\r\n                            onChange={handleInputChangeAll}\r\n                            />\r\n                            <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor=\"basic_checkbox_1\"\r\n                            >\r\n                                All Tables\r\n                            </label>\r\n                        </div>\r\n                        </div>\r\n                        </Row>\r\n                        <br/>\r\n                        {saving ? <Spinner /> : \"\"}\r\n                        <br />\r\n                        \r\n                        <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<SettingsBackupRestoreIcon />}\r\n                            onClick={handleSubmit}\r\n                            \r\n                        >   \r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Upload</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Uploading Please Wait...</span>\r\n                            )\r\n                        } \r\n                        </MatButton>                                          \r\n                        <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={toggle}\r\n                            className={classes.button}\r\n                            style={{backgroundColor:'#992E62'}}\r\n                            startIcon={<CancelIcon />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>cancel</span>\r\n                        </MatButton>\r\n                    </CardBody>\r\n                </Card> \r\n          \r\n        </Form>\r\n   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SyncList;\r\n\r\n\r\n","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\SyncList.js",["133","134","135","136","137","138","139","140","141","142"],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\api.js",[],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\SettingList.js",["143","144","145","146","147","148","149"],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Progress.js",[],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\NewPersonalAccessToken.js",["150","151","152","153","154","155","156","157","158","159"],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\UpdateToken.js",["160","161","162","163"],"import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\nRow,Col, Card,CardBody, FormGroup, Input, Label} from 'reactstrap';\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token,  url as baseUrl } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst UpdateToken = (props) => {\r\n    const classes = useStyles()\r\n    const [patDetails, setPatDetails] = useState( { username: props.userToken.username, password: \"\", url:props.userToken.url });\r\n    const [saving, setSaving] = useState(false);\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n      ServerUrl()\r\n    }, []);\r\n    ///GET LIST OF Facilities\r\n    async function ServerUrl() {\r\n          axios\r\n              .get(`${baseUrl}sync/remote-urls`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n              )\r\n              .then((response) => {\r\n                  setServerUrl(\r\n                      Object.entries(response.data).map(([key, value]) => ({\r\n                          label: value.url,\r\n                          value: value.id,\r\n                        }))\r\n                  );\r\n              })\r\n              .catch((error) => {\r\n  \r\n              });\r\n      \r\n    }\r\n    \r\n    const handleInputChange = e => {\r\n      setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n    }\r\n    /*****  Validation */\r\n    const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.username = patDetails.username\r\n        ? \"\"\r\n        : \"Username is required\";\r\n        temp.password = patDetails.password\r\n        ? \"\"\r\n        : \"Password is required\";\r\n        temp.url = patDetails.url\r\n        ? \"\"\r\n        : \"Server URL is required\";\r\n        setErrors({\r\n            ...temp,\r\n        });\r\n        return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n            if (validate()) {      \r\n                    setSaving(true);\r\n                    axios.put(`${baseUrl}sync/remote-access-token/${props.userToken.id}`,patDetails,\r\n                     { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n                    )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            props.ServerUrl()\r\n                            toast.success(\"Token Generated Successful\");\r\n                            props.toggleModal()\r\n\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            toast.error(\"Something went wrong\");\r\n                            props.toggleModal();\r\n                        });\r\n            };\r\n        }\r\n\r\n      \r\n  return (      \r\n      <div >\r\n         \r\n        <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop={false} backdrop=\"static\">\r\n        <Form >\r\n            <ModalHeader toggle={props.toggleModal}>Update Personal Access Token </ModalHeader>\r\n            <ModalBody>\r\n                \r\n                    <Card >\r\n                        <CardBody>\r\n                            <Row >\r\n\r\n                            <Col md={12}>\r\n                            <FormGroup>\r\n                            <Label >Server URL* </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"url\"\r\n                                    id=\"url\"\r\n                                    value={patDetails.url} \r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    required\r\n                                />\r\n                                {errors.url !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.url}</span>\r\n                                ) : \"\" }   \r\n                            </FormGroup>\r\n                            </Col>                \r\n                            <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >Username </Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                id=\"username\" \r\n                                value={patDetails.username}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                required\r\n                            />\r\n                            {errors.username !==\"\" ? (\r\n                                <span className={classes.error}>{errors.username}</span>\r\n                            ) : \"\" }\r\n                        </FormGroup>\r\n                        </Col>\r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >Password </Label>\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\" \r\n                                    value={patDetails.password}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    required\r\n                                />\r\n                                {errors.password !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.password}</span>\r\n                                ) : \"\" }\r\n                        </FormGroup>\r\n                        </Col>                    \r\n                    </Row>\r\n                        {saving ? <Spinner /> : \"\"}\r\n                        <br/>              \r\n                            <Button\r\n                                type='submit'\r\n                                variant='contained'\r\n                                //color='primary'\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                //startIcon={<SettingsBackupRestoreIcon />}\r\n                                onClick={handleSubmit}\r\n                                \r\n                            >   \r\n                                <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>Connect & Update Token</span>  \r\n                            </Button>\r\n                        </CardBody>\r\n                    </Card> \r\n            </ModalBody>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateToken;\r\n","C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Generatekey.js",["164","165","166","167","168","169","170","171","172","173"],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\SendToServer.js",["174","175","176","177","178","179"],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Logs.js",["180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197"],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\index.js",["198","199","200","201","202","203","204","205","206","207","208","209"],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\AppKeyList.js",["210","211","212"],"C:\\LAMISPLUS\\PRIVATE\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\AddAppKey.js",["213","214","215","216","217","218","219","220","221","222","223","224"],{"ruleId":"225","severity":1,"message":"226","line":4,"column":41,"nodeType":"227","messageId":"228","endLine":4,"endColumn":47},{"ruleId":"229","severity":1,"message":"230","line":96,"column":6,"nodeType":"231","endLine":96,"endColumn":16,"suggestions":"232"},{"ruleId":"225","severity":1,"message":"233","line":4,"column":10,"nodeType":"227","messageId":"228","endLine":4,"endColumn":24},{"ruleId":"234","severity":1,"message":"235","line":6,"column":10,"nodeType":"236","messageId":"237","endLine":6,"endColumn":24,"fix":"238"},{"ruleId":"225","severity":1,"message":"239","line":6,"column":19,"nodeType":"227","messageId":"228","endLine":6,"endColumn":24},{"ruleId":"225","severity":1,"message":"240","line":15,"column":12,"nodeType":"227","messageId":"228","endLine":15,"endColumn":18},{"ruleId":"225","severity":1,"message":"241","line":16,"column":12,"nodeType":"227","messageId":"228","endLine":16,"endColumn":21},{"ruleId":"225","severity":1,"message":"242","line":44,"column":11,"nodeType":"227","messageId":"228","endLine":44,"endColumn":28},{"ruleId":"225","severity":1,"message":"243","line":49,"column":11,"nodeType":"227","messageId":"228","endLine":49,"endColumn":23},{"ruleId":"234","severity":1,"message":"235","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":24,"fix":"244"},{"ruleId":"225","severity":1,"message":"245","line":14,"column":44,"nodeType":"227","messageId":"228","endLine":14,"endColumn":48},{"ruleId":"225","severity":1,"message":"246","line":73,"column":12,"nodeType":"227","messageId":"228","endLine":73,"endColumn":20},{"ruleId":"225","severity":1,"message":"247","line":76,"column":21,"nodeType":"227","messageId":"228","endLine":76,"endColumn":31},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"225","severity":1,"message":"252","line":1,"column":27,"nodeType":"227","messageId":"228","endLine":1,"endColumn":33},{"ruleId":"234","severity":1,"message":"235","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":24,"fix":"253"},{"ruleId":"225","severity":1,"message":"254","line":5,"column":10,"nodeType":"227","messageId":"228","endLine":5,"endColumn":20},{"ruleId":"225","severity":1,"message":"255","line":7,"column":8,"nodeType":"227","messageId":"228","endLine":7,"endColumn":14},{"ruleId":"225","severity":1,"message":"256","line":8,"column":8,"nodeType":"227","messageId":"228","endLine":8,"endColumn":19},{"ruleId":"225","severity":1,"message":"257","line":9,"column":8,"nodeType":"227","messageId":"228","endLine":9,"endColumn":13},{"ruleId":"225","severity":1,"message":"258","line":10,"column":8,"nodeType":"227","messageId":"228","endLine":10,"endColumn":19},{"ruleId":"225","severity":1,"message":"259","line":11,"column":8,"nodeType":"227","messageId":"228","endLine":11,"endColumn":20},{"ruleId":"225","severity":1,"message":"260","line":12,"column":8,"nodeType":"227","messageId":"228","endLine":12,"endColumn":13},{"ruleId":"225","severity":1,"message":"261","line":13,"column":8,"nodeType":"227","messageId":"228","endLine":13,"endColumn":21},{"ruleId":"225","severity":1,"message":"262","line":14,"column":8,"nodeType":"227","messageId":"228","endLine":14,"endColumn":12},{"ruleId":"225","severity":1,"message":"263","line":15,"column":8,"nodeType":"227","messageId":"228","endLine":15,"endColumn":18},{"ruleId":"225","severity":1,"message":"264","line":16,"column":8,"nodeType":"227","messageId":"228","endLine":16,"endColumn":17},{"ruleId":"225","severity":1,"message":"265","line":17,"column":8,"nodeType":"227","messageId":"228","endLine":17,"endColumn":16},{"ruleId":"225","severity":1,"message":"266","line":18,"column":8,"nodeType":"227","messageId":"228","endLine":18,"endColumn":14},{"ruleId":"225","severity":1,"message":"267","line":19,"column":8,"nodeType":"227","messageId":"228","endLine":19,"endColumn":15},{"ruleId":"225","severity":1,"message":"268","line":20,"column":8,"nodeType":"227","messageId":"228","endLine":20,"endColumn":14},{"ruleId":"225","severity":1,"message":"269","line":21,"column":8,"nodeType":"227","messageId":"228","endLine":21,"endColumn":18},{"ruleId":"225","severity":1,"message":"270","line":86,"column":9,"nodeType":"227","messageId":"228","endLine":86,"endColumn":16},{"ruleId":"225","severity":1,"message":"246","line":89,"column":10,"nodeType":"227","messageId":"228","endLine":89,"endColumn":18},{"ruleId":"229","severity":1,"message":"271","line":127,"column":89,"nodeType":"231","endLine":127,"endColumn":91,"suggestions":"272"},{"ruleId":"273","severity":1,"message":"274","line":287,"column":33,"nodeType":"275","messageId":"276","endLine":287,"endColumn":35},{"ruleId":"229","severity":1,"message":"277","line":296,"column":8,"nodeType":"231","endLine":296,"endColumn":10,"suggestions":"278"},{"ruleId":"234","severity":1,"message":"235","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":24,"fix":"279"},{"ruleId":"225","severity":1,"message":"280","line":32,"column":45,"nodeType":"227","messageId":"228","endLine":32,"endColumn":57},{"ruleId":"225","severity":1,"message":"281","line":134,"column":10,"nodeType":"227","messageId":"228","endLine":134,"endColumn":22},{"ruleId":"225","severity":1,"message":"282","line":135,"column":10,"nodeType":"227","messageId":"228","endLine":135,"endColumn":26},{"ruleId":"283","severity":1,"message":"284","line":191,"column":51,"nodeType":"285","messageId":"286","endLine":191,"endColumn":76,"fix":"287"},{"ruleId":"283","severity":1,"message":"284","line":194,"column":51,"nodeType":"285","messageId":"286","endLine":194,"endColumn":65,"fix":"288"},{"ruleId":"225","severity":1,"message":"289","line":202,"column":23,"nodeType":"227","messageId":"228","endLine":202,"endColumn":26},{"ruleId":"225","severity":1,"message":"290","line":239,"column":11,"nodeType":"227","messageId":"228","endLine":239,"endColumn":30},{"ruleId":"225","severity":1,"message":"291","line":283,"column":11,"nodeType":"227","messageId":"228","endLine":283,"endColumn":28},{"ruleId":"225","severity":1,"message":"292","line":288,"column":11,"nodeType":"227","messageId":"228","endLine":288,"endColumn":33},{"ruleId":"225","severity":1,"message":"252","line":1,"column":27,"nodeType":"227","messageId":"228","endLine":1,"endColumn":33},{"ruleId":"234","severity":1,"message":"235","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":24,"fix":"293"},{"ruleId":"225","severity":1,"message":"233","line":23,"column":10,"nodeType":"227","messageId":"228","endLine":23,"endColumn":24},{"ruleId":"225","severity":1,"message":"294","line":23,"column":26,"nodeType":"227","messageId":"228","endLine":23,"endColumn":31},{"ruleId":"225","severity":1,"message":"295","line":26,"column":10,"nodeType":"227","messageId":"228","endLine":26,"endColumn":20},{"ruleId":"225","severity":1,"message":"296","line":28,"column":10,"nodeType":"227","messageId":"228","endLine":28,"endColumn":20},{"ruleId":"225","severity":1,"message":"297","line":58,"column":9,"nodeType":"227","messageId":"228","endLine":58,"endColumn":15},{"ruleId":"225","severity":1,"message":"298","line":1,"column":26,"nodeType":"227","messageId":"228","endLine":1,"endColumn":35},{"ruleId":"225","severity":1,"message":"280","line":2,"column":45,"nodeType":"227","messageId":"228","endLine":2,"endColumn":57},{"ruleId":"225","severity":1,"message":"299","line":3,"column":50,"nodeType":"227","messageId":"228","endLine":3,"endColumn":55},{"ruleId":"234","severity":1,"message":"235","line":11,"column":10,"nodeType":"236","messageId":"237","endLine":11,"endColumn":24,"fix":"300"},{"ruleId":"225","severity":1,"message":"301","line":61,"column":12,"nodeType":"227","messageId":"228","endLine":61,"endColumn":19},{"ruleId":"225","severity":1,"message":"302","line":61,"column":21,"nodeType":"227","messageId":"228","endLine":61,"endColumn":31},{"ruleId":"225","severity":1,"message":"303","line":68,"column":12,"nodeType":"227","messageId":"228","endLine":68,"endColumn":31},{"ruleId":"225","severity":1,"message":"242","line":70,"column":11,"nodeType":"227","messageId":"228","endLine":70,"endColumn":28},{"ruleId":"225","severity":1,"message":"304","line":74,"column":11,"nodeType":"227","messageId":"228","endLine":74,"endColumn":19},{"ruleId":"305","severity":1,"message":"306","line":129,"column":127,"nodeType":"307","messageId":"308","endLine":129,"endColumn":144},{"ruleId":"225","severity":1,"message":"280","line":2,"column":45,"nodeType":"227","messageId":"228","endLine":2,"endColumn":57},{"ruleId":"234","severity":1,"message":"235","line":11,"column":10,"nodeType":"236","messageId":"237","endLine":11,"endColumn":24,"fix":"309"},{"ruleId":"225","severity":1,"message":"241","line":63,"column":12,"nodeType":"227","messageId":"228","endLine":63,"endColumn":21},{"ruleId":"305","severity":1,"message":"306","line":137,"column":123,"nodeType":"307","messageId":"308","endLine":137,"endColumn":140},{"ruleId":"225","severity":1,"message":"310","line":1,"column":16,"nodeType":"227","messageId":"228","endLine":1,"endColumn":24},{"ruleId":"225","severity":1,"message":"298","line":1,"column":26,"nodeType":"227","messageId":"228","endLine":1,"endColumn":35},{"ruleId":"225","severity":1,"message":"280","line":2,"column":45,"nodeType":"227","messageId":"228","endLine":2,"endColumn":57},{"ruleId":"225","severity":1,"message":"311","line":6,"column":8,"nodeType":"227","messageId":"228","endLine":6,"endColumn":16},{"ruleId":"225","severity":1,"message":"312","line":9,"column":10,"nodeType":"227","messageId":"228","endLine":9,"endColumn":17},{"ruleId":"225","severity":1,"message":"313","line":10,"column":8,"nodeType":"227","messageId":"228","endLine":10,"endColumn":13},{"ruleId":"225","severity":1,"message":"314","line":11,"column":10,"nodeType":"227","messageId":"228","endLine":11,"endColumn":22},{"ruleId":"225","severity":1,"message":"315","line":12,"column":8,"nodeType":"227","messageId":"228","endLine":12,"endColumn":33},{"ruleId":"225","severity":1,"message":"316","line":56,"column":11,"nodeType":"227","messageId":"228","endLine":56,"endColumn":29},{"ruleId":"305","severity":1,"message":"306","line":71,"column":127,"nodeType":"307","messageId":"308","endLine":71,"endColumn":144},{"ruleId":"225","severity":1,"message":"280","line":2,"column":45,"nodeType":"227","messageId":"228","endLine":2,"endColumn":57},{"ruleId":"234","severity":1,"message":"235","line":11,"column":10,"nodeType":"236","messageId":"237","endLine":11,"endColumn":24,"fix":"317"},{"ruleId":"225","severity":1,"message":"301","line":63,"column":12,"nodeType":"227","messageId":"228","endLine":63,"endColumn":19},{"ruleId":"225","severity":1,"message":"302","line":63,"column":21,"nodeType":"227","messageId":"228","endLine":63,"endColumn":31},{"ruleId":"225","severity":1,"message":"241","line":67,"column":12,"nodeType":"227","messageId":"228","endLine":67,"endColumn":21},{"ruleId":"305","severity":1,"message":"306","line":140,"column":127,"nodeType":"307","messageId":"308","endLine":140,"endColumn":144},{"ruleId":"225","severity":1,"message":"310","line":1,"column":16,"nodeType":"227","messageId":"228","endLine":1,"endColumn":24},{"ruleId":"225","severity":1,"message":"298","line":1,"column":26,"nodeType":"227","messageId":"228","endLine":1,"endColumn":35},{"ruleId":"225","severity":1,"message":"280","line":2,"column":45,"nodeType":"227","messageId":"228","endLine":2,"endColumn":57},{"ruleId":"225","severity":1,"message":"318","line":3,"column":5,"nodeType":"227","messageId":"228","endLine":3,"endColumn":8},{"ruleId":"225","severity":1,"message":"319","line":3,"column":9,"nodeType":"227","messageId":"228","endLine":3,"endColumn":12},{"ruleId":"225","severity":1,"message":"320","line":3,"column":14,"nodeType":"227","messageId":"228","endLine":3,"endColumn":18},{"ruleId":"225","severity":1,"message":"321","line":3,"column":19,"nodeType":"227","messageId":"228","endLine":3,"endColumn":27},{"ruleId":"225","severity":1,"message":"322","line":4,"column":8,"nodeType":"227","messageId":"228","endLine":4,"endColumn":17},{"ruleId":"225","severity":1,"message":"311","line":6,"column":8,"nodeType":"227","messageId":"228","endLine":6,"endColumn":16},{"ruleId":"225","severity":1,"message":"323","line":7,"column":8,"nodeType":"227","messageId":"228","endLine":7,"endColumn":18},{"ruleId":"225","severity":1,"message":"324","line":8,"column":10,"nodeType":"227","messageId":"228","endLine":8,"endColumn":15},{"ruleId":"225","severity":1,"message":"312","line":9,"column":10,"nodeType":"227","messageId":"228","endLine":9,"endColumn":17},{"ruleId":"225","severity":1,"message":"313","line":10,"column":8,"nodeType":"227","messageId":"228","endLine":10,"endColumn":13},{"ruleId":"225","severity":1,"message":"314","line":11,"column":10,"nodeType":"227","messageId":"228","endLine":11,"endColumn":22},{"ruleId":"225","severity":1,"message":"315","line":12,"column":8,"nodeType":"227","messageId":"228","endLine":12,"endColumn":33},{"ruleId":"225","severity":1,"message":"325","line":87,"column":11,"nodeType":"227","messageId":"228","endLine":87,"endColumn":18},{"ruleId":"225","severity":1,"message":"326","line":94,"column":11,"nodeType":"227","messageId":"228","endLine":94,"endColumn":22},{"ruleId":"305","severity":1,"message":"306","line":109,"column":127,"nodeType":"307","messageId":"308","endLine":109,"endColumn":144},{"ruleId":"225","severity":1,"message":"327","line":3,"column":5,"nodeType":"227","messageId":"228","endLine":3,"endColumn":10},{"ruleId":"225","severity":1,"message":"328","line":3,"column":12,"nodeType":"227","messageId":"228","endLine":3,"endColumn":23},{"ruleId":"225","severity":1,"message":"329","line":3,"column":25,"nodeType":"227","messageId":"228","endLine":3,"endColumn":34},{"ruleId":"225","severity":1,"message":"330","line":3,"column":36,"nodeType":"227","messageId":"228","endLine":3,"endColumn":40},{"ruleId":"225","severity":1,"message":"280","line":3,"column":42,"nodeType":"227","messageId":"228","endLine":3,"endColumn":54},{"ruleId":"225","severity":1,"message":"320","line":4,"column":15,"nodeType":"227","messageId":"228","endLine":4,"endColumn":19},{"ruleId":"225","severity":1,"message":"321","line":4,"column":21,"nodeType":"227","messageId":"228","endLine":4,"endColumn":29},{"ruleId":"225","severity":1,"message":"322","line":6,"column":8,"nodeType":"227","messageId":"228","endLine":6,"endColumn":17},{"ruleId":"225","severity":1,"message":"311","line":8,"column":8,"nodeType":"227","messageId":"228","endLine":8,"endColumn":16},{"ruleId":"225","severity":1,"message":"323","line":9,"column":8,"nodeType":"227","messageId":"228","endLine":9,"endColumn":18},{"ruleId":"225","severity":1,"message":"324","line":10,"column":10,"nodeType":"227","messageId":"228","endLine":10,"endColumn":15},{"ruleId":"225","severity":1,"message":"331","line":34,"column":7,"nodeType":"227","messageId":"228","endLine":34,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":24,"fix":"332"},{"ruleId":"225","severity":1,"message":"294","line":24,"column":11,"nodeType":"227","messageId":"228","endLine":24,"endColumn":16},{"ruleId":"225","severity":1,"message":"325","line":105,"column":11,"nodeType":"227","messageId":"228","endLine":105,"endColumn":18},{"ruleId":"225","severity":1,"message":"327","line":3,"column":5,"nodeType":"227","messageId":"228","endLine":3,"endColumn":10},{"ruleId":"225","severity":1,"message":"328","line":3,"column":12,"nodeType":"227","messageId":"228","endLine":3,"endColumn":23},{"ruleId":"225","severity":1,"message":"329","line":3,"column":25,"nodeType":"227","messageId":"228","endLine":3,"endColumn":34},{"ruleId":"225","severity":1,"message":"330","line":3,"column":36,"nodeType":"227","messageId":"228","endLine":3,"endColumn":40},{"ruleId":"225","severity":1,"message":"280","line":3,"column":42,"nodeType":"227","messageId":"228","endLine":3,"endColumn":54},{"ruleId":"225","severity":1,"message":"320","line":4,"column":15,"nodeType":"227","messageId":"228","endLine":4,"endColumn":19},{"ruleId":"225","severity":1,"message":"321","line":4,"column":21,"nodeType":"227","messageId":"228","endLine":4,"endColumn":29},{"ruleId":"225","severity":1,"message":"322","line":6,"column":8,"nodeType":"227","messageId":"228","endLine":6,"endColumn":17},{"ruleId":"225","severity":1,"message":"311","line":8,"column":8,"nodeType":"227","messageId":"228","endLine":8,"endColumn":16},{"ruleId":"225","severity":1,"message":"323","line":9,"column":8,"nodeType":"227","messageId":"228","endLine":9,"endColumn":18},{"ruleId":"225","severity":1,"message":"324","line":10,"column":10,"nodeType":"227","messageId":"228","endLine":10,"endColumn":15},{"ruleId":"225","severity":1,"message":"331","line":34,"column":7,"nodeType":"227","messageId":"228","endLine":34,"endColumn":17},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'urlTabs'. Either include it or remove the dependency array.","ArrayExpression",["333"],"'ToastContainer' is defined but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"334","text":"335"},"'token' is defined but never used.","'saving' is assigned a value but never used.","'serverUrl' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.",{"range":"336","text":"335"},"'Icon' is defined but never used.","'syncList' is assigned a value but never used.","'setLoading' is assigned a value but never used.","no-native-reassign",["337"],"no-negated-in-lhs",["338"],"'useRef' is defined but never used.",{"range":"339","text":"335"},"'forwardRef' is defined but never used.","'AddBox' is defined but never used.","'ArrowUpward' is defined but never used.","'Check' is defined but never used.","'ChevronLeft' is defined but never used.","'ChevronRight' is defined but never used.","'Clear' is defined but never used.","'DeleteOutline' is defined but never used.","'Edit' is defined but never used.","'FilterList' is defined but never used.","'FirstPage' is defined but never used.","'LastPage' is defined but never used.","'Remove' is defined but never used.","'SaveAlt' is defined but never used.","'Search' is defined but never used.","'ViewColumn' is defined but never used.","'history' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'sendMessage'. Either include it or remove the dependency array.",["340"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'apiCall'. Either include it or remove the dependency array.",["341"],{"range":"342","text":"335"},"'FormFeedback' is defined but never used.","'showErrorObj' is assigned a value but never used.","'showErrorFileObj' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['all'] found.","Property","unnecessarilyComputedProperty",{"range":"343","text":"344"},{"range":"345","text":"344"},"'res' is assigned a value but never used.","'displaySendToServer' is assigned a value but never used.","'displayErrorTable' is assigned a value but never used.","'backToGenerateJsonFile' is assigned a value but never used.",{"range":"346","text":"335"},"'toast' is defined but never used.","'MdModeEdit' is defined but never used.","'makeStyles' is defined but never used.","'toggle' is assigned a value but never used.","'useEffect' is defined but never used.","'Table' is defined but never used.",{"range":"347","text":"335"},"'urlHide' is assigned a value but never used.","'setUrlHide' is assigned a value but never used.","'dataJSONFileContent' is assigned a value but never used.","'validate' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",{"range":"348","text":"335"},"'useState' is defined but never used.","'SaveIcon' is defined but never used.","'Spinner' is defined but never used.","'axios' is defined but never used.","'DropzoneArea' is defined but never used.","'SettingsBackupRestoreIcon' is defined but never used.","'GenerateKeyProcess' is assigned a value but never used.",{"range":"349","text":"335"},"'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'MatButton' is defined but never used.","'CancelIcon' is defined but never used.","'Alert' is defined but never used.","'classes' is assigned a value but never used.","'LogsProcess' is assigned a value but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Form' is defined but never used.","'tableIcons' is assigned a value but never used.",{"range":"350","text":"335"},{"desc":"351","fix":"352"},[195,209],"token",[154,168],"no-global-assign","no-unsafe-negation",[157,171],{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},[134,148],[7486,7493],"'all'",[7620,7627],[142,156],[457,471],[450,464],[454,468],[134,148],"Update the dependencies array to be: [urlIndex, urlTabs]",{"range":"357","text":"358"},"Update the dependencies array to be: [sendMessage]",{"range":"359","text":"360"},"Update the dependencies array to be: [apiCall]",{"range":"361","text":"362"},[2459,2469],"[urlIndex, urlTabs]",[4573,4575],"[sendMessage]",[9701,9703],"[apiCall]"]