[{"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\index.js":"1","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\App.js":"2","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Dashboard.js":"5","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\context\\ThemeDemo.js":"6","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Utils\\PageUtils.js":"7","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\index.js":"8","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\AppKeyList.js":"9","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\SyncList.js":"10","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\SettingList.js":"11","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\api.js":"12","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Progress.js":"13","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\SendToServer.js":"14","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Generatekey.js":"15","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Logs.js":"16","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\AddAppKey.js":"17","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\NewPersonalAccessToken.js":"18","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\CopyToClipBoard.js":"19","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\GeneratedFilesList.js":"20","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Utils\\TableUtils.js":"21"},{"size":753,"mtime":1700648400238,"results":"22","hashOfConfig":"23"},{"size":926,"mtime":1700648400237,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1700648403379,"results":"25","hashOfConfig":"23"},{"size":9235,"mtime":1700648400853,"results":"26","hashOfConfig":"23"},{"size":4017,"mtime":1700752166886,"results":"27","hashOfConfig":"23"},{"size":3056,"mtime":1700648400854,"results":"28","hashOfConfig":"23"},{"size":275,"mtime":1700648403368,"results":"29","hashOfConfig":"23"},{"size":2078,"mtime":1700648403358,"results":"30","hashOfConfig":"23"},{"size":8567,"mtime":1700956769986,"results":"31","hashOfConfig":"23"},{"size":23233,"mtime":1700950732647,"results":"32","hashOfConfig":"23"},{"size":8814,"mtime":1700900896529,"results":"33","hashOfConfig":"23"},{"size":423,"mtime":1700849793723,"results":"34","hashOfConfig":"23"},{"size":489,"mtime":1700648403360,"results":"35","hashOfConfig":"23"},{"size":7938,"mtime":1700923607860,"results":"36","hashOfConfig":"23"},{"size":4035,"mtime":1700909871097,"results":"37","hashOfConfig":"23"},{"size":6866,"mtime":1700925650315,"results":"38","hashOfConfig":"23"},{"size":11136,"mtime":1700957464140,"results":"39","hashOfConfig":"23"},{"size":6081,"mtime":1700900841721,"results":"40","hashOfConfig":"23"},{"size":1365,"mtime":1700907584695,"results":"41","hashOfConfig":"23"},{"size":4100,"mtime":1700951226060,"results":"42","hashOfConfig":"23"},{"size":2295,"mtime":1700927489826,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"110h4gm",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"63","usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":3,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\index.js",["100"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n",["101","102"],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\App.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Dashboard.js",["103"],"import React, {useEffect, useState} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\nimport {getQueryParams} from \"./../components/Utils/PageUtils\";\r\n\r\nimport SyncList from './Sync/SyncList';\r\nimport Setting from './Settings/index';\r\nimport AppKey from './Appkey/AppKeyList'\r\n\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport CloudSyncIcon from '@mui/icons-material/CloudSync';\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    fontSize: \"20px\",\r\n    fontWeight: \"bold\",\r\n    padding: \"5px\",\r\n    paddingBottom: \"10px\",\r\n  },\r\n  inforoot: {\r\n    margin: \"5px\",\r\n  },\r\n\r\n  dropdown: {\r\n    marginTop :\"50px\"\r\n   \r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  downmenu: {\r\n    display: 'flex'\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={5}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    \"aria-controls\": `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\nfunction HomePage(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(null);\r\n  const getstate= props.location && props.location.state ? props.location.state : \" \" ;\r\n  const urlIndex = getQueryParams(\"tab\", props.location && props.location.search ? props.location.search : \"\"); \r\n  const urlTabs = urlIndex !== null ? urlIndex : getstate ;\r\n  useEffect ( () => {\r\n\r\n    switch(urlTabs){  \r\n      case \"database-sync\": return setValue(0)\r\n      case \"setting\": return setValue(1)\r\n\r\n      default: return setValue(0)\r\n    }\r\n  }, [urlIndex]);\r\n  \r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n     <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>Central Sync</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <br/>\r\n    <div className={classes.root} >\r\n      <AppBar position=\"static\" style={{backgroundColor:'#fff'}}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"primary\"\r\n          aria-label=\"scrollable force tabs example\"\r\n        >\r\n           <Tab className={classes.title} label=\"Generate & Upload JSON Files\" icon={<CloudSyncIcon />} {...a11yProps(0)} />\r\n         \r\n          {/*<Tab className={classes.title} label=\"WebSocket  \" icon={<SettingsIcon />} {...a11yProps(1)}/> */}\r\n          <Tab className={classes.title} label=\"APP Key Management\" icon={<SettingsIcon />} {...a11yProps(2)}/>\r\n          <Tab className={classes.title} label=\"Configuration  \" icon={<SettingsIcon />} {...a11yProps(1)}/> \r\n      </Tabs>\r\n      </AppBar>\r\n\r\n     \r\n      <TabPanel value={value} index={0}>\r\n      <SyncList />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <AppKey />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <Setting />\r\n      </TabPanel>\r\n       \r\n     </div> \r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default HomePage;\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Utils\\PageUtils.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\index.js",["104","105","106","107","108","109","110"],"import React, {useState, useEffect} from 'react'\r\nimport axios from \"axios\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport SettingList from './SettingList' \r\n\r\n\r\n\r\nconst TabExampleMenuPositionRight = (props) => {\r\n\r\n    const defaultValues = { username: \"\", password: \"\", url:\"\" }\r\n    const [patDetails, setPatDetails] = useState(defaultValues);\r\n    const [saving, setSaving] = useState(false);\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      ServerUrl()\r\n    }, []);\r\n        ///GET LIST OF Facilities\r\n        async function ServerUrl() {\r\n          axios\r\n              .get(`${baseUrl}sync/remote-urls`,\r\n              //{ headers: {\"Authorization\" : `Bearer ${token}`} }\r\n              )\r\n              .then((response) => {\r\n                  console.log(response.data)\r\n                  setServerUrl(\r\n                      Object.entries(response.data).map(([key, value]) => ({\r\n                          label: value.url,\r\n                          value: value.id,\r\n                        }))\r\n                  );\r\n              })\r\n              .catch((error) => {\r\n  \r\n              });\r\n      \r\n      }\r\n    \r\n    const handleInputChange = e => {\r\n      setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n      console.log(patDetails)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();      \r\n      setSaving(true);\r\n      axios.post(`${baseUrl}sync/remote-access-token`,\r\n     // { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n      patDetails\r\n      )\r\n        .then(response => {\r\n            setSaving(false);\r\n            toast.success(\"Token Generated Successful\");\r\n\r\n        })\r\n        .catch(error => {\r\n            setSaving(false);\r\n            toast.error(\"Something went wrong\");\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n  return (    \r\n          \r\n          <SettingList />\r\n        )\r\n\r\n}\r\n\r\nexport default TabExampleMenuPositionRight","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\AppKeyList.js",["111","112","113","114","115"],"import React, { useState, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {Row, Col} from 'reactstrap';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//import { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\n//import { MdModeEdit } from \"react-icons/md\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Dropdown,Button as Buuton2, Menu,  } from 'semantic-ui-react'\r\nimport AddAppKey from \"./AddAppKey\";\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AppKeyList = (props) => {\r\n    //let history = useHistory();\r\n    // The state for our timer\r\n    const classes = useStyles()\r\n    const [keyList, setKeyList] = useState( [])\r\n    const [appKeysListTable, showAppKeysListTable] = useState( true)\r\n    const [keyObj, setKeyObj] = useState( null)\r\n    const [showViewKey, setShowViewKey] = useState(false)\r\n    useEffect(() => {\r\n        AppKeyHistory();\r\n    }, []);\r\n\r\n    ///GET LIST OF Sync History\r\n    async function AppKeyHistory() {\r\n        axios\r\n            .get(`${baseUrl}sync/app-key`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setKeyList(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    const createAppKey =()=> {\r\n        setShowViewKey(false)\r\n        showAppKeysListTable(false)\r\n    }\r\n    const updateKey = (rowObj) => {\r\n        setShowViewKey(false)\r\n        showAppKeysListTable(false)\r\n        setKeyObj(rowObj)\r\n    }\r\n    const viewAppKey =(rowObj)=> {\r\n        setShowViewKey(true)\r\n        setKeyObj(rowObj)\r\n        showAppKeysListTable(false)\r\n    }\r\n    //\r\n\r\n    return (\r\n        <div>\r\n            {appKeysListTable ? (<>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{backgroundColor: keyList.length === 0 && \"#014d88\" }}\r\n                    className=\" float-right mr-1\"\r\n                    //startIcon={<FaUserPlus />}\r\n                    onClick={createAppKey}\r\n                    disabled={keyList.length > 0}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Add App Key </span>\r\n                </Button>\r\n                <br/><br/>\r\n                <MaterialTable\r\n                    icons={tableIcons}\r\n                    title=\"APP Key List \"\r\n                    columns={[\r\n                        // { title: \" ID\", field: \"Id\" },\r\n                        {\r\n                            title: \"Facility Name\",\r\n                            field: \"facilityName\",\r\n                        },\r\n                        { title: \"Server Url\", field: \"serverUrl\", filtering: false },\r\n                        { title: \"Action\", field: \"actions\", filtering: false },\r\n                    ]}\r\n                    data={ keyList.map((row) => ({\r\n                        //Id: manager.id,\r\n                        facilityName: row.facilityName,\r\n                        serverUrl: row.serverUrl,\r\n                        actions:(<div>\r\n                            <Menu.Menu position='right'  >\r\n                                <Menu.Item >\r\n                                    <Buuton2 style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                                        <Dropdown item text='Action'>\r\n\r\n                                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n\r\n                                                <Dropdown.Item  onClick={() => viewAppKey(row)}><VisibilityIcon color=\"primary\"/>View key\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item  onClick={() => updateKey(row)}><Edit color=\"primary\"/>Edit key\r\n                                                </Dropdown.Item>\r\n\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </Buuton2>\r\n                                </Menu.Item>\r\n                            </Menu.Menu>\r\n                        </div>)\r\n                    }))}\r\n\r\n                    options={{\r\n                        headerStyle: {\r\n                            backgroundColor: \"#014d88\",\r\n                            color: \"#fff\",\r\n                        },\r\n                        searchFieldStyle: {\r\n                            width : '200%',\r\n                            margingLeft: '250px',\r\n                        },\r\n                        filtering: false,\r\n                        exportButton: true,\r\n                        searchFieldAlignment: 'left',\r\n                        pageSizeOptions:[10,20,100],\r\n                        pageSize:10,\r\n                        debounceInterval: 400\r\n                    }}\r\n                />\r\n            </>)\r\n                :\r\n            (<>\r\n            <AddAppKey setShowViewKey={setShowViewKey} showViewKey={showViewKey} showAppKeysListTable={showAppKeysListTable} AppKeyHistory={AppKeyHistory} keyObj={keyObj}/>\r\n            </>)\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppKeyList;\r\n\r\n\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\SyncList.js",["116","117","118","119","120","121","122","123","124","125","126","127"],"import React, { useState, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport Progress from './Progress';\r\nimport CloudUpload from '@material-ui/icons/CloudUpload';\r\nimport moment from \"moment\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//import { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\n//import { MdModeEdit } from \"react-icons/md\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\n    Row,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport FileSaver from \"file-saver\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Dropdown,Button as Buuton2, Menu,  } from 'semantic-ui-react'\r\nimport Logs from \"./Logs\";\r\nimport SendToServer from \"./SendToServer\";\r\nimport Generatekey from \"./Generatekey\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport GeneratedFilesList from './GeneratedFilesList';\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\nconst SyncList = (props) => {\r\n  //let history = useHistory();\r\n  // The state for our timer\r\n  const classes = useStyles()\r\n  const [syncList, setSyncList] = useState( [])\r\n  const [facilities, setFacilities] = useState( [])\r\n  const [modal, setModal] = useState(false);\r\n  const [generateFilesGrid, setGenerateFilesGrid] = useState(false);\r\n  const [generateKeyModal, setGenerateKeyModal] = useState(false);\r\n  const [genKey, setGenKey] = useState(\"\");\r\n  const [sendToServerModal, setSendToServerModal] = useState(false);\r\n  const [logModal, setLogModal] = useState(false);\r\n  const [messageLogsToDisplay, setMessageLogsToDisplay] = useState([]);\r\n  const toggle = () => setModal(!modal);\r\n  const toggleLogModal = () => setLogModal(!logModal);\r\n  const toggleGenerateFilesGrid = () => setGenerateFilesGrid(!generateFilesGrid);\r\n  const toggleGenerateKeyModal = () => setGenerateKeyModal(!generateKeyModal);\r\n  const toggleSendToServerModal = () => setSendToServerModal(!sendToServerModal);\r\n  const [modal2, setModal2] = useState(false);\r\n  const toggle2 = () => setModal2(!modal2);\r\n  const defaultValues = { facilityId: \"\", startDate : \"\", endDate:\"\", all:false}\r\n  const [uploadDetails, setUploadDetails] = useState(defaultValues);\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n  const [showErrorTable, setShowErrorTable] = useState(false);\r\n  const [showErrorObj, setShowErrorObj] = useState([]);\r\n  const [showErrorFileObj, setShowErrorFileObj] = useState();\r\n  const [rowObj, setRowObj] = useState(null);\r\n  const [syncHistoryId, setSyncHistoryId] = useState();\r\n\r\nuseEffect(() => {\r\n    Facilities();\r\n    JsonSyncHistory();\r\n    }, []);\r\n\r\n    const varient = (value) => {\r\n        // console.log(value);\r\n        if (value <= 20) {\r\n          return \"danger\";\r\n        } else if (value > 20 && value <= 69) {\r\n          return \"warning\";\r\n        } else if (value >= 70 && value <= 99) {\r\n          return \"info\";\r\n        } else if (value === 100) {\r\n          return \"success\";\r\n        } else {\r\n          return \"success\";\r\n        }\r\n      };\r\n\r\n    /*****  Validation */\r\n    const validate = () => {\r\n        let temp = { ...errors };\r\n        temp.facilityId = uploadDetails.facilityId\r\n            ? \"\"\r\n            : \"Facility is required\";\r\n            setErrors({\r\n                ...temp,\r\n            });\r\n            return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n     ///GET LIST OF Sync History\r\n    async function JsonSyncHistory() {\r\n        axios\r\n            .get(`${baseUrl}export/sync-histories`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSyncList(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function Facilities() {\r\n        axios\r\n            .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setFacilities(\r\n                    Object.entries(response.data.applicationUserOrganisationUnits).map(([key, value]) => ({\r\n                        label: value.organisationUnitName,\r\n                        value: value.organisationUnitId,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    const handleInputChange = e => {\r\n        setUploadDetails ({...uploadDetails,  [e.target.name]: e.target.value});\r\n    }\r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setUploadDetails ({...uploadDetails,  ['all']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setUploadDetails ({...uploadDetails,  ['all']: false}); \r\n        }\r\n    }\r\n    const handleSubmit = async e => {  \r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            try {\r\n                const res = await axios.get(`${baseUrl}export/all?facilityId=${uploadDetails.facilityId}&current=${uploadDetails.all}`, {\r\n                    headers: {\"Authorization\" : `Bearer ${token}`},\r\n                    onUploadProgress: progressEvent => {\r\n                        setUploadPercentage(\r\n                        parseInt(\r\n                            Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n                        )\r\n                        );\r\n                        // Clear percentage\r\n                        setTimeout(() => setUploadPercentage(0), 10000);\r\n                    }\r\n                });\r\n                toast.success(\"JSON Extraction was successful!\");\r\n                toggle();\r\n                JsonSyncHistory();\r\n                setSaving(false);\r\n            } catch (err) {\r\n                setSaving(false); \r\n                }  \r\n        }else{\r\n            toast.error(\"Please select facility\");\r\n        }    \r\n       \r\n    };\r\n\r\n    const fetchGeneratedFiles = (id) => {\r\n\r\n    }\r\n\r\n    const generateJsonFile =()=> {        \r\n        setModal(!modal)\r\n    }\r\n    const displayGeneratedfiles = (row) => {\r\n        setSyncHistoryId(row.id);\r\n        setGenerateFilesGrid(true);\r\n    }\r\n    const displayGenerateKey =(row)=> {\r\n        setGenKey(row.genKey);\r\n        setGenerateKeyModal(!generateKeyModal);\r\n    }\r\n    const displayLogs =(row)=> {\r\n        setMessageLogsToDisplay(row.messageLog)\r\n        setLogModal(!logModal)\r\n    }\r\n    const sendToServerAction =(rowObj)=> {\r\n        setSendToServerModal(!sendToServerModal);\r\n        setRowObj(rowObj)\r\n        //src/main/webapp/jsx/components/Sync/SendToServer.js\r\n    }\r\n    const displaySendToServer =()=> {\r\n        setSendToServerModal(!sendToServerModal)\r\n    }\r\n    const downloadFile = (fileName) => {\r\n        axios\r\n            .get(`${baseUrl}export/download/${fileName}`,\r\n                {headers: {\"Authorization\": `Bearer ${token}`}, responseType: 'blob'}\r\n            )\r\n            .then((response) => {\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}`);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // const  sendToServerAction = (fileName,facilityId) => {\r\n    //     setModal2(true)\r\n    //      //SENDING A POST REQUEST\r\n    //      axios.post(`${baseUrl}export/send-data?fileName=${fileName}&facilityId=${facilityId}`,fileName,\r\n    //                  { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n    //                )\r\n    //         .then(response => {\r\n    //             console.log(\"the server call is completed\")\r\n    //         window.setTimeout(() => {\r\n    //             toast.success(\" Uploading To server Successful!\");\r\n    //             setModal2(false)\r\n    //             JsonSyncHistory()\r\n    //         }, 1000);\r\n    //         })\r\n    //         .catch(error => {\r\n    //             //console.log(\"the server call error\")\r\n    //             //toast.error(\" Something went wrong!\");\r\n    //             if(error.response && error.response.data){\r\n    //                 let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n    //                 toast.error(errorMessage);\r\n    //                 setModal2(false)\r\n    //             }\r\n    //             else{\r\n    //                 setModal2(false)\r\n    //                 toast.error(\"Something went wrong. Please try again...\");\r\n    //             }\r\n    //     });\r\n    // }\r\n    const displayErrorTable =(row)=> {        \r\n        setShowErrorTable(true)\r\n        setShowErrorFileObj(row)\r\n        setShowErrorObj(row.errorLog)\r\n    }\r\n    const backToGenerateJsonFile =()=> {        \r\n        setShowErrorTable(false)\r\n    }\r\n\r\n \r\n  return (\r\n    <>\r\n    { !generateFilesGrid ? (<div>\r\n            {!showErrorTable && (<>\r\n                <Button\r\n                variant=\"contained\"\r\n                style={{backgroundColor:\"#014d88\", }}\r\n                className=\" float-right mr-1\"\r\n                //startIcon={<FaUserPlus />}\r\n                onClick={generateJsonFile}\r\n                >\r\n                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Generate JSON Files </span>\r\n                </Button>       \r\n            <br/><br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n                title=\"Generated JSON Files List \"\r\n                columns={[\r\n                // { title: \" ID\", field: \"Id\" },\r\n                {\r\n                    title: \"Facility Name\",\r\n                    field: \"facilityName\",\r\n                },\r\n                { title: \"File Name \", field: \"tableName\", filtering: false },\r\n                { title: \"Upload Size \", field: \"uploadSize\", filtering: false },\r\n                { title: \"Upload Percentage \", field: \"uploadPercentage\", filtering: false },\r\n                { title: \"Date Generated \", field: \"date\", filtering: false },\r\n                { title: \"Status\", field: \"status\", filtering: false },         \r\n                { title: \"Action\", field: \"actions\", filtering: false }, \r\n                ]}\r\n                data={ syncList.map((row) => ({\r\n                    //Id: manager.id,\r\n                    facilityName: row.facilityName,\r\n                    tableName: row.tableName,\r\n                    uploadSize: row.uploadSize,\r\n                    uploadPercentage: (<div>\r\n                        <ProgressBar\r\n                            now={row.percentageSynced}\r\n                            variant={varient(row.percentageSynced)}\r\n                            label={`${row.percentageSynced}%`}\r\n                            />\r\n                    </div>),\r\n                    date:  moment(row.dateLastSync).format(\"LLLL\"),\r\n                    status: row.messageLog===null ? row.processed===0 ? \"Processing\" : \"Completed\" : \"Error\",\r\n                    //errorLog: row.errorLog,\r\n                    actions:(<div>\r\n                                <Menu.Menu position='right'  >\r\n                                <Menu.Item >\r\n                                    <Buuton2 style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                                    <Dropdown item text='Action'>\r\n\r\n                                    <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n\r\n                                            <Dropdown.Item  onClick={() => downloadFile(row.tableName)}><CloudDownloadIcon color=\"primary\"/> Download File\r\n                                            </Dropdown.Item>\r\n                                            <Dropdown.Item  onClick={() => sendToServerAction(row)}><CloudUpload color=\"primary\"/> Send To Server\r\n                                            </Dropdown.Item>\r\n                                            <Dropdown.Item  onClick={() => displayGeneratedfiles(row)}><VisibilityIcon color=\"primary\"/>View Generated Files\r\n                                            </Dropdown.Item>\r\n                                            <Dropdown.Item  onClick={() => displayGenerateKey(row)}><VisibilityIcon color=\"primary\"/>View Generated Key\r\n                                            </Dropdown.Item>\r\n                                            <Dropdown.Item  onClick={() => displayLogs(row)}><VisibilityIcon color=\"primary\"/>View Logs\r\n                                            </Dropdown.Item>\r\n\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                                    </Buuton2>\r\n                                </Menu.Item>\r\n                                </Menu.Menu>\r\n                            </div>)\r\n                    }))}\r\n            \r\n                    options={{\r\n                            headerStyle: {\r\n                                backgroundColor: \"#014d88\",\r\n                                color: \"#fff\",\r\n                            },\r\n                            searchFieldStyle: {\r\n                                width : '200%',\r\n                                margingLeft: '250px',\r\n                            },\r\n                            filtering: false,\r\n                            exportButton: true,\r\n                            searchFieldAlignment: 'left',\r\n                            pageSizeOptions:[10,20,100],\r\n                            pageSize:10,\r\n                            debounceInterval: 400\r\n                    }}\r\n            />\r\n            </>)}\r\n\r\n            <Modal isOpen={modal} toggle={toggle} className={props.className} size=\"lg\"  backdrop=\"static\">\r\n                <Form >\r\n                <ModalHeader toggle={toggle}>Generate JSON Files</ModalHeader>\r\n                    <ModalBody>   \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >                                  \r\n                                <Col md={12}>\r\n                                <FormGroup>\r\n                                <Label >Facility *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"facilityId\"\r\n                                        id=\"facilityId\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        vaulue={uploadDetails.facilityId}\r\n                                        >\r\n                                        <option > </option>\r\n                                        {facilities.map(({ label, value }) => (\r\n                                            <option key={value} value={value}>\r\n                                            {label}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                    {errors.facilityId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.facilityId}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                                </Col> \r\n                                <div className=\"form-check custom-checkbox ml-3 \">\r\n                                    <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    name=\"all\"\r\n                                    id=\"all\"                                        \r\n                                    onChange={handleCheckBox}\r\n                                    checked={uploadDetails.all}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    <label\r\n                                    className=\"form-check-label\"\r\n                                    htmlFor=\"all\"\r\n                                    >\r\n                                    Recent Update ?\r\n                                    </label>\r\n                                </div>\r\n                                </Row>\r\n                                <br/>\r\n                                <b>{uploadDetails.all===true ? \"Only the updated records will be pushed\" : \"You are pushing record from initial\"}</b>\r\n                                <br/>\r\n                                {saving ?\r\n                                <Progress percentage={uploadPercentage} /> \r\n                                : \"\"}\r\n                                <br />\r\n                                \r\n                                <MatButton\r\n                                    type='submit'\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    className={classes.button}\r\n                                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    startIcon={<SettingsBackupRestoreIcon />}\r\n                                    onClick={handleSubmit}\r\n                                    \r\n                                >   \r\n                                    {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Generate</span>\r\n                                    ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Generating Please Wait...</span>\r\n                                    )\r\n                                } \r\n                                </MatButton>                                          \r\n                                <MatButton\r\n                                    variant='contained'\r\n                                    color='default'\r\n                                    onClick={toggle}\r\n                                    className={classes.button}\r\n                                    style={{backgroundColor:'#992E62'}}\r\n                                    startIcon={<CancelIcon />}\r\n                                >\r\n                                    <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>cancel</span>\r\n                                </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </ModalBody>\r\n                </Form>\r\n            </Modal>\r\n            <Modal isOpen={modal2} toggle={toggle2} backdrop={false} fade={true} style={{marginTop:\"250px\"}} size='lg'>            \r\n                <ModalBody>\r\n                    <h1>Uploading File To Server. Please wait...</h1>\r\n                </ModalBody>\r\n            </Modal>\r\n\r\n            <SendToServer toggleModal={toggleSendToServerModal} showModal={sendToServerModal} rowObj={rowObj}/>\r\n            <Logs toggleModal={toggleLogModal} showModal={logModal} messageLogsToDisplay={messageLogsToDisplay}  />\r\n            <Generatekey toggleModal={toggleGenerateKeyModal} showModal={generateKeyModal} genKey={genKey}  />\r\n        </div>\r\n        ) : (\r\n            <GeneratedFilesList setGenerateFilesGrid={setGenerateFilesGrid} id={syncHistoryId} />\r\n        )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SyncList;\r\n\r\n\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\SettingList.js",["128","129","130","131","132","133","134"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport NewPersonalAccessToken from './NewPersonalAccessToken';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Dropdown,Button as Buuton2, Menu,  } from 'semantic-ui-react'\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst SettingList = (props) => {\r\n\r\n  const [serverConfig, setServerConfig] = useState( [])\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const toggleModal = () => setShowModal(!showModal);\r\n  const [configDetailObj, setConfigDetailObj] = useState(null)\r\n    const [showConfigView, setShowConfigView] = useState(false)\r\n  useEffect(() => {\r\n      ServerConfigFile()\r\n  }, []);\r\n    ///GET LIST OF Remote URL\r\n    async function ServerConfigFile() {\r\n        axios\r\n            .get(`${baseUrl}sync/sync-config`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setServerConfig(response.data)\r\n                \r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n\r\n    }\r\n    const uploadConfigFile =()=> {\r\n        setShowModal(!showModal)\r\n    }\r\n    const viewConfigDetail =(row)=> {\r\n        setShowConfigView(true)\r\n        setConfigDetailObj(row)\r\n    }\r\n    const backButton =()=> {\r\n        setShowConfigView(false)\r\n    }\r\n    \r\n \r\n  return (\r\n    <div>\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-right mr-1\"\r\n            //startIcon={<FaUserPlus />}\r\n            style={{backgroundColor:\"#014d88\"}}\r\n            onClick={showConfigView ? backButton : uploadConfigFile}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>{showConfigView ? \"<< Back\" : \"Upload Config File\"} </span>\r\n        </Button>        \r\n        <br/><br/>\r\n        <br/>\r\n        {!showConfigView && (\r\n              <MaterialTable\r\n               icons={tableIcons}\r\n                title=\"Config Information \"\r\n                columns={[\r\n                        { title: \" File Name\", field: \"name\" },\r\n                        {\r\n                        title: \"Version\",\r\n                        field: \"version\",\r\n                        },\r\n                        { title: \"Release Date\", field: \"releaseDate\", filtering: false },\r\n                        { title: \"Upload Date\", field: \"uploadDate\", filtering: false },\r\n                        {title: \"Status\", field: \"status\", filtering: false },\r\n                        { title: \"Action\", field: \"actions\", filtering: false },\r\n\r\n\r\n                ]}\r\n                data={ serverConfig.map((row) => ({\r\n                    //Id: manager.id,\r\n                      name: row.name,\r\n                      version: row.version,\r\n                      releaseDate: row.releaseDate,\r\n                      uploadDate: row.uploadDate,\r\n                      status:row.active===true ? \"Active\" : \"previous\",\r\n                      actions:(<div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Buuton2 style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                <Dropdown.Item  onClick={() =>viewConfigDetail(row)}><VisibilityIcon /> View </Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Buuton2>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>)\r\n\r\n                    }))}\r\n\r\n                          options={{\r\n                            headerStyle: {\r\n                                backgroundColor: \"#014d88\",\r\n                                color: \"#fff\",\r\n                            },\r\n                            searchFieldStyle: {\r\n                                width : '200%',\r\n                                margingLeft: '250px',\r\n                            },\r\n                            filtering: false,\r\n                            exportButton: false,\r\n                            searchFieldAlignment: 'left',\r\n                            pageSizeOptions:[10,20,100],\r\n                            pageSize:10,\r\n                            debounceInterval: 400\r\n                        }}\r\n                 />\r\n        )}\r\n        {showConfigView && (\r\n            <>\r\n\r\n                <MaterialTable\r\n                    icons={tableIcons}\r\n                    title={\"Config Information - \" + configDetailObj.name}\r\n                    columns={[\r\n                        { title: \" Module Name\", field: \"moduleName\" },\r\n                        {\r\n                            title: \"Version\",\r\n                            field: \"version\",\r\n                        },\r\n                    ]}\r\n                    data={ configDetailObj.configModules.map((row) => ({\r\n                        //Id: manager.id,\r\n                        moduleName: row.moduleName,\r\n                        version: row.version,\r\n\r\n\r\n                    }))}\r\n\r\n                    options={{\r\n                        headerStyle: {\r\n                            backgroundColor: \"#014d88\",\r\n                            color: \"#fff\",\r\n                        },\r\n                        searchFieldStyle: {\r\n                            width : '200%',\r\n                            margingLeft: '250px',\r\n                        },\r\n                        filtering: false,\r\n                        exportButton: false,\r\n                        searchFieldAlignment: 'left',\r\n                        pageSizeOptions:[10,20,100],\r\n                        pageSize:10,\r\n                        debounceInterval: 400\r\n                    }}\r\n                />\r\n            </>\r\n        )}\r\n            <NewPersonalAccessToken toggleModal={toggleModal} showModal={showModal} ServerUrl={serverConfig} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingList;\r\n\r\n\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\api.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Progress.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\SendToServer.js",["135","136","137","138","139","140"],"import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\n    Row,Col, Card,CardBody, FormGroup, Input, Label} from 'reactstrap';\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n    header: {\r\n        fontWeight: 600\r\n    }\r\n}))\r\n\r\n\r\n\r\nconst SendToServer = (props) => {\r\n    const [rowObj, setRowObj]=useState(null);\r\n    // const rowObj=props.rowObj!==null ? props.rowObj : {};\r\n    const classes = useStyles()\r\n    const [urlHide, setUrlHide] = useState(false);\r\n    // const defaultValues = { username: \"\", password: \"\", syncHistoryUuid:rowObj.id, syncHistoryTrackerUuid:rowObj.uuid, facilityId: rowObj.organisationUnitId }\r\n    const [patDetails, setPatDetails] = useState({});\r\n    const [saving, setSaving] = useState(false);\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n    const [errors, setErrors] = useState({});\r\n    console.log(rowObj)\r\n    console.log(patDetails)\r\n\r\n    useEffect(()=>{\r\n        if(props.rowObj){\r\n            setRowObj(props.rowObj);\r\n            setPatDetails({...patDetails, syncHistoryUuid:props.rowObj.uuid, syncHistoryTrackerUuid:null, facilityId: props.rowObj.organisationUnitId})\r\n        }\r\n    },[props.rowObj])\r\n\r\n\r\n    useEffect(() => {\r\n        ServerUrl()\r\n    }, []);\r\n    ///GET LIST OF Facilities\r\n    async function ServerUrl() {\r\n        axios\r\n            .get(`${baseUrl}sync/remote-urls`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setServerUrl(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.url,\r\n                        value: value.id,\r\n                    }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        console.log(patDetails);\r\n        setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n    }\r\n    /*****  Validation */\r\n    const validate = () => {\r\n        let temp = { ...errors };\r\n        temp.username = patDetails.username\r\n            ? \"\"\r\n            : \"Username is required\";\r\n        temp.password = patDetails.password\r\n            ? \"\"\r\n            : \"Password is required\";\r\n\r\n        setErrors({\r\n            ...temp,\r\n        });\r\n        return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (validate()) {\r\n            setSaving(true);\r\n            axios.post(`${baseUrl}export/file/data`,patDetails,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n            )\r\n                .then(response => {\r\n                    setSaving(false);\r\n                    // props.ServerUrl()\r\n                    toast.success(\"Token Generated Successful\");\r\n                    props.toggleModal()\r\n\r\n                })\r\n                .catch(error => {\r\n                    setSaving(false);\r\n                    toast.error(\"Something went wrong\");\r\n                    props.toggleModal();\r\n                });\r\n        };\r\n    }\r\n\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop=\"static\">\r\n                <Form >\r\n                    <ModalHeader className={classes.header} toggle={props.toggleModal}>SEND TO SERVER </ModalHeader>\r\n                    <ModalBody>\r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n\r\n                                    <Col md={12}>\r\n                                        <FormGroup>\r\n                                            <Label >Username </Label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"username\"\r\n                                                id=\"username\"\r\n                                                value={patDetails.username}\r\n                                                onChange={handleInputChange}\r\n                                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                required\r\n                                            />\r\n                                            {errors.username !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.username}</span>\r\n                                            ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={12}>\r\n                                        <FormGroup>\r\n                                            <Label >Password </Label>\r\n                                            <Input\r\n                                                type=\"password\"\r\n                                                name=\"password\"\r\n                                                id=\"password\"\r\n                                                value={patDetails.password}\r\n                                                onChange={handleInputChange}\r\n                                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                required\r\n                                            />\r\n                                            {errors.password !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.password}</span>\r\n                                            ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br/>\r\n                                <Button\r\n                                    type='submit'\r\n                                    variant='contained'\r\n                                    //color='primary'\r\n                                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    //startIcon={<SettingsBackupRestoreIcon />}\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>Send To Server</span>\r\n                                </Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </ModalBody>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SendToServer;\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Generatekey.js",["141","142","143","144","145","146","147","148","149","150","151"],"import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\n    Row,Col, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport { Box, Button, Input, Typography } from '@material-ui/core';\r\nimport CopyToClipboardButton from './CopyToClipBoard';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    header: {\r\n        fontWeight: 600\r\n    }\r\n}))\r\n\r\n\r\nconst GenerateKey = (props) => {\r\n    const classes = useStyles()\r\n\r\n    //const samplesdispatched ={\"sampleManifests\": [] };\r\n    const GenerateKeyProcess = e => {\r\n        e.preventDefault()\r\n        alert(\"Processing \")\r\n        //Closing of the modal \r\n        props.togglestatus();\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop='static'>\r\n                <Form >\r\n                    <ModalHeader className={classes.header} toggle={props.toggleModal}>GENERATE KEY</ModalHeader>\r\n                    <ModalBody>\r\n\r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                    <Col md={12} >\r\n                                        <Alert color=\"primary\" >\r\n                                            <p>\r\n                                                Info : &nbsp;&nbsp;&nbsp;<span style={{ fontWeight: 'bolder'}}>{'Kindly click on the button to copy the generated key for upload'}</span>\r\n                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                                            </p>\r\n\r\n                                        </Alert>\r\n\r\n                                        <Typography marginTop={2}>\r\n                                            {props.genKey}\r\n                                        </Typography>\r\n                                        \r\n                                        <Box display={\"flex\"} marginTop={\"10px\"} justifyContent={\"space-between\"} width={\"50%\"} >\r\n                                            <CopyToClipboardButton styles={classes.button} textToCopy={props.genKey}/>\r\n\r\n                                            <Button variant='contained' color='default' onClick={props.toggleModal} >\r\n                                                <CancelIcon />\r\n                                                <Typography style={{marginLeft:\"5px\"}}>\r\n                                                Cancel\r\n                                                </Typography>\r\n                                            </Button>\r\n                                        </Box>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                            </CardBody>\r\n                        </Card>\r\n                    </ModalBody>\r\n\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GenerateKey;\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Logs.js",["152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168"],"import React, {useState, useEffect, forwardRef} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\n    Row,Col, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }\r\n}))\r\n\r\n\r\nconst Logs = (props) => {\r\n    const classes = useStyles()\r\n\r\n    const messageLogsData = props.messageLogsToDisplay === null ? [] : props.messageLogsToDisplay;\r\n\r\n\r\n\r\n    //const samplesdispatched ={\"sampleManifests\": [] };\r\n    const LogsProcess = e => {\r\n        e.preventDefault()\r\n        alert(\"Processing \")\r\n        //Closing of the modal \r\n        props.togglestatus();\r\n\r\n\r\n\r\n    }\r\n\r\n    function convertArrayToFormattedDate(dateArray) {\r\n        const [year, month, day, hour, minute, second, millisecond] = dateArray;\r\n      \r\n        // Using Date to get timestamp\r\n        const dateObject = new Date(year, month - 1, day, hour, minute, second, millisecond);\r\n        const timestamp = dateObject.getTime();\r\n      \r\n        // Using moment to format the timestamp\r\n        const formattedDate = moment(timestamp).format('MMM D, YYYY h:mm a');\r\n      \r\n        return formattedDate;\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop='static'>\r\n                <Form >\r\n                    <ModalHeader toggle={props.toggleModal}>Logs </ModalHeader>\r\n                    <ModalBody>\r\n                        <MaterialTable\r\n                            icons={tableIcons}\r\n                            title={\"JSON Files Logs \" }\r\n                            columns={[\r\n                                { title: \"Module Check\", field: \"activity\", filtering: false },\r\n                                { title: \"Name\", field: \"name\", filtering: false },\r\n                                { title: \"Log Message\", field: \"logMessage\", filtering: false },\r\n                                { title: \"Others\", field: \"others\", filtering: false },\r\n                                { title: \"Date-Time Created\", field: \"dateTimeCreated\", filtering: false },\r\n                            ]}\r\n                            data={messageLogsData.map((row) => ({\r\n                                //Id: manager.id,\r\n                                activity: row.activity,\r\n                                name: row.name,\r\n                                logMessage: row.message,\r\n                                others: row.others,\r\n                                dateTimeCreated: convertArrayToFormattedDate(row.timeCreated),\r\n                            }))}\r\n\r\n                            options={{\r\n                                headerStyle: {\r\n                                    backgroundColor: \"#014d88\",\r\n                                    color: \"#fff\",\r\n                                },\r\n                                searchFieldStyle: {\r\n                                    width : '200%',\r\n                                    margingLeft: '250px',\r\n                                },\r\n                                filtering: false,\r\n                                exportButton: true,\r\n                                searchFieldAlignment: 'left',\r\n                                pageSizeOptions:[10,20,100],\r\n                                pageSize:10,\r\n                                debounceInterval: 400\r\n                            }}\r\n                        />\r\n                    </ModalBody>\r\n\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logs;\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\AddAppKey.js",["169","170","171","172","173","174","175","176","177","178","179","180","181","182"],"import React, {useState, useEffect, forwardRef} from 'react';\r\nimport {\r\n    Modal, ModalHeader, ModalBody, Form, FormFeedback,\r\n    Row, Col, Card, CardBody, FormGroup, Label, Input\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\nimport {toast} from \"react-toastify\";\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }\r\n}))\r\n\r\n\r\nconst Index = (props) => {\r\n\r\n    const classes = useStyles()\r\n    const defaultValues = { appKey: \"\", facilityId:\"\", id:\"\", serverUrl:\"\"}\r\n    const [appKeyObj, setAppKeyObj] = useState(null);\r\n    const [keyDetails, setKeyDetails] = useState(defaultValues);\r\n    const [facilities, setFacilities] = useState( [])\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        Facilities();\r\n        // AppKeyHistory();\r\n        setKeyDetails(props.keyObj);\r\n    }, [props]);\r\n    async function AppKeyHistory() {\r\n        axios\r\n            .get(`${baseUrl}sync/app-key`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setAppKeyObj(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function Facilities() {\r\n        axios\r\n            .get(`${baseUrl}account`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n\r\n                setFacilities(\r\n                    Object.entries(response.data.applicationUserOrganisationUnits).map(([key, value]) => ({\r\n                        label: value.organisationUnitName,\r\n                        value: value.organisationUnitId,\r\n                    }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors };\r\n        temp.appKey = keyDetails.appKey\r\n            ? \"\"\r\n            : \"Key is required\";\r\n\r\n        setErrors({\r\n            ...temp,\r\n        });\r\n        return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n\r\n    const handleInputChange = e => {\r\n        setKeyDetails ({...keyDetails,  [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (validate()) {\r\n            setSaving(true);\r\n            axios.post(`${baseUrl}sync/app-key`,keyDetails,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n            )\r\n                .then(response => {\r\n                    setSaving(false);\r\n                    toast.success(\"APP KEY save successful\")\r\n                    props.showAppKeysListTable(true)\r\n                    props.AppKeyHistory();\r\n                })\r\n                .catch(error => {\r\n                    setSaving(false);\r\n                    toast.error(\"Something went wrong\");\r\n                });\r\n        };\r\n    }\r\n    //\r\n    const showListiew =()=> {\r\n        props.showAppKeysListTable(true)\r\n        props.setShowViewKey(false)\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <h1>APP Key</h1>\r\n            <br/>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-right mr-1\"\r\n                //startIcon={<FaUserPlus />}\r\n                style={{backgroundColor:\"#014d88\"}}\r\n                onClick={showListiew}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>{ \"<< Back\" } </span>\r\n            </Button>\r\n            <br/><br/>\r\n            {!props.showViewKey ?\r\n                (<>\r\n                    <Row >\r\n                        <Col md={12}>\r\n                            <FormGroup>\r\n                                <Label >Server URL *</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"serverUrl\"\r\n                                    id=\"serverUrl\"\r\n                                    defaultValue={keyDetails.serverUrl}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    value={keyDetails.serverUrl}\r\n                                >\r\n\r\n                                </Input>\r\n                                {errors.serverUrl !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.serverUrl}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormGroup>\r\n                                <Label >Facility *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"facilityId\"\r\n                                    id=\"facilityId\"\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    value={keyDetails.facilityId}\r\n                                >\r\n                                    <option > </option>\r\n                                    {facilities.map(({ label, value }) => (\r\n                                        <option key={value} value={value}>\r\n                                            {label}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                                {errors.facilityId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.facilityId}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormGroup>\r\n                                <Label >Key</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"appKey\"\r\n                                    id=\"appKey\"\r\n                                    defaultValue={keyDetails.appKey}\r\n                                    value={keyDetails.appKey}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    required\r\n                                />\r\n                                {errors.appKey !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.appKey}</span>\r\n                                ) : \"\" }\r\n\r\n                            </FormGroup>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br/>\r\n                    <Button\r\n                        type='submit'\r\n                        variant='contained'\r\n                        //color='primary'\r\n                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                        //startIcon={<SettingsBackupRestoreIcon />}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>Update Key</span>\r\n                    </Button>\r\n                </>)\r\n                :\r\n                (<>\r\n                    <Box maxWidth={\"90%\"} >\r\n                        <Typography marginTop={2}>\r\n                            APP KEY : {props.keyObj && props.keyObj!==null ? props.keyObj.appKey : \"\"}\r\n                        </Typography>\r\n                    </Box>\r\n                </>)\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index;\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\NewPersonalAccessToken.js",["183","184","185","186","187","188","189","190","191"],"import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\nRow,Col, Card,CardBody, FormGroup, Input, Label, Table} from 'reactstrap';\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n    header: {\r\n        fontWeight: 600\r\n    }\r\n}))\r\n\r\n\r\n\r\nconst NewToken = (props) => {\r\n    const classes = useStyles()\r\n    const [urlHide, setUrlHide] = useState(false);\r\n    const defaultValues = { file: \"\",}\r\n    const [patDetails, setPatDetails] = useState(defaultValues);\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [dataJSONFile, setDataJSONFile] = useState(null)\r\n    const [dataJSONFileContent, setDataJSONFileContent] = useState(null)\r\n\r\n    const handleInputChange = e => {\r\n      setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n    }\r\n    /*****  Validation */\r\n    const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.file = patDetails.file\r\n        ? \"\"\r\n        : \"File is required\";\r\n\r\n        setErrors({\r\n            ...temp,\r\n        });\r\n        return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n            //if (validate()) {\r\n                    setSaving(true);\r\n                    axios.post(`${baseUrl}sync/sync-config`,dataJSONFile,\r\n                     { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n                    )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            props.ServerUrl()\r\n                            toast.success(\"Config File Uploaded Successful\");\r\n                            props.toggleModal()\r\n\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            toast.error(\"Something went wrong\");\r\n                            props.toggleModal();\r\n                        });\r\n            //};\r\n        }\r\n\r\n    const readFileOnUpload = (uploadedFile) =>{\r\n        const fileReader = new FileReader();\r\n        //patDetails.file=true\r\n        fileReader.onloadend = ()=>{\r\n            try{\r\n                setDataJSONFile(JSON.parse(fileReader.result));\r\n                //console.log(JSON.parse(fileReader.result))\r\n                setDataJSONFileContent(fileReader.result)\r\n            }catch(e){\r\n                setDataJSONFile(\"**Not valid JSON file!**\");\r\n            }\r\n        }\r\n        if( uploadedFile!== undefined)\r\n            fileReader.readAsText(uploadedFile);\r\n    }\r\n\r\n\r\n  return (      \r\n      <div >\r\n         \r\n            <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop=\"static\">\r\n              <Form >\r\n                <ModalHeader className={classes.header} toggle={props.toggleModal}>UPLOAD CONFIG FILE</ModalHeader>\r\n                <ModalBody>\r\n                    <Card >\r\n                    <CardBody>\r\n                    <Row >\r\n                        <Col md={12}>\r\n                            <FormGroup>\r\n                            <Label >Config File</Label>\r\n                                    <Input\r\n                                        type=\"file\"\r\n                                        name=\"file\"\r\n                                        id=\"file\"\r\n                                        accept=\".json\"\r\n                                        // value={patDetails.file.name}\r\n                                        onChange={(e)=>readFileOnUpload(e.target.files[0])}\r\n                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        required\r\n                                        />\r\n                                        {errors.file !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.file}</span>\r\n                                        ) : \"\" }\r\n\r\n                            </FormGroup>\r\n                            </Col>\r\n                    </Row>\r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br/>              \r\n                        <Button\r\n                            type='submit'\r\n                            variant='contained'\r\n                            //color='primary'\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            //startIcon={<SettingsBackupRestoreIcon />}\r\n                            onClick={handleSubmit}   \r\n                        >   \r\n                            <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>Upload Config File</span>\r\n                        </Button>\r\n                    </CardBody>\r\n                    </Card> \r\n                </ModalBody>\r\n            </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewToken;\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\CopyToClipBoard.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\GeneratedFilesList.js",["192","193"],"import MaterialTable from \"material-table\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Dropdown, Button, Menu,  } from 'semantic-ui-react'\r\nimport { TableIcons } from \"../Utils/TableUtils\";\r\nimport moment from \"moment\";\r\nimport { CloudUpload } from \"@material-ui/icons\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport axios from \"axios\";\r\n\r\nconst GeneratedFilesList = (props) => {\r\n    const [generatedFiles, setGeneratedFiles] = useState([]);\r\n\r\n    const goBack = () =>{\r\n        props.setGenerateFilesGrid(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetGeneratedFiles();\r\n    }, [props.id])\r\n\r\n    const sendToServerAction = (row) => {\r\n\r\n    }\r\n     // Get list of generated files\r\n     async function GetGeneratedFiles() {\r\n        axios\r\n            .get(`${baseUrl}sync/history/${props.id}/tracker`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setGeneratedFiles(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#014d88\", }}\r\n                className=\" float-right mr-1\"\r\n                onClick={goBack}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>{\"<< Back\"}</span>\r\n            </Button>\r\n            <br /><br />\r\n            <MaterialTable\r\n                icons={TableIcons}\r\n                title=\"Generated Files List \"\r\n                columns={[\r\n                    // { title: \"Facility Name\", field: \"facilityName\"},\r\n                    { title: \"File Name \", field: \"fileName\", filtering: false },\r\n                    { title: \"Record Size \", field: \"recordSize\", filtering: false },\r\n                    { title: \"Date Generated \", field: \"date\", filtering: false },\r\n                    { title: \"Status\", field: \"status\", filtering: false },\r\n                    { title: \"Action\", field: \"actions\", filtering: false },\r\n                ]}\r\n                data={generatedFiles.map((row) => ({\r\n                    // facilityName: row.facilityName,\r\n                    fileName: row.fileName,\r\n                    recordSize: row.recordSize,\r\n                    date: moment(row.timeCreated).format(\"LLLL\"),\r\n                    status: row.status,\r\n                    //errorLog: row.errorLog,\r\n                    actions: (<div>\r\n                        <Menu.Menu position='right'  >\r\n                            <Menu.Item >\r\n                                <Button style={{ backgroundColor: 'rgb(153,46,98)' }} primary>\r\n                                    <Dropdown item text='Action'>\r\n\r\n                                        <Dropdown.Menu style={{ marginTop: \"10px\", }}>\r\n                                            <Dropdown.Item disabled={row.status.toLowerCase() === 'synced'} onClick={() => sendToServerAction(row)}><CloudUpload color=\"primary\" /> Send To Server\r\n                                            </Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </Button>\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>)\r\n                }))}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width: '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: true,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions: [10, 20, 100],\r\n                    pageSize: 10,\r\n                    debounceInterval: 400\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default GeneratedFilesList;","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Utils\\TableUtils.js",["194","195"],"import { forwardRef } from 'react';\r\nimport CloudUpload from '@material-ui/icons/CloudUpload';\r\nimport moment from \"moment\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\n\r\n\r\nexport const TableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };",{"ruleId":"196","severity":1,"message":"197","line":4,"column":41,"nodeType":"198","messageId":"199","endLine":4,"endColumn":47},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":96,"column":6,"nodeType":"206","endLine":96,"endColumn":16,"suggestions":"207"},{"ruleId":"196","severity":1,"message":"208","line":4,"column":10,"nodeType":"198","messageId":"199","endLine":4,"endColumn":24},{"ruleId":"209","severity":1,"message":"210","line":6,"column":10,"nodeType":"211","messageId":"212","endLine":6,"endColumn":24,"fix":"213"},{"ruleId":"196","severity":1,"message":"214","line":6,"column":19,"nodeType":"198","messageId":"199","endLine":6,"endColumn":24},{"ruleId":"196","severity":1,"message":"215","line":15,"column":12,"nodeType":"198","messageId":"199","endLine":15,"endColumn":18},{"ruleId":"196","severity":1,"message":"216","line":16,"column":12,"nodeType":"198","messageId":"199","endLine":16,"endColumn":21},{"ruleId":"196","severity":1,"message":"217","line":44,"column":11,"nodeType":"198","messageId":"199","endLine":44,"endColumn":28},{"ruleId":"196","severity":1,"message":"218","line":49,"column":11,"nodeType":"198","messageId":"199","endLine":49,"endColumn":23},{"ruleId":"209","severity":1,"message":"210","line":4,"column":10,"nodeType":"211","messageId":"212","endLine":4,"endColumn":24,"fix":"219"},{"ruleId":"196","severity":1,"message":"220","line":22,"column":9,"nodeType":"198","messageId":"199","endLine":22,"endColumn":12},{"ruleId":"196","severity":1,"message":"221","line":22,"column":14,"nodeType":"198","messageId":"199","endLine":22,"endColumn":17},{"ruleId":"196","severity":1,"message":"222","line":25,"column":11,"nodeType":"198","messageId":"199","endLine":25,"endColumn":16},{"ruleId":"196","severity":1,"message":"223","line":106,"column":11,"nodeType":"198","messageId":"199","endLine":106,"endColumn":18},{"ruleId":"209","severity":1,"message":"210","line":4,"column":10,"nodeType":"211","messageId":"212","endLine":4,"endColumn":24,"fix":"224"},{"ruleId":"196","severity":1,"message":"225","line":32,"column":45,"nodeType":"198","messageId":"199","endLine":32,"endColumn":57},{"ruleId":"196","severity":1,"message":"226","line":129,"column":9,"nodeType":"198","messageId":"199","endLine":129,"endColumn":32},{"ruleId":"196","severity":1,"message":"227","line":140,"column":10,"nodeType":"198","messageId":"199","endLine":140,"endColumn":22},{"ruleId":"196","severity":1,"message":"228","line":141,"column":10,"nodeType":"198","messageId":"199","endLine":141,"endColumn":26},{"ruleId":"229","severity":1,"message":"230","line":213,"column":51,"nodeType":"231","messageId":"232","endLine":213,"endColumn":76,"fix":"233"},{"ruleId":"229","severity":1,"message":"230","line":216,"column":51,"nodeType":"231","messageId":"232","endLine":216,"endColumn":65,"fix":"234"},{"ruleId":"196","severity":1,"message":"235","line":224,"column":23,"nodeType":"198","messageId":"199","endLine":224,"endColumn":26},{"ruleId":"196","severity":1,"message":"236","line":249,"column":11,"nodeType":"198","messageId":"199","endLine":249,"endColumn":30},{"ruleId":"196","severity":1,"message":"237","line":273,"column":11,"nodeType":"198","messageId":"199","endLine":273,"endColumn":30},{"ruleId":"196","severity":1,"message":"238","line":317,"column":11,"nodeType":"198","messageId":"199","endLine":317,"endColumn":28},{"ruleId":"196","severity":1,"message":"239","line":322,"column":11,"nodeType":"198","messageId":"199","endLine":322,"endColumn":33},{"ruleId":"196","severity":1,"message":"240","line":1,"column":27,"nodeType":"198","messageId":"199","endLine":1,"endColumn":33},{"ruleId":"209","severity":1,"message":"210","line":4,"column":10,"nodeType":"211","messageId":"212","endLine":4,"endColumn":24,"fix":"241"},{"ruleId":"196","severity":1,"message":"208","line":23,"column":10,"nodeType":"198","messageId":"199","endLine":23,"endColumn":24},{"ruleId":"196","severity":1,"message":"222","line":23,"column":26,"nodeType":"198","messageId":"199","endLine":23,"endColumn":31},{"ruleId":"196","severity":1,"message":"242","line":26,"column":10,"nodeType":"198","messageId":"199","endLine":26,"endColumn":20},{"ruleId":"196","severity":1,"message":"243","line":28,"column":10,"nodeType":"198","messageId":"199","endLine":28,"endColumn":20},{"ruleId":"196","severity":1,"message":"244","line":58,"column":9,"nodeType":"198","messageId":"199","endLine":58,"endColumn":15},{"ruleId":"196","severity":1,"message":"225","line":2,"column":45,"nodeType":"198","messageId":"199","endLine":2,"endColumn":57},{"ruleId":"209","severity":1,"message":"210","line":11,"column":10,"nodeType":"211","messageId":"212","endLine":11,"endColumn":24,"fix":"245"},{"ruleId":"196","severity":1,"message":"246","line":66,"column":12,"nodeType":"198","messageId":"199","endLine":66,"endColumn":19},{"ruleId":"196","severity":1,"message":"247","line":66,"column":21,"nodeType":"198","messageId":"199","endLine":66,"endColumn":31},{"ruleId":"196","severity":1,"message":"216","line":70,"column":12,"nodeType":"198","messageId":"199","endLine":70,"endColumn":21},{"ruleId":"204","severity":1,"message":"248","line":80,"column":7,"nodeType":"206","endLine":80,"endColumn":21,"suggestions":"249"},{"ruleId":"196","severity":1,"message":"250","line":1,"column":16,"nodeType":"198","messageId":"199","endLine":1,"endColumn":24},{"ruleId":"196","severity":1,"message":"251","line":1,"column":26,"nodeType":"198","messageId":"199","endLine":1,"endColumn":35},{"ruleId":"196","severity":1,"message":"225","line":2,"column":45,"nodeType":"198","messageId":"199","endLine":2,"endColumn":57},{"ruleId":"196","severity":1,"message":"252","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":17},{"ruleId":"196","severity":1,"message":"253","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":16},{"ruleId":"196","severity":1,"message":"254","line":9,"column":10,"nodeType":"198","messageId":"199","endLine":9,"endColumn":17},{"ruleId":"196","severity":1,"message":"255","line":10,"column":8,"nodeType":"198","messageId":"199","endLine":10,"endColumn":13},{"ruleId":"196","severity":1,"message":"256","line":11,"column":10,"nodeType":"198","messageId":"199","endLine":11,"endColumn":22},{"ruleId":"196","severity":1,"message":"257","line":12,"column":8,"nodeType":"198","messageId":"199","endLine":12,"endColumn":33},{"ruleId":"196","severity":1,"message":"258","line":13,"column":23,"nodeType":"198","messageId":"199","endLine":13,"endColumn":28},{"ruleId":"196","severity":1,"message":"259","line":61,"column":11,"nodeType":"198","messageId":"199","endLine":61,"endColumn":29},{"ruleId":"196","severity":1,"message":"250","line":1,"column":16,"nodeType":"198","messageId":"199","endLine":1,"endColumn":24},{"ruleId":"196","severity":1,"message":"251","line":1,"column":26,"nodeType":"198","messageId":"199","endLine":1,"endColumn":35},{"ruleId":"196","severity":1,"message":"225","line":2,"column":45,"nodeType":"198","messageId":"199","endLine":2,"endColumn":57},{"ruleId":"196","severity":1,"message":"220","line":3,"column":5,"nodeType":"198","messageId":"199","endLine":3,"endColumn":8},{"ruleId":"196","severity":1,"message":"221","line":3,"column":9,"nodeType":"198","messageId":"199","endLine":3,"endColumn":12},{"ruleId":"196","severity":1,"message":"260","line":3,"column":14,"nodeType":"198","messageId":"199","endLine":3,"endColumn":18},{"ruleId":"196","severity":1,"message":"261","line":3,"column":19,"nodeType":"198","messageId":"199","endLine":3,"endColumn":27},{"ruleId":"196","severity":1,"message":"252","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":17},{"ruleId":"196","severity":1,"message":"253","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":16},{"ruleId":"196","severity":1,"message":"262","line":7,"column":8,"nodeType":"198","messageId":"199","endLine":7,"endColumn":18},{"ruleId":"196","severity":1,"message":"263","line":8,"column":10,"nodeType":"198","messageId":"199","endLine":8,"endColumn":15},{"ruleId":"196","severity":1,"message":"254","line":9,"column":10,"nodeType":"198","messageId":"199","endLine":9,"endColumn":17},{"ruleId":"196","severity":1,"message":"255","line":10,"column":8,"nodeType":"198","messageId":"199","endLine":10,"endColumn":13},{"ruleId":"196","severity":1,"message":"256","line":11,"column":10,"nodeType":"198","messageId":"199","endLine":11,"endColumn":22},{"ruleId":"196","severity":1,"message":"257","line":12,"column":8,"nodeType":"198","messageId":"199","endLine":12,"endColumn":33},{"ruleId":"196","severity":1,"message":"223","line":88,"column":11,"nodeType":"198","messageId":"199","endLine":88,"endColumn":18},{"ruleId":"196","severity":1,"message":"264","line":95,"column":11,"nodeType":"198","messageId":"199","endLine":95,"endColumn":22},{"ruleId":"196","severity":1,"message":"265","line":3,"column":5,"nodeType":"198","messageId":"199","endLine":3,"endColumn":10},{"ruleId":"196","severity":1,"message":"266","line":3,"column":12,"nodeType":"198","messageId":"199","endLine":3,"endColumn":23},{"ruleId":"196","severity":1,"message":"267","line":3,"column":25,"nodeType":"198","messageId":"199","endLine":3,"endColumn":34},{"ruleId":"196","severity":1,"message":"268","line":3,"column":36,"nodeType":"198","messageId":"199","endLine":3,"endColumn":40},{"ruleId":"196","severity":1,"message":"225","line":3,"column":42,"nodeType":"198","messageId":"199","endLine":3,"endColumn":54},{"ruleId":"196","severity":1,"message":"260","line":4,"column":15,"nodeType":"198","messageId":"199","endLine":4,"endColumn":19},{"ruleId":"196","severity":1,"message":"261","line":4,"column":21,"nodeType":"198","messageId":"199","endLine":4,"endColumn":29},{"ruleId":"196","severity":1,"message":"252","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":17},{"ruleId":"196","severity":1,"message":"253","line":8,"column":8,"nodeType":"198","messageId":"199","endLine":8,"endColumn":16},{"ruleId":"196","severity":1,"message":"262","line":9,"column":8,"nodeType":"198","messageId":"199","endLine":9,"endColumn":18},{"ruleId":"196","severity":1,"message":"263","line":10,"column":10,"nodeType":"198","messageId":"199","endLine":10,"endColumn":15},{"ruleId":"196","severity":1,"message":"269","line":35,"column":7,"nodeType":"198","messageId":"199","endLine":35,"endColumn":17},{"ruleId":"196","severity":1,"message":"270","line":94,"column":12,"nodeType":"198","messageId":"199","endLine":94,"endColumn":21},{"ruleId":"196","severity":1,"message":"271","line":105,"column":20,"nodeType":"198","messageId":"199","endLine":105,"endColumn":33},{"ruleId":"196","severity":1,"message":"251","line":1,"column":26,"nodeType":"198","messageId":"199","endLine":1,"endColumn":35},{"ruleId":"196","severity":1,"message":"225","line":2,"column":45,"nodeType":"198","messageId":"199","endLine":2,"endColumn":57},{"ruleId":"196","severity":1,"message":"272","line":3,"column":50,"nodeType":"198","messageId":"199","endLine":3,"endColumn":55},{"ruleId":"209","severity":1,"message":"210","line":11,"column":10,"nodeType":"211","messageId":"212","endLine":11,"endColumn":24,"fix":"273"},{"ruleId":"196","severity":1,"message":"246","line":64,"column":12,"nodeType":"198","messageId":"199","endLine":64,"endColumn":19},{"ruleId":"196","severity":1,"message":"247","line":64,"column":21,"nodeType":"198","messageId":"199","endLine":64,"endColumn":31},{"ruleId":"196","severity":1,"message":"274","line":71,"column":12,"nodeType":"198","messageId":"199","endLine":71,"endColumn":31},{"ruleId":"196","severity":1,"message":"217","line":73,"column":11,"nodeType":"198","messageId":"199","endLine":73,"endColumn":28},{"ruleId":"196","severity":1,"message":"275","line":77,"column":11,"nodeType":"198","messageId":"199","endLine":77,"endColumn":19},{"ruleId":"209","severity":1,"message":"210","line":7,"column":10,"nodeType":"211","messageId":"212","endLine":7,"endColumn":24,"fix":"276"},{"ruleId":"204","severity":1,"message":"277","line":19,"column":8,"nodeType":"206","endLine":19,"endColumn":18,"suggestions":"278"},{"ruleId":"196","severity":1,"message":"279","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":19},{"ruleId":"196","severity":1,"message":"280","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":14},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["281"],"no-negated-in-lhs",["282"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'urlTabs'. Either include it or remove the dependency array.","ArrayExpression",["283"],"'ToastContainer' is defined but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"284","text":"285"},"'token' is defined but never used.","'saving' is assigned a value but never used.","'serverUrl' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.",{"range":"286","text":"285"},"'Row' is defined but never used.","'Col' is defined but never used.","'toast' is defined but never used.","'classes' is assigned a value but never used.",{"range":"287","text":"285"},"'FormFeedback' is defined but never used.","'toggleGenerateFilesGrid' is assigned a value but never used.","'showErrorObj' is assigned a value but never used.","'showErrorFileObj' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['all'] found.","Property","unnecessarilyComputedProperty",{"range":"288","text":"289"},{"range":"290","text":"289"},"'res' is assigned a value but never used.","'fetchGeneratedFiles' is assigned a value but never used.","'displaySendToServer' is assigned a value but never used.","'displayErrorTable' is assigned a value but never used.","'backToGenerateJsonFile' is assigned a value but never used.","'useRef' is defined but never used.",{"range":"291","text":"285"},"'MdModeEdit' is defined but never used.","'makeStyles' is defined but never used.","'toggle' is assigned a value but never used.",{"range":"292","text":"285"},"'urlHide' is assigned a value but never used.","'setUrlHide' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'patDetails'. Either include it or remove the dependency array. You can also do a functional update 'setPatDetails(p => ...)' if you only need 'patDetails' in the 'setPatDetails' call.",["293"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'MatButton' is defined but never used.","'SaveIcon' is defined but never used.","'Spinner' is defined but never used.","'axios' is defined but never used.","'DropzoneArea' is defined but never used.","'SettingsBackupRestoreIcon' is defined but never used.","'Input' is defined but never used.","'GenerateKeyProcess' is assigned a value but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CancelIcon' is defined but never used.","'Alert' is defined but never used.","'LogsProcess' is assigned a value but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Form' is defined but never used.","'tableIcons' is assigned a value but never used.","'appKeyObj' is assigned a value but never used.","'AppKeyHistory' is defined but never used.","'Table' is defined but never used.",{"range":"294","text":"285"},"'dataJSONFileContent' is assigned a value but never used.","'validate' is assigned a value but never used.",{"range":"295","text":"285"},"React Hook useEffect has a missing dependency: 'GetGeneratedFiles'. Either include it or remove the dependency array.",["296"],"'CloudUpload' is defined but never used.","'moment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"297","fix":"298"},[195,209],"token",[134,148],[134,148],[8336,8343],"'all'",[8470,8477],[142,156],[454,468],{"desc":"299","fix":"300"},[457,471],[294,308],{"desc":"301","fix":"302"},"Update the dependencies array to be: [urlIndex, urlTabs]",{"range":"303","text":"304"},"Update the dependencies array to be: [patDetails, props.rowObj]",{"range":"305","text":"306"},"Update the dependencies array to be: [GetGeneratedFiles, props.id]",{"range":"307","text":"308"},[2459,2469],"[urlIndex, urlTabs]",[2305,2319],"[patDetails, props.rowObj]",[628,638],"[GetGeneratedFiles, props.id]"]