[{"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\index.js":"1","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\App.js":"2","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Dashboard.js":"5","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\context\\ThemeDemo.js":"6","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Utils\\PageUtils.js":"7","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\index.js":"8","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\AppKeyList.js":"9","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\SyncList.js":"10","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\api.js":"11","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Progress.js":"12","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\SendToServer.js":"13","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Generatekey.js":"14","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Logs.js":"15","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\AddAppKey.js":"16","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\CopyToClipBoard.js":"17","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\GeneratedFilesList.js":"18","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Utils\\TableUtils.js":"19","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\ConfigFileList.js":"20","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\UploadConfigFile.js":"21","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\DownloadButton.js":"22"},{"size":753,"mtime":1700648400238,"results":"23","hashOfConfig":"24"},{"size":926,"mtime":1700648400237,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1700648403379,"results":"26","hashOfConfig":"24"},{"size":9235,"mtime":1700648400853,"results":"27","hashOfConfig":"24"},{"size":4016,"mtime":1701781944502,"results":"28","hashOfConfig":"24"},{"size":3056,"mtime":1700648400854,"results":"29","hashOfConfig":"24"},{"size":275,"mtime":1700648403368,"results":"30","hashOfConfig":"24"},{"size":2086,"mtime":1700984743312,"results":"31","hashOfConfig":"24"},{"size":8567,"mtime":1701012316288,"results":"32","hashOfConfig":"24"},{"size":24422,"mtime":1701783299069,"results":"33","hashOfConfig":"24"},{"size":423,"mtime":1701783413174,"results":"34","hashOfConfig":"24"},{"size":489,"mtime":1700648403360,"results":"35","hashOfConfig":"24"},{"size":8065,"mtime":1701020919059,"results":"36","hashOfConfig":"24"},{"size":4202,"mtime":1701782254091,"results":"37","hashOfConfig":"24"},{"size":10087,"mtime":1701163517867,"results":"38","hashOfConfig":"24"},{"size":11209,"mtime":1701013274816,"results":"39","hashOfConfig":"24"},{"size":1365,"mtime":1700907584695,"results":"40","hashOfConfig":"24"},{"size":4611,"mtime":1701019600933,"results":"41","hashOfConfig":"24"},{"size":2295,"mtime":1700927489826,"results":"42","hashOfConfig":"24"},{"size":8802,"mtime":1700984743309,"results":"43","hashOfConfig":"24"},{"size":6836,"mtime":1700984743310,"results":"44","hashOfConfig":"24"},{"size":1515,"mtime":1701770992954,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"110h4gm",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64","usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"76","usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"90","usedDeprecatedRules":"49"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"49"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"96","usedDeprecatedRules":"49"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"99","usedDeprecatedRules":"49"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\index.js",["102"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n",["103","104"],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\App.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Dashboard.js",["105"],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Utils\\PageUtils.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\index.js",["106","107","108","109","110","111","112"],"import React, {useState, useEffect} from 'react'\r\nimport axios from \"axios\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport ConfigFileList from './ConfigFileList'\r\n\r\n\r\n\r\nconst TabExampleMenuPositionRight = (props) => {\r\n\r\n    const defaultValues = { username: \"\", password: \"\", url:\"\" }\r\n    const [patDetails, setPatDetails] = useState(defaultValues);\r\n    const [saving, setSaving] = useState(false);\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      ServerUrl()\r\n    }, []);\r\n        ///GET LIST OF Facilities\r\n        async function ServerUrl() {\r\n          axios\r\n              .get(`${baseUrl}sync/remote-urls`,\r\n              //{ headers: {\"Authorization\" : `Bearer ${token}`} }\r\n              )\r\n              .then((response) => {\r\n                  console.log(response.data)\r\n                  setServerUrl(\r\n                      Object.entries(response.data).map(([key, value]) => ({\r\n                          label: value.url,\r\n                          value: value.id,\r\n                        }))\r\n                  );\r\n              })\r\n              .catch((error) => {\r\n  \r\n              });\r\n      \r\n      }\r\n    \r\n    const handleInputChange = e => {\r\n      setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n      console.log(patDetails)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();      \r\n      setSaving(true);\r\n      axios.post(`${baseUrl}sync/remote-access-token`,\r\n     // { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n      patDetails\r\n      )\r\n        .then(response => {\r\n            setSaving(false);\r\n            toast.success(\"Token Generated Successful\");\r\n\r\n        })\r\n        .catch(error => {\r\n            setSaving(false);\r\n            toast.error(\"Something went wrong\");\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n  return (    \r\n          \r\n          <ConfigFileList />\r\n        )\r\n\r\n}\r\n\r\nexport default TabExampleMenuPositionRight","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\AppKeyList.js",["113","114","115","116","117"],"import React, { useState, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {Row, Col} from 'reactstrap';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//import { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\n//import { MdModeEdit } from \"react-icons/md\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Dropdown,Button as Buuton2, Menu,  } from 'semantic-ui-react'\r\nimport AddAppKey from \"./AddAppKey\";\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AppKeyList = (props) => {\r\n    //let history = useHistory();\r\n    // The state for our timer\r\n    const classes = useStyles()\r\n    const [keyList, setKeyList] = useState( [])\r\n    const [appKeysListTable, showAppKeysListTable] = useState( true)\r\n    const [keyObj, setKeyObj] = useState( null)\r\n    const [showViewKey, setShowViewKey] = useState(false)\r\n    useEffect(() => {\r\n        AppKeyHistory();\r\n    }, []);\r\n\r\n    ///GET LIST OF Sync History\r\n    async function AppKeyHistory() {\r\n        axios\r\n            .get(`${baseUrl}sync/app-key`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setKeyList(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    const createAppKey =()=> {\r\n        setShowViewKey(false)\r\n        showAppKeysListTable(false)\r\n    }\r\n    const updateKey = (rowObj) => {\r\n        setShowViewKey(false)\r\n        showAppKeysListTable(false)\r\n        setKeyObj(rowObj)\r\n    }\r\n    const viewAppKey =(rowObj)=> {\r\n        setShowViewKey(true)\r\n        setKeyObj(rowObj)\r\n        showAppKeysListTable(false)\r\n    }\r\n    //\r\n\r\n    return (\r\n        <div>\r\n            {appKeysListTable ? (<>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{backgroundColor: keyList.length === 0 && \"#014d88\" }}\r\n                    className=\" float-right mr-1\"\r\n                    //startIcon={<FaUserPlus />}\r\n                    onClick={createAppKey}\r\n                    disabled={keyList.length > 0}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Add App Key </span>\r\n                </Button>\r\n                <br/><br/>\r\n                <MaterialTable\r\n                    icons={tableIcons}\r\n                    title=\"APP Key List \"\r\n                    columns={[\r\n                        // { title: \" ID\", field: \"Id\" },\r\n                        {\r\n                            title: \"Facility Name\",\r\n                            field: \"facilityName\",\r\n                        },\r\n                        { title: \"Server Url\", field: \"serverUrl\", filtering: false },\r\n                        { title: \"Action\", field: \"actions\", filtering: false },\r\n                    ]}\r\n                    data={ keyList.map((row) => ({\r\n                        //Id: manager.id,\r\n                        facilityName: row.facilityName,\r\n                        serverUrl: row.serverUrl,\r\n                        actions:(<div>\r\n                            <Menu.Menu position='right'  >\r\n                                <Menu.Item >\r\n                                    <Buuton2 style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                                        <Dropdown item text='Action'>\r\n\r\n                                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n\r\n                                                <Dropdown.Item  onClick={() => viewAppKey(row)}><VisibilityIcon color=\"primary\"/>View key\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item  onClick={() => updateKey(row)}><Edit color=\"primary\"/>Edit key\r\n                                                </Dropdown.Item>\r\n\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </Buuton2>\r\n                                </Menu.Item>\r\n                            </Menu.Menu>\r\n                        </div>)\r\n                    }))}\r\n\r\n                    options={{\r\n                        headerStyle: {\r\n                            backgroundColor: \"#014d88\",\r\n                            color: \"#fff\",\r\n                        },\r\n                        searchFieldStyle: {\r\n                            width : '200%',\r\n                            margingLeft: '250px',\r\n                        },\r\n                        filtering: false,\r\n                        exportButton: true,\r\n                        searchFieldAlignment: 'left',\r\n                        pageSizeOptions:[10,20,100],\r\n                        pageSize:10,\r\n                        debounceInterval: 400\r\n                    }}\r\n                />\r\n            </>)\r\n                :\r\n            (<>\r\n            <AddAppKey setShowViewKey={setShowViewKey} showViewKey={showViewKey} showAppKeysListTable={showAppKeysListTable} AppKeyHistory={AppKeyHistory} keyObj={keyObj}/>\r\n            </>)\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppKeyList;\r\n\r\n\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\SyncList.js",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132"],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\api.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Progress.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\SendToServer.js",["133","134","135","136","137","138"],"import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\n    Row,Col, Card,CardBody, FormGroup, Input, Label} from 'reactstrap';\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n    header: {\r\n        fontWeight: 600\r\n    }\r\n}))\r\n\r\n\r\n\r\nconst SendToServer = (props) => {\r\n    const [rowObj, setRowObj]=useState(null);\r\n    // const rowObj=props.rowObj!==null ? props.rowObj : {};\r\n    const classes = useStyles()\r\n    const [urlHide, setUrlHide] = useState(false);\r\n    // const defaultValues = { username: \"\", password: \"\", syncHistoryUuid:rowObj.id, syncHistoryTrackerUuid:rowObj.uuid, facilityId: rowObj.organisationUnitId }\r\n    const [patDetails, setPatDetails] = useState({});\r\n    const [saving, setSaving] = useState(false);\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n    const [errors, setErrors] = useState({});\r\n    console.log(rowObj)\r\n    console.log(patDetails)\r\n\r\n    useEffect(()=>{\r\n        if(props.rowObj){\r\n            setRowObj(props.rowObj);\r\n            setPatDetails({...patDetails, \r\n                syncHistoryUuid:props.rowObj.uuid, \r\n                syncHistoryTrackerUuid: props.rowObj.syncHistoryTrackerUuid, \r\n                facilityId: props.rowObj.organisationUnitId || props.rowObj.facilityId\r\n            })\r\n        }\r\n    },[props.rowObj])\r\n\r\n\r\n    useEffect(() => {\r\n        ServerUrl()\r\n    }, []);\r\n    ///GET LIST OF Facilities\r\n    async function ServerUrl() {\r\n        axios\r\n            .get(`${baseUrl}sync/remote-urls`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setServerUrl(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.url,\r\n                        value: value.id,\r\n                    }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        console.log(patDetails);\r\n        setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n    }\r\n    /*****  Validation */\r\n    const validate = () => {\r\n        let temp = { ...errors };\r\n        temp.username = patDetails.username\r\n            ? \"\"\r\n            : \"Username is required\";\r\n        temp.password = patDetails.password\r\n            ? \"\"\r\n            : \"Password is required\";\r\n\r\n        setErrors({\r\n            ...temp,\r\n        });\r\n        return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (validate()) {\r\n            setSaving(true);\r\n            axios.post(`${baseUrl}export/file/data`,patDetails,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n            )\r\n                .then(response => {\r\n                    setSaving(false);\r\n                    // props.ServerUrl()\r\n                    toast.success(\"Token Generated Successful\");\r\n                    props.toggleModal()\r\n\r\n                })\r\n                .catch(error => {\r\n                    setSaving(false);\r\n                    toast.error(\"Something went wrong\");\r\n                    props.toggleModal();\r\n                });\r\n        };\r\n    }\r\n\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop=\"static\">\r\n                <Form >\r\n                    <ModalHeader className={classes.header} toggle={props.toggleModal}>SEND TO SERVER </ModalHeader>\r\n                    <ModalBody>\r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n\r\n                                    <Col md={12}>\r\n                                        <FormGroup>\r\n                                            <Label >Username </Label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"username\"\r\n                                                id=\"username\"\r\n                                                value={patDetails.username}\r\n                                                onChange={handleInputChange}\r\n                                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                required\r\n                                            />\r\n                                            {errors.username !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.username}</span>\r\n                                            ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={12}>\r\n                                        <FormGroup>\r\n                                            <Label >Password </Label>\r\n                                            <Input\r\n                                                type=\"password\"\r\n                                                name=\"password\"\r\n                                                id=\"password\"\r\n                                                value={patDetails.password}\r\n                                                onChange={handleInputChange}\r\n                                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                required\r\n                                            />\r\n                                            {errors.password !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.password}</span>\r\n                                            ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br/>\r\n                                <Button\r\n                                    type='submit'\r\n                                    variant='contained'\r\n                                    //color='primary'\r\n                                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    //startIcon={<SettingsBackupRestoreIcon />}\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>Send To Server</span>\r\n                                </Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </ModalBody>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SendToServer;\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Generatekey.js",["139","140","141","142","143","144","145","146","147","148","149"],"import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\n    Row,Col, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport { Box, Button, Input, Typography } from '@material-ui/core';\r\nimport CopyToClipboardButton from './CopyToClipBoard';\r\nimport DownloadButton from './DownloadButton';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    header: {\r\n        fontWeight: 600\r\n    }\r\n}))\r\n\r\n\r\nconst GenerateKey = (props) => {\r\n    const classes = useStyles()\r\n\r\n    //const samplesdispatched ={\"sampleManifests\": [] };\r\n    const GenerateKeyProcess = e => {\r\n        e.preventDefault()\r\n        alert(\"Processing \")\r\n        //Closing of the modal \r\n        props.togglestatus();\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop='static'>\r\n                <Form >\r\n                    <ModalHeader className={classes.header} toggle={props.toggleModal}>GENERATE KEY</ModalHeader>\r\n                    <ModalBody>\r\n\r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                    <Col md={12} >\r\n                                        <Alert color=\"primary\" >\r\n                                            <p>\r\n                                                Info : &nbsp;&nbsp;&nbsp;<span style={{ fontWeight: 'bolder'}}>{'Kindly click on the button to copy the generated key for upload'}</span>\r\n                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                                            </p>\r\n\r\n                                        </Alert>\r\n\r\n                                        <Typography marginTop={2}>\r\n                                            {props.genKey}\r\n                                        </Typography>\r\n                                        \r\n                                        <Box display={\"flex\"} marginTop={\"10px\"} justifyContent={\"space-between\"} width={\"100%\"} >\r\n                                            <CopyToClipboardButton styles={classes.button} textToCopy={props.genKey}/>\r\n                                            <DownloadButton styles={classes.button} textToDownload={props.genKey} />\r\n\r\n                                            <Button variant='contained' color='default' onClick={props.toggleModal} >\r\n                                                <CancelIcon />\r\n                                                <Typography style={{marginLeft:\"5px\"}}>\r\n                                                Cancel\r\n                                                </Typography>\r\n                                            </Button>\r\n                                        </Box>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                            </CardBody>\r\n                        </Card>\r\n                    </ModalBody>\r\n\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GenerateKey;\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\Logs.js",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168"],"import React, { useState, useEffect, forwardRef } from 'react';\r\nimport {\r\n    Modal, ModalHeader, ModalBody, Form, FormFeedback,\r\n    Row, Col, Card, CardBody\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport moment from \"moment\";\r\nimport { Button } from 'semantic-ui-react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }\r\n}))\r\n\r\n\r\nconst Logs = (props) => {\r\n    const goBack = () =>{\r\n        props.setShowErrorTable(false);\r\n    }\r\n    const classes = useStyles()\r\n\r\n    const [messageLogsData, setMessageLogsData] = useState([]);\r\n    const [tableName, setTableName] = useState();\r\n\r\n\r\n    useEffect(()=> {\r\n        if(props.rowObj){\r\n            setMessageLogsData(props.rowObj.messageLog);\r\n            setTableName( props.rowObj.tableName);\r\n        }\r\n    },[props.rowObj])\r\n\r\n\r\n\r\n    //const samplesdispatched ={\"sampleManifests\": [] };\r\n    const LogsProcess = e => {\r\n        e.preventDefault()\r\n        alert(\"Processing \")\r\n        //Closing of the modal \r\n        props.togglestatus();\r\n\r\n\r\n\r\n    }\r\n\r\n    function convertArrayToFormattedDate(dateArray) {\r\n        const [year, month, day, hour, minute, second, millisecond] = dateArray;\r\n\r\n        // Using Date to get timestamp\r\n        const dateObject = new Date(year, month - 1, day, hour, minute, second, millisecond);\r\n        const timestamp = dateObject.getTime();\r\n\r\n        // Using moment to format the timestamp\r\n        const formattedDate = moment(timestamp).format('MMM D, YYYY h:mm a');\r\n\r\n        return formattedDate;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        // <div >\r\n\r\n        //     <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"xl\" backdrop='static'>\r\n        //         <Form >\r\n        //             <ModalHeader toggle={props.toggleModal}>Logs </ModalHeader>\r\n        //             <ModalBody>\r\n        //             <Button\r\n        //                 variant=\"contained\"\r\n        //                 style={{ backgroundColor: \"#014d88\", }}\r\n        //                 className=\" float-right mr-1\"\r\n        //                 onClick={props.toggleModal}\r\n        //             >\r\n        //                 <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>{\"<< Back\"}</span>\r\n        //             </Button>\r\n        //             <br /><br />\r\n        //                 <MaterialTable\r\n        //                     icons={tableIcons}\r\n        //                     title={\"JSON Files Logs \" }\r\n        //                     columns={[\r\n        //                         { title: \"Module Check\", field: \"activity\", filtering: false },\r\n        //                         { title: \"Name\", field: \"name\", filtering: false },\r\n        //                         { title: \"Log Message\", field: \"logMessage\", filtering: false },\r\n        //                         { title: \"Others\", field: \"others\", filtering: false },\r\n        //                         { title: \"Date-Time Created\", field: \"dateTimeCreated\", filtering: false },\r\n        //                     ]}\r\n        //                     data={messageLogsData.map((row) => ({\r\n        //                         //Id: manager.id,\r\n        //                         activity: row.activity,\r\n        //                         name: row.name,\r\n        //                         logMessage: row.message,\r\n        //                         others: row.others,\r\n        //                         dateTimeCreated: convertArrayToFormattedDate(row.timeCreated),\r\n        //                     }))}\r\n\r\n        //                     options={{\r\n        //                         headerStyle: {\r\n        //                             backgroundColor: \"#014d88\",\r\n        //                             color: \"#fff\",\r\n        //                         },\r\n        //                         searchFieldStyle: {\r\n        //                             width : '200%',\r\n        //                             margingLeft: '250px',\r\n        //                         },\r\n        //                         filtering: false,\r\n        //                         exportButton: true,\r\n        //                         searchFieldAlignment: 'left',\r\n        //                         pageSizeOptions:[10,20,100],\r\n        //                         pageSize:10,\r\n        //                         debounceInterval: 400\r\n        //                     }}\r\n        //                 />\r\n        //             </ModalBody>\r\n\r\n        //         </Form>\r\n        //     </Modal>\r\n        // </div>\r\n        <div >\r\n\r\n            <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\", marginTop: \"10px\"}}>\r\n            <Typography style={{fontWeight: 600, fontSize: \"20px\"}} toggle={props.toggleModal}>{`Message Logs  (${tableName})`}</Typography>\r\n            <Button\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#014d88\", }}\r\n                className=\" float-right mr-1\"\r\n                onClick={goBack}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>{\"<< Back\"}</span>\r\n            </Button>\r\n            </div>\r\n            <br /><br />\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title={\"JSON Files Logs \"}\r\n                columns={[\r\n                    { title: \"Module Check\", field: \"activity\", filtering: false },\r\n                    { title: \"Name\", field: \"name\", filtering: false },\r\n                    { title: \"Log Message\", field: \"logMessage\", filtering: false },\r\n                    { title: \"Others\", field: \"others\", filtering: false },\r\n                    { title: \"Date-Time Created\", field: \"dateTimeCreated\", filtering: false },\r\n                ]}\r\n                data={messageLogsData.map((row) => ({\r\n                    //Id: manager.id,\r\n                    activity: row.activity,\r\n                    name: row.name,\r\n                    logMessage: row.message,\r\n                    others: row.others,\r\n                    dateTimeCreated: convertArrayToFormattedDate(row.timeCreated),\r\n                }))}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width: '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: true,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions: [10, 20, 100],\r\n                    pageSize: 10,\r\n                    debounceInterval: 400\r\n                }}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logs;\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Appkey\\AddAppKey.js",["169","170","171","172","173","174","175","176","177","178","179","180","181","182","183"],"import React, {useState, useEffect, forwardRef} from 'react';\r\nimport {\r\n    Modal, ModalHeader, ModalBody, Form, FormFeedback,\r\n    Row, Col, Card, CardBody, FormGroup, Label, Input\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\nimport {toast} from \"react-toastify\";\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { TextArea } from 'semantic-ui-react';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }\r\n}))\r\n\r\n\r\nconst Index = (props) => {\r\n\r\n    const classes = useStyles()\r\n    const defaultValues = { appKey: \"\", facilityId:\"\", id:\"\", serverUrl:\"\"}\r\n    const [appKeyObj, setAppKeyObj] = useState(null);\r\n    const [keyDetails, setKeyDetails] = useState(defaultValues);\r\n    const [facilities, setFacilities] = useState( [])\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        Facilities();\r\n        // AppKeyHistory();\r\n        setKeyDetails(props.keyObj);\r\n    }, [props]);\r\n    async function AppKeyHistory() {\r\n        axios\r\n            .get(`${baseUrl}sync/app-key`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setAppKeyObj(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function Facilities() {\r\n        axios\r\n            .get(`${baseUrl}account`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n\r\n                setFacilities(\r\n                    Object.entries(response.data.applicationUserOrganisationUnits).map(([key, value]) => ({\r\n                        label: value.organisationUnitName,\r\n                        value: value.organisationUnitId,\r\n                    }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors };\r\n        temp.appKey = keyDetails.appKey\r\n            ? \"\"\r\n            : \"Key is required\";\r\n\r\n        setErrors({\r\n            ...temp,\r\n        });\r\n        return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n\r\n    const handleInputChange = e => {\r\n        setKeyDetails ({...keyDetails,  [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (validate()) {\r\n            setSaving(true);\r\n            axios.post(`${baseUrl}sync/app-key`,keyDetails,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n            )\r\n                .then(response => {\r\n                    setSaving(false);\r\n                    toast.success(\"APP KEY save successful\")\r\n                    props.showAppKeysListTable(true)\r\n                    props.AppKeyHistory();\r\n                })\r\n                .catch(error => {\r\n                    setSaving(false);\r\n                    toast.error(\"Something went wrong\");\r\n                });\r\n        };\r\n    }\r\n    //\r\n    const showListiew =()=> {\r\n        props.showAppKeysListTable(true)\r\n        props.setShowViewKey(false)\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <h1>APP Key</h1>\r\n            <br/>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-right mr-1\"\r\n                //startIcon={<FaUserPlus />}\r\n                style={{backgroundColor:\"#014d88\"}}\r\n                onClick={showListiew}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>{ \"<< Back\" } </span>\r\n            </Button>\r\n            <br/><br/>\r\n            {!props.showViewKey ?\r\n                (<>\r\n                    <Row >\r\n                        <Col md={12}>\r\n                            <FormGroup>\r\n                                <Label >Server URL *</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"serverUrl\"\r\n                                    id=\"serverUrl\"\r\n                                    defaultValue={keyDetails?.serverUrl}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    value={keyDetails?.serverUrl}\r\n                                >\r\n\r\n                                </Input>\r\n                                {errors.serverUrl !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.serverUrl}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormGroup>\r\n                                <Label >Facility *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"facilityId\"\r\n                                    id=\"facilityId\"\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    value={keyDetails?.facilityId}\r\n                                >\r\n                                    <option > </option>\r\n                                    {facilities.map(({ label, value }) => (\r\n                                        <option key={value} value={value}>\r\n                                            {label}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                                {errors.facilityId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.facilityId}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormGroup>\r\n                                <Label >Key</Label>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    name=\"appKey\"\r\n                                    id=\"appKey\"\r\n                                    defaultValue={keyDetails?.appKey}\r\n                                    value={keyDetails?.appKey}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\",minHeight:\"80px\"}}\r\n                                    required\r\n                                />\r\n                                {errors.appKey !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.appKey}</span>\r\n                                ) : \"\" }\r\n\r\n                            </FormGroup>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br/>\r\n                    <Button\r\n                        type='submit'\r\n                        variant='contained'\r\n                        //color='primary'\r\n                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                        //startIcon={<SettingsBackupRestoreIcon />}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>Update Key</span>\r\n                    </Button>\r\n                </>)\r\n                :\r\n                (<>\r\n                    <Box maxWidth={\"90%\"} >\r\n                        <Typography marginTop={2}>\r\n                            APP KEY : {props.keyObj && props.keyObj!==null ? props.keyObj.appKey : \"\"}\r\n                        </Typography>\r\n                    </Box>\r\n                </>)\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index;\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\CopyToClipBoard.js",[],"C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\GeneratedFilesList.js",["184","185"],"import MaterialTable from \"material-table\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Dropdown, Button, Menu,  } from 'semantic-ui-react'\r\nimport { TableIcons } from \"../Utils/TableUtils\";\r\nimport moment from \"moment\";\r\nimport { CloudUpload } from \"@material-ui/icons\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport axios from \"axios\";\r\nimport SendToServer from \"./SendToServer\";\r\n\r\nconst GeneratedFilesList = (props) => {\r\n    const [generatedFiles, setGeneratedFiles] = useState([]);\r\n    const [sendToServerModalIsOpen, setSendToServerModalIsOpen] = useState(false);\r\n    const [rowObj, setRowObj] = useState({});\r\n\r\n    const toggleSendToServerModal = () => {\r\n        setSendToServerModalIsOpen(!sendToServerModalIsOpen);\r\n    }\r\n\r\n    const goBack = () =>{\r\n        props.setGenerateFilesGrid(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetGeneratedFiles();\r\n    }, [props.id])\r\n\r\n    const sendToServerAction = (row) => {\r\n        setRowObj({...row, syncHistoryTrackerUuid: row.uuid});\r\n        toggleSendToServerModal();\r\n\r\n    }\r\n     // Get list of generated files\r\n     async function GetGeneratedFiles() {\r\n        axios\r\n            .get(`${baseUrl}sync/history/${props.id}/tracker`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setGeneratedFiles(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SendToServer toggleModal={toggleSendToServerModal} showModal={sendToServerModalIsOpen} rowObj={rowObj}/>\r\n            <Button\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#014d88\", }}\r\n                className=\" float-right mr-1\"\r\n                onClick={goBack}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>{\"<< Back\"}</span>\r\n            </Button>\r\n            <br /><br />\r\n            <MaterialTable\r\n                icons={TableIcons}\r\n                title=\"Generated Files List \"\r\n                columns={[\r\n                    // { title: \"Facility Name\", field: \"facilityName\"},\r\n                    { title: \"File Name \", field: \"fileName\", filtering: false },\r\n                    { title: \"Record Size \", field: \"recordSize\", filtering: false },\r\n                    { title: \"Date Generated \", field: \"date\", filtering: false },\r\n                    { title: \"Status\", field: \"status\", filtering: false },\r\n                    { title: \"Action\", field: \"actions\", filtering: false },\r\n                ]}\r\n                data={generatedFiles.map((row) => ({\r\n                    // facilityName: row.facilityName,\r\n                    fileName: row.fileName,\r\n                    recordSize: row.recordSize,\r\n                    date: moment(row.timeCreated).format(\"LLLL\"),\r\n                    status: row.status,\r\n                    //errorLog: row.errorLog,\r\n                    actions: (<div>\r\n                        <Menu.Menu position='right'  >\r\n                            <Menu.Item >\r\n                                <Button style={{ backgroundColor: 'rgb(153,46,98)' }} primary>\r\n                                    <Dropdown item text='Action'>\r\n\r\n                                        <Dropdown.Menu style={{ marginTop: \"10px\", }}>\r\n                                            <Dropdown.Item disabled={row.status.toLowerCase() === 'synced'} onClick={() => sendToServerAction(row)}><CloudUpload color=\"primary\" /> Send To Server\r\n                                            </Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </Button>\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>)\r\n                }))}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width: '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: true,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions: [10, 20, 100],\r\n                    pageSize: 10,\r\n                    debounceInterval: 400\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default GeneratedFilesList;","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Utils\\TableUtils.js",["186","187"],"import { forwardRef } from 'react';\r\nimport CloudUpload from '@material-ui/icons/CloudUpload';\r\nimport moment from \"moment\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\n\r\n\r\nexport const TableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\ConfigFileList.js",["188","189","190","191","192","193","194"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport UploadConfigFile from './UploadConfigFile';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Dropdown,Button as Buuton2, Menu,  } from 'semantic-ui-react'\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst ConfigFileList = (props) => {\r\n\r\n  const [serverConfig, setServerConfig] = useState( [])\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const toggleModal = () => setShowModal(!showModal);\r\n  const [configDetailObj, setConfigDetailObj] = useState(null)\r\n    const [showConfigView, setShowConfigView] = useState(false)\r\n  useEffect(() => {\r\n      ServerConfigFile()\r\n  }, []);\r\n    ///GET LIST OF Remote URL\r\n    async function ServerConfigFile() {\r\n        axios\r\n            .get(`${baseUrl}sync/sync-config`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setServerConfig(response.data)\r\n                \r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n\r\n    }\r\n    const uploadConfigFile =()=> {\r\n        setShowModal(!showModal)\r\n    }\r\n    const viewConfigDetail =(row)=> {\r\n        setShowConfigView(true)\r\n        setConfigDetailObj(row)\r\n    }\r\n    const backButton =()=> {\r\n        setShowConfigView(false)\r\n    }\r\n    \r\n \r\n  return (\r\n    <div>\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-right mr-1\"\r\n            //startIcon={<FaUserPlus />}\r\n            style={{backgroundColor:\"#014d88\"}}\r\n            onClick={showConfigView ? backButton : uploadConfigFile}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>{showConfigView ? \"<< Back\" : \"Upload Config File\"} </span>\r\n        </Button>        \r\n        <br/><br/>\r\n        <br/>\r\n        {!showConfigView && (\r\n              <MaterialTable\r\n               icons={tableIcons}\r\n                title=\"Config Information \"\r\n                columns={[\r\n                        { title: \" File Name\", field: \"name\" },\r\n                        {\r\n                        title: \"Version\",\r\n                        field: \"version\",\r\n                        },\r\n                        { title: \"Release Date\", field: \"releaseDate\", filtering: false },\r\n                        { title: \"Upload Date\", field: \"uploadDate\", filtering: false },\r\n                        {title: \"Status\", field: \"status\", filtering: false },\r\n                        { title: \"Action\", field: \"actions\", filtering: false },\r\n\r\n\r\n                ]}\r\n                data={ serverConfig.map((row) => ({\r\n                    //Id: manager.id,\r\n                      name: row.name,\r\n                      version: row.version,\r\n                      releaseDate: row.releaseDate,\r\n                      uploadDate: row.uploadDate,\r\n                      status:row.active===true ? \"Active\" : \"previous\",\r\n                      actions:(<div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Buuton2 style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                <Dropdown.Item  onClick={() =>viewConfigDetail(row)}><VisibilityIcon /> View </Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Buuton2>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>)\r\n\r\n                    }))}\r\n\r\n                          options={{\r\n                            headerStyle: {\r\n                                backgroundColor: \"#014d88\",\r\n                                color: \"#fff\",\r\n                            },\r\n                            searchFieldStyle: {\r\n                                width : '200%',\r\n                                margingLeft: '250px',\r\n                            },\r\n                            filtering: false,\r\n                            exportButton: false,\r\n                            searchFieldAlignment: 'left',\r\n                            pageSizeOptions:[10,20,100],\r\n                            pageSize:10,\r\n                            debounceInterval: 400\r\n                        }}\r\n                 />\r\n        )}\r\n        {showConfigView && (\r\n            <>\r\n\r\n                <MaterialTable\r\n                    icons={tableIcons}\r\n                    title={\"Config Information - \" + configDetailObj.name}\r\n                    columns={[\r\n                        { title: \" Module Name\", field: \"moduleName\" },\r\n                        {\r\n                            title: \"Version\",\r\n                            field: \"version\",\r\n                        },\r\n                    ]}\r\n                    data={ configDetailObj.configModules.map((row) => ({\r\n                        //Id: manager.id,\r\n                        moduleName: row.moduleName,\r\n                        version: row.version,\r\n\r\n\r\n                    }))}\r\n\r\n                    options={{\r\n                        headerStyle: {\r\n                            backgroundColor: \"#014d88\",\r\n                            color: \"#fff\",\r\n                        },\r\n                        searchFieldStyle: {\r\n                            width : '200%',\r\n                            margingLeft: '250px',\r\n                        },\r\n                        filtering: false,\r\n                        exportButton: false,\r\n                        searchFieldAlignment: 'left',\r\n                        pageSizeOptions:[10,20,100],\r\n                        pageSize:10,\r\n                        debounceInterval: 400\r\n                    }}\r\n                />\r\n            </>\r\n        )}\r\n            <UploadConfigFile toggleModal={toggleModal} showModal={showModal} ServerUrl={serverConfig} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConfigFileList;\r\n\r\n\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Settings\\UploadConfigFile.js",["195","196","197","198","199","200","201","202"],"import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\nRow,Col, Card,CardBody, FormGroup, Input, Label, Table} from 'reactstrap';\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n    header: {\r\n        fontWeight: 600\r\n    }\r\n}))\r\n\r\n\r\n\r\nconst NewToken = (props) => {\r\n    const classes = useStyles()\r\n    const [urlHide, setUrlHide] = useState(false);\r\n    const defaultValues = { file: \"\",}\r\n    const [patDetails, setPatDetails] = useState(defaultValues);\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [dataJSONFile, setDataJSONFile] = useState(null)\r\n    const [dataJSONFileContent, setDataJSONFileContent] = useState(null)\r\n\r\n    const handleInputChange = e => {\r\n      setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n    }\r\n    /*****  Validation */\r\n    const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.file = patDetails.file\r\n        ? \"\"\r\n        : \"File is required\";\r\n\r\n        setErrors({\r\n            ...temp,\r\n        });\r\n        return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n            //if (validate()) {\r\n                    setSaving(true);\r\n                    axios.post(`${baseUrl}sync/sync-config`,dataJSONFile,\r\n                     { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n                    )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            toast.success(\"Config File Uploaded Successful\");\r\n                            props.toggleModal()\r\n\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            toast.error(\"Something went wrong\");\r\n                            props.toggleModal();\r\n                        });\r\n            //};\r\n        }\r\n\r\n    const readFileOnUpload = (uploadedFile) =>{\r\n        const fileReader = new FileReader();\r\n        //patDetails.file=true\r\n        fileReader.onloadend = ()=>{\r\n            try{\r\n                setDataJSONFile(JSON.parse(fileReader.result));\r\n                //console.log(JSON.parse(fileReader.result))\r\n                setDataJSONFileContent(fileReader.result)\r\n            }catch(e){\r\n                setDataJSONFile(\"**Not valid JSON file!**\");\r\n            }\r\n        }\r\n        if( uploadedFile!== undefined)\r\n            fileReader.readAsText(uploadedFile);\r\n    }\r\n\r\n\r\n  return (      \r\n      <div >\r\n         \r\n            <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop=\"static\">\r\n              <Form >\r\n                <ModalHeader className={classes.header} toggle={props.toggleModal}>UPLOAD CONFIG FILE</ModalHeader>\r\n                <ModalBody>\r\n                    <Card >\r\n                    <CardBody>\r\n                    <Row >\r\n                        <Col md={12}>\r\n                            <FormGroup>\r\n                            <Label >Config File</Label>\r\n                                    <Input\r\n                                        type=\"file\"\r\n                                        name=\"file\"\r\n                                        id=\"file\"\r\n                                        accept=\".json\"\r\n                                        // value={patDetails.file.name}\r\n                                        onChange={(e)=>readFileOnUpload(e.target.files[0])}\r\n                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        required\r\n                                        />\r\n                                        {errors.file !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.file}</span>\r\n                                        ) : \"\" }\r\n\r\n                            </FormGroup>\r\n                            </Col>\r\n                        {dataJSONFileContent !==null && (\r\n                            <>\r\n                                <Col md={12}>\r\n                                    <FormGroup>\r\n                                        <Label >Config File</Label>\r\n                                        <Input\r\n                                            type=\"textarea\"\r\n                                            name=\"file\"\r\n                                            cols=\"15\"\r\n                                            rows=\"25\"\r\n                                            value={dataJSONFileContent}\r\n                                        />\r\n\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </>\r\n                        )}\r\n                    </Row>\r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br/>              \r\n                        <Button\r\n                            type='submit'\r\n                            variant='contained'\r\n                            //color='primary'\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            //startIcon={<SettingsBackupRestoreIcon />}\r\n                            onClick={handleSubmit}   \r\n                        >   \r\n                            <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>Upload Config File</span>\r\n                        </Button>\r\n                    </CardBody>\r\n                    </Card> \r\n                </ModalBody>\r\n            </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewToken;\r\n","C:\\Users\\peter.abiodun\\Documents\\central-client-sync\\src\\main\\webapp\\jsx\\components\\Sync\\DownloadButton.js",[],{"ruleId":"203","severity":1,"message":"204","line":4,"column":41,"nodeType":"205","messageId":"206","endLine":4,"endColumn":47},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":96,"column":6,"nodeType":"213","endLine":96,"endColumn":16,"suggestions":"214"},{"ruleId":"203","severity":1,"message":"215","line":4,"column":10,"nodeType":"205","messageId":"206","endLine":4,"endColumn":24},{"ruleId":"216","severity":1,"message":"217","line":6,"column":10,"nodeType":"218","messageId":"219","endLine":6,"endColumn":24,"fix":"220"},{"ruleId":"203","severity":1,"message":"221","line":6,"column":19,"nodeType":"205","messageId":"206","endLine":6,"endColumn":24},{"ruleId":"203","severity":1,"message":"222","line":15,"column":12,"nodeType":"205","messageId":"206","endLine":15,"endColumn":18},{"ruleId":"203","severity":1,"message":"223","line":16,"column":12,"nodeType":"205","messageId":"206","endLine":16,"endColumn":21},{"ruleId":"203","severity":1,"message":"224","line":44,"column":11,"nodeType":"205","messageId":"206","endLine":44,"endColumn":28},{"ruleId":"203","severity":1,"message":"225","line":49,"column":11,"nodeType":"205","messageId":"206","endLine":49,"endColumn":23},{"ruleId":"216","severity":1,"message":"217","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":24,"fix":"226"},{"ruleId":"203","severity":1,"message":"227","line":22,"column":9,"nodeType":"205","messageId":"206","endLine":22,"endColumn":12},{"ruleId":"203","severity":1,"message":"228","line":22,"column":14,"nodeType":"205","messageId":"206","endLine":22,"endColumn":17},{"ruleId":"203","severity":1,"message":"229","line":25,"column":11,"nodeType":"205","messageId":"206","endLine":25,"endColumn":16},{"ruleId":"203","severity":1,"message":"230","line":106,"column":11,"nodeType":"205","messageId":"206","endLine":106,"endColumn":18},{"ruleId":"216","severity":1,"message":"217","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":24,"fix":"231"},{"ruleId":"203","severity":1,"message":"232","line":32,"column":45,"nodeType":"205","messageId":"206","endLine":32,"endColumn":57},{"ruleId":"203","severity":1,"message":"233","line":128,"column":9,"nodeType":"205","messageId":"206","endLine":128,"endColumn":23},{"ruleId":"203","severity":1,"message":"234","line":129,"column":9,"nodeType":"205","messageId":"206","endLine":129,"endColumn":32},{"ruleId":"203","severity":1,"message":"235","line":140,"column":10,"nodeType":"205","messageId":"206","endLine":140,"endColumn":22},{"ruleId":"203","severity":1,"message":"236","line":140,"column":24,"nodeType":"205","messageId":"206","endLine":140,"endColumn":39},{"ruleId":"203","severity":1,"message":"237","line":141,"column":10,"nodeType":"205","messageId":"206","endLine":141,"endColumn":26},{"ruleId":"203","severity":1,"message":"238","line":141,"column":28,"nodeType":"205","messageId":"206","endLine":141,"endColumn":47},{"ruleId":"203","severity":1,"message":"239","line":144,"column":10,"nodeType":"205","messageId":"206","endLine":144,"endColumn":32},{"ruleId":"203","severity":1,"message":"240","line":144,"column":34,"nodeType":"205","messageId":"206","endLine":144,"endColumn":59},{"ruleId":"241","severity":1,"message":"242","line":214,"column":51,"nodeType":"243","messageId":"244","endLine":214,"endColumn":76,"fix":"245"},{"ruleId":"241","severity":1,"message":"242","line":217,"column":51,"nodeType":"243","messageId":"244","endLine":217,"endColumn":65,"fix":"246"},{"ruleId":"203","severity":1,"message":"247","line":225,"column":23,"nodeType":"205","messageId":"206","endLine":225,"endColumn":26},{"ruleId":"203","severity":1,"message":"248","line":250,"column":11,"nodeType":"205","messageId":"206","endLine":250,"endColumn":30},{"ruleId":"203","severity":1,"message":"249","line":276,"column":11,"nodeType":"205","messageId":"206","endLine":276,"endColumn":30},{"ruleId":"203","severity":1,"message":"232","line":2,"column":45,"nodeType":"205","messageId":"206","endLine":2,"endColumn":57},{"ruleId":"216","severity":1,"message":"217","line":11,"column":10,"nodeType":"218","messageId":"219","endLine":11,"endColumn":24,"fix":"250"},{"ruleId":"203","severity":1,"message":"251","line":66,"column":12,"nodeType":"205","messageId":"206","endLine":66,"endColumn":19},{"ruleId":"203","severity":1,"message":"252","line":66,"column":21,"nodeType":"205","messageId":"206","endLine":66,"endColumn":31},{"ruleId":"203","severity":1,"message":"223","line":70,"column":12,"nodeType":"205","messageId":"206","endLine":70,"endColumn":21},{"ruleId":"211","severity":1,"message":"253","line":84,"column":7,"nodeType":"213","endLine":84,"endColumn":21,"suggestions":"254"},{"ruleId":"203","severity":1,"message":"255","line":1,"column":16,"nodeType":"205","messageId":"206","endLine":1,"endColumn":24},{"ruleId":"203","severity":1,"message":"256","line":1,"column":26,"nodeType":"205","messageId":"206","endLine":1,"endColumn":35},{"ruleId":"203","severity":1,"message":"232","line":2,"column":45,"nodeType":"205","messageId":"206","endLine":2,"endColumn":57},{"ruleId":"203","severity":1,"message":"257","line":4,"column":8,"nodeType":"205","messageId":"206","endLine":4,"endColumn":17},{"ruleId":"203","severity":1,"message":"258","line":6,"column":8,"nodeType":"205","messageId":"206","endLine":6,"endColumn":16},{"ruleId":"203","severity":1,"message":"259","line":9,"column":10,"nodeType":"205","messageId":"206","endLine":9,"endColumn":17},{"ruleId":"203","severity":1,"message":"260","line":10,"column":8,"nodeType":"205","messageId":"206","endLine":10,"endColumn":13},{"ruleId":"203","severity":1,"message":"261","line":11,"column":10,"nodeType":"205","messageId":"206","endLine":11,"endColumn":22},{"ruleId":"203","severity":1,"message":"262","line":12,"column":8,"nodeType":"205","messageId":"206","endLine":12,"endColumn":33},{"ruleId":"203","severity":1,"message":"263","line":13,"column":23,"nodeType":"205","messageId":"206","endLine":13,"endColumn":28},{"ruleId":"203","severity":1,"message":"264","line":62,"column":11,"nodeType":"205","messageId":"206","endLine":62,"endColumn":29},{"ruleId":"203","severity":1,"message":"265","line":3,"column":5,"nodeType":"205","messageId":"206","endLine":3,"endColumn":10},{"ruleId":"203","severity":1,"message":"266","line":3,"column":12,"nodeType":"205","messageId":"206","endLine":3,"endColumn":23},{"ruleId":"203","severity":1,"message":"267","line":3,"column":25,"nodeType":"205","messageId":"206","endLine":3,"endColumn":34},{"ruleId":"203","severity":1,"message":"268","line":3,"column":36,"nodeType":"205","messageId":"206","endLine":3,"endColumn":40},{"ruleId":"203","severity":1,"message":"232","line":3,"column":42,"nodeType":"205","messageId":"206","endLine":3,"endColumn":54},{"ruleId":"203","severity":1,"message":"227","line":4,"column":5,"nodeType":"205","messageId":"206","endLine":4,"endColumn":8},{"ruleId":"203","severity":1,"message":"228","line":4,"column":10,"nodeType":"205","messageId":"206","endLine":4,"endColumn":13},{"ruleId":"203","severity":1,"message":"269","line":4,"column":15,"nodeType":"205","messageId":"206","endLine":4,"endColumn":19},{"ruleId":"203","severity":1,"message":"270","line":4,"column":21,"nodeType":"205","messageId":"206","endLine":4,"endColumn":29},{"ruleId":"203","severity":1,"message":"257","line":6,"column":8,"nodeType":"205","messageId":"206","endLine":6,"endColumn":17},{"ruleId":"203","severity":1,"message":"258","line":8,"column":8,"nodeType":"205","messageId":"206","endLine":8,"endColumn":16},{"ruleId":"203","severity":1,"message":"271","line":9,"column":8,"nodeType":"205","messageId":"206","endLine":9,"endColumn":18},{"ruleId":"203","severity":1,"message":"272","line":10,"column":10,"nodeType":"205","messageId":"206","endLine":10,"endColumn":15},{"ruleId":"203","severity":1,"message":"259","line":11,"column":10,"nodeType":"205","messageId":"206","endLine":11,"endColumn":17},{"ruleId":"203","severity":1,"message":"260","line":12,"column":8,"nodeType":"205","messageId":"206","endLine":12,"endColumn":13},{"ruleId":"203","severity":1,"message":"261","line":13,"column":10,"nodeType":"205","messageId":"206","endLine":13,"endColumn":22},{"ruleId":"203","severity":1,"message":"262","line":14,"column":8,"nodeType":"205","messageId":"206","endLine":14,"endColumn":33},{"ruleId":"203","severity":1,"message":"230","line":95,"column":11,"nodeType":"205","messageId":"206","endLine":95,"endColumn":18},{"ruleId":"203","severity":1,"message":"273","line":111,"column":11,"nodeType":"205","messageId":"206","endLine":111,"endColumn":22},{"ruleId":"203","severity":1,"message":"265","line":3,"column":5,"nodeType":"205","messageId":"206","endLine":3,"endColumn":10},{"ruleId":"203","severity":1,"message":"266","line":3,"column":12,"nodeType":"205","messageId":"206","endLine":3,"endColumn":23},{"ruleId":"203","severity":1,"message":"267","line":3,"column":25,"nodeType":"205","messageId":"206","endLine":3,"endColumn":34},{"ruleId":"203","severity":1,"message":"268","line":3,"column":36,"nodeType":"205","messageId":"206","endLine":3,"endColumn":40},{"ruleId":"203","severity":1,"message":"232","line":3,"column":42,"nodeType":"205","messageId":"206","endLine":3,"endColumn":54},{"ruleId":"203","severity":1,"message":"269","line":4,"column":15,"nodeType":"205","messageId":"206","endLine":4,"endColumn":19},{"ruleId":"203","severity":1,"message":"270","line":4,"column":21,"nodeType":"205","messageId":"206","endLine":4,"endColumn":29},{"ruleId":"203","severity":1,"message":"257","line":6,"column":8,"nodeType":"205","messageId":"206","endLine":6,"endColumn":17},{"ruleId":"203","severity":1,"message":"258","line":8,"column":8,"nodeType":"205","messageId":"206","endLine":8,"endColumn":16},{"ruleId":"203","severity":1,"message":"271","line":9,"column":8,"nodeType":"205","messageId":"206","endLine":9,"endColumn":18},{"ruleId":"203","severity":1,"message":"272","line":10,"column":10,"nodeType":"205","messageId":"206","endLine":10,"endColumn":15},{"ruleId":"203","severity":1,"message":"274","line":33,"column":10,"nodeType":"205","messageId":"206","endLine":33,"endColumn":18},{"ruleId":"203","severity":1,"message":"275","line":36,"column":7,"nodeType":"205","messageId":"206","endLine":36,"endColumn":17},{"ruleId":"203","severity":1,"message":"276","line":95,"column":12,"nodeType":"205","messageId":"206","endLine":95,"endColumn":21},{"ruleId":"203","severity":1,"message":"277","line":106,"column":20,"nodeType":"205","messageId":"206","endLine":106,"endColumn":33},{"ruleId":"216","severity":1,"message":"217","line":7,"column":10,"nodeType":"218","messageId":"219","endLine":7,"endColumn":24,"fix":"278"},{"ruleId":"211","severity":1,"message":"279","line":26,"column":8,"nodeType":"213","endLine":26,"endColumn":18,"suggestions":"280"},{"ruleId":"203","severity":1,"message":"281","line":2,"column":8,"nodeType":"205","messageId":"206","endLine":2,"endColumn":19},{"ruleId":"203","severity":1,"message":"282","line":3,"column":8,"nodeType":"205","messageId":"206","endLine":3,"endColumn":14},{"ruleId":"203","severity":1,"message":"283","line":1,"column":27,"nodeType":"205","messageId":"206","endLine":1,"endColumn":33},{"ruleId":"216","severity":1,"message":"217","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":24,"fix":"284"},{"ruleId":"203","severity":1,"message":"215","line":23,"column":10,"nodeType":"205","messageId":"206","endLine":23,"endColumn":24},{"ruleId":"203","severity":1,"message":"229","line":23,"column":26,"nodeType":"205","messageId":"206","endLine":23,"endColumn":31},{"ruleId":"203","severity":1,"message":"285","line":26,"column":10,"nodeType":"205","messageId":"206","endLine":26,"endColumn":20},{"ruleId":"203","severity":1,"message":"286","line":28,"column":10,"nodeType":"205","messageId":"206","endLine":28,"endColumn":20},{"ruleId":"203","severity":1,"message":"287","line":58,"column":9,"nodeType":"205","messageId":"206","endLine":58,"endColumn":15},{"ruleId":"203","severity":1,"message":"256","line":1,"column":26,"nodeType":"205","messageId":"206","endLine":1,"endColumn":35},{"ruleId":"203","severity":1,"message":"232","line":2,"column":45,"nodeType":"205","messageId":"206","endLine":2,"endColumn":57},{"ruleId":"203","severity":1,"message":"288","line":3,"column":50,"nodeType":"205","messageId":"206","endLine":3,"endColumn":55},{"ruleId":"216","severity":1,"message":"217","line":11,"column":10,"nodeType":"218","messageId":"219","endLine":11,"endColumn":24,"fix":"289"},{"ruleId":"203","severity":1,"message":"251","line":64,"column":12,"nodeType":"205","messageId":"206","endLine":64,"endColumn":19},{"ruleId":"203","severity":1,"message":"252","line":64,"column":21,"nodeType":"205","messageId":"206","endLine":64,"endColumn":31},{"ruleId":"203","severity":1,"message":"224","line":73,"column":11,"nodeType":"205","messageId":"206","endLine":73,"endColumn":28},{"ruleId":"203","severity":1,"message":"290","line":77,"column":11,"nodeType":"205","messageId":"206","endLine":77,"endColumn":19},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["291"],"no-negated-in-lhs",["292"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'urlTabs'. Either include it or remove the dependency array.","ArrayExpression",["293"],"'ToastContainer' is defined but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"294","text":"295"},"'token' is defined but never used.","'saving' is assigned a value but never used.","'serverUrl' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.",{"range":"296","text":"295"},"'Row' is defined but never used.","'Col' is defined but never used.","'toast' is defined but never used.","'classes' is assigned a value but never used.",{"range":"297","text":"295"},"'FormFeedback' is defined but never used.","'toggleLogModal' is assigned a value but never used.","'toggleGenerateFilesGrid' is assigned a value but never used.","'showErrorObj' is assigned a value but never used.","'setShowErrorObj' is assigned a value but never used.","'showErrorFileObj' is assigned a value but never used.","'setShowErrorFileObj' is assigned a value but never used.","'syncHistoryTrackerUuid' is assigned a value but never used.","'setSyncHistoryTrackerUuid' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['all'] found.","Property","unnecessarilyComputedProperty",{"range":"298","text":"299"},{"range":"300","text":"299"},"'res' is assigned a value but never used.","'fetchGeneratedFiles' is assigned a value but never used.","'displaySendToServer' is assigned a value but never used.",{"range":"301","text":"295"},"'urlHide' is assigned a value but never used.","'setUrlHide' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'patDetails'. Either include it or remove the dependency array. You can also do a functional update 'setPatDetails(p => ...)' if you only need 'patDetails' in the 'setPatDetails' call.",["302"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'MatButton' is defined but never used.","'SaveIcon' is defined but never used.","'Spinner' is defined but never used.","'axios' is defined but never used.","'DropzoneArea' is defined but never used.","'SettingsBackupRestoreIcon' is defined but never used.","'Input' is defined but never used.","'GenerateKeyProcess' is assigned a value but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Form' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CancelIcon' is defined but never used.","'Alert' is defined but never used.","'LogsProcess' is assigned a value but never used.","'TextArea' is defined but never used.","'tableIcons' is assigned a value but never used.","'appKeyObj' is assigned a value but never used.","'AppKeyHistory' is defined but never used.",{"range":"303","text":"295"},"React Hook useEffect has a missing dependency: 'GetGeneratedFiles'. Either include it or remove the dependency array.",["304"],"'CloudUpload' is defined but never used.","'moment' is defined but never used.","'useRef' is defined but never used.",{"range":"305","text":"295"},"'MdModeEdit' is defined but never used.","'makeStyles' is defined but never used.","'toggle' is assigned a value but never used.","'Table' is defined but never used.",{"range":"306","text":"295"},"'validate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"307","fix":"308"},[195,209],"token",[134,148],[134,148],[8399,8406],"'all'",[8533,8540],[454,468],{"desc":"309","fix":"310"},[294,308],{"desc":"311","fix":"312"},[142,156],[457,471],"Update the dependencies array to be: [urlIndex, urlTabs]",{"range":"313","text":"314"},"Update the dependencies array to be: [patDetails, props.rowObj]",{"range":"315","text":"316"},"Update the dependencies array to be: [GetGeneratedFiles, props.id]",{"range":"317","text":"318"},[2459,2469],"[urlIndex, urlTabs]",[2432,2446],"[patDetails, props.rowObj]",[920,930],"[GetGeneratedFiles, props.id]"]