{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Sync/Progress.js","main/webapp/jsx/components/Sync/Logs.js","main/webapp/jsx/components/Sync/SendToServer.js","main/webapp/jsx/components/Sync/Generatekey.js","main/webapp/jsx/components/Sync/SyncList.js","main/webapp/jsx/components/Settings/NewPersonalAccessToken.js","main/webapp/jsx/components/Settings/UpdateToken.js","main/webapp/jsx/components/Settings/SettingList.js","main/webapp/jsx/components/Settings/index.js","main/webapp/jsx/components/Sync/Websocket.js","main/webapp/jsx/components/Sync/NewList.js","main/webapp/jsx/components/Dashboard.js","main/webapp/jsx/components/Utils/PageUtils.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Progress","_ref","percentage","_jsx","className","children","_jsxs","role","style","width","concat","height","tableIcons","Add","forwardRef","props","ref","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","useStyles","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","marginTop","submit","cardBottom","marginBottom","Select","button","root","input","Logs","_jsx2","console","log","Modal","isOpen","showModal","toggle","toggleModal","size","backdrop","_defineProperty","Form","ModalHeader","ModalBody","MaterialTable","icons","title","columns","field","filtering","data","map","row","name","error","others","options","headerStyle","backgroundColor","color","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","pageSize","debounceInterval","fontSize","success","SendToServer","classes","_useState","useState","_useState2","_slicedToArray","_useState3","username","password","_useState4","patDetails","setPatDetails","_useState5","_useState6","saving","setSaving","_useState7","_useState8","setServerUrl","_useState9","_useState10","errors","setErrors","_ServerUrl","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","baseUrl","headers","then","response","Object","entries","_ref2","value","label","id","catch","stop","apply","arguments","useEffect","ServerUrl","handleInputChange","e","target","Card","CardBody","Row","Col","md","FormGroup","Label","Input","type","onChange","border","borderRadius","required","Spinner","Button","variant","fontWeight","onClick","preventDefault","temp","values","every","x","validate","post","toast","textTransform","GenerateKey","Alert","MatButton","togglestatus","startIcon","CancelIcon","SyncList","syncList","setSyncList","facilities","setFacilities","modal","setModal","generateKeyModal","setGenerateKeyModal","sendToServerModal","setSendToServerModal","_useState11","_useState12","logModal","setLogModal","_useState13","_useState14","modal2","setModal2","_useState15","facilityId","startDate","endDate","all","_useState16","uploadDetails","setUploadDetails","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","uploadPercentage","setUploadPercentage","_useState23","_useState24","showErrorTable","_useState25","_useState26","_useState27","_useState28","_Facilities","Facilities","JsonSyncHistory","_JsonSyncHistory","_callee2","_context2","_callee3","_context3","applicationUserOrganisationUnits","_ref3","_ref4","organisationUnitName","organisationUnitId","handleSubmit","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","sent","t0","_x","_Fragment","facilityName","tableName","uploadSize","date","moment","dateLastSync","format","status","errorLog","processed","actions","Menu","position","Item","Buuton2","primary","Dropdown","item","text","fileName","responseType","responseData","blob","Blob","FileSaver","saveAs","CloudDownloadIcon","CloudUpload","VisibilityIcon","vaulue","checked","htmlFor","SettingsBackupRestoreIcon","fade","Generatekey","NewToken","UpdateToken","userToken","put","SettingList","serverUrl","_React$useState","React","_React$useState2","setShowModal","_React$useState3","_React$useState4","showModal2","setShowModal2","setUserToken","editTokenSetup","NewPersonalAccessToken","UpdatePersonalAccessToken","TabExampleMenuPositionRight","maxWidth","palette","background","paper","Moment","locale","momentLocalizer","header","padding","paddingBottom","inforoot","dropdown","marginRight","downmenu","TabPanel","index","other","_objectWithoutProperties","_excluded","Typography","component","hidden","Box","p","a11yProps","HomePage","setValue","getstate","state","urlIndex","params","href","queryString","RegExp","exec","getQueryParams","urlTabs","AppBar","Tabs","event","newValue","scrollButtons","indicatorColor","textColor","Tab","icon","CloudSyncIcon","SettingsIcon","Setting","App","Router","ToastContainer","Switch","Route","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","typography","version","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","_useState29","_useState30","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","alert","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","fontFamily","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"uZAAcA,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QAASC,IAAI,OAC3DC,EAAM,W,OCqBJC,EAnBE,SAAHC,GAAwB,IAAlBC,EAAUD,EAAVC,WAClB,OACEC,cAAA,OAAKC,UAAU,WAAUC,SACvBC,eAAA,OACEF,UAAU,+CACVG,KAAK,cACLC,MAAO,CAAEC,MAAM,GAADC,OAAKR,EAAU,KAAKS,OAAQ,QAASN,SAAA,CAGlDH,EAAW,QAIpB,E,skBCcMU,I,OAAa,CACfC,IAAKC,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACc,IAAMC,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC/DG,MAAOL,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACgB,IAAKD,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAChEI,MAAON,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACiB,IAAKF,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAChEK,OAAQP,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACmB,IAAaJ,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACzEO,YAAaT,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACqB,IAAYN,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC7ES,KAAMX,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACsB,IAAIP,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC9DU,OAAQZ,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACwB,KAAOT,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACnEY,OAAQd,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAAC0B,IAAUX,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACtEc,UAAWhB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAAC2B,KAASZ,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACxEe,SAAUjB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAAC4B,KAAQb,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACtEgB,SAAUlB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACqB,IAAYN,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC1EiB,aAAcnB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAAC+B,IAAWhB,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC7EmB,YAAarB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACiB,IAAKF,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACtEoB,OAAQtB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACiC,KAAMlB,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAClEqB,UAAWvB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACmC,IAAWpB,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC1EuB,gBAAiBzB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACqC,KAAMtB,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC3EyB,WAAY3B,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACsC,KAAUvB,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,MAExE0B,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACF1C,MAAO,OACP2C,UAAWR,EAAMG,QAAQ,IAE7BM,OAAQ,CACJP,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCO,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJ7C,OAAQ,GACRF,MAAO,KAEXgD,OAAQ,CACJX,OAAQF,EAAMG,QAAQ,IAG1BW,KAAM,CACF,QAAS,CACLZ,OAAQF,EAAMG,QAAQ,KAG9BY,MAAO,CACHX,QAAS,QAEhB,IAuEcY,GApEF,SAAC7C,GAAW,IAAD8C,EACJnB,KAEhBoB,QAAQC,IAAIhD,GAiBZ,OACIZ,cAAA,OAAAE,SAEIF,cAAC6D,MAAKH,EAAA,CAACI,OAAQlD,EAAMmD,UAAWC,OAAQpD,EAAMqD,YAAahE,UAAWW,EAAMX,UAAWiE,KAAK,KAAKC,UAAU,GAAMC,YAAAV,EAAA,WAAU,UAAQU,YAAAV,EAAA,WAC/HvD,eAACkE,KAAI,CAAAnE,SAAA,CACDF,cAACsE,KAAW,CAACN,OAAQpD,EAAMqD,YAAY/D,SAAC,UACxCF,cAACuE,KAAS,CAAArE,SACNF,cAACwE,IAAa,CACVC,MAAOhE,GACPiE,MAAO,qBACPC,QAAS,CACL,CAAED,MAAO,OAAQE,MAAO,OAAQC,WAAW,GAC3C,CAAEH,MAAO,QAASE,MAAO,QAASC,WAAW,GAC7C,CAAEH,MAAO,SAAUE,MAAO,SAAUC,WAAW,IAEnDC,KAAO,GAAGC,KAAI,SAACC,GAAG,MAAM,CAEpBC,KAAMD,EAAIC,KACVC,MAAOF,EAAIE,MACXC,OAAQH,EAAIG,OAEf,IAEDC,QAAS,CACLC,YAAa,CACTC,gBAAiB,UACjBC,MAAO,QAEXC,iBAAkB,CACdlF,MAAQ,OACRmF,YAAa,SAEjBZ,WAAW,EACXa,cAAc,EACdC,qBAAsB,OACtBC,gBAAgB,CAAC,GAAG,GAAG,KACvBC,SAAS,GACTC,iBAAkB,aAK3BpC,KAIvB,E,UC1IMnB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACF1C,MAAO,OACP2C,UAAWR,EAAMG,QAAQ,IAE7BM,OAAQ,CACJP,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCO,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJ7C,OAAQ,GACRF,MAAO,KAEXgD,OAAQ,CACJX,OAAQF,EAAMG,QAAQ,IAG1BW,KAAM,CACF,QAAS,CACLZ,OAAQF,EAAMG,QAAQ,KAG9BY,MAAO,CACHX,QAAS,QAEbqC,MAAO,CACHK,MAAO,UACPQ,SAAU,QAEdC,QAAS,CACLT,MAAO,WACPQ,SAAU,QAEjB,IAqJcE,GAjJM,SAACrF,GAAW,IAAD8C,EACtBwC,EAAU3D,KAChB4D,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAE7CI,GAFcF,EAAA,GAAYA,EAAA,GAEUD,mBADd,CAAEI,SAAU,GAAIC,SAAU,GAAI7G,IAAI,MACG8G,EAAAJ,YAAAC,EAAA,GAApDI,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,EAA4BT,oBAAS,GAAMU,EAAAR,YAAAO,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,EAAkCb,mBAAU,IAAGc,EAAAZ,YAAAW,EAAA,GAA7BE,GAAFD,EAAA,GAAcA,EAAA,IAC9BE,EAA4BhB,mBAAS,CAAC,GAAEiB,EAAAf,YAAAc,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAOA,SAAAG,IAiBvB,OAjBuBA,EAAAC,YAAAC,cAAAC,MAAxB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACIC,IACKtI,IAAI,GAADY,OAAI2H,EAAO,oBACX,CAAEC,QAAS,CAAC,cAAe,UAAA5H,OAAajB,MAE3C8I,MAAK,SAACC,GACHlB,EACImB,OAAOC,QAAQF,EAASvD,MAAMC,KAAI,SAAAjF,GAAA,IAAA0I,EAAAlC,YAAAxG,EAAA,GAAO2I,GAAFD,EAAA,GAAOA,EAAA,UAAO,CACjDE,MAAOD,EAAM7I,IACb6I,MAAOA,EAAME,GAChB,IAET,IACCC,OAAM,SAAC1D,GAER,IAAG,wBAAA4C,EAAAe,OAAA,GAAAjB,EAAA,MAEVkB,MAAA,KAAAC,UAAA,CArBDC,qBAAU,YAGV,WACwBxB,EAAAsB,MAAC,KAADC,UAAA,CAHpBE,EACJ,GAAG,IAqBH,IAAMC,EAAoB,SAAAC,GACtBvC,EAAa7F,wBAAA,GAAM4F,GAAU,GAAAvC,YAAA,GAAI+E,EAAEC,OAAOnE,KAAOkE,EAAEC,OAAOX,QAC9D,EA2CA,OACIzI,cAAA,OAAAE,SAEIF,cAAC6D,MAAKH,EAAA,CAACI,OAAQlD,EAAMmD,UAAWC,OAAQpD,EAAMqD,YAAahE,UAAWW,EAAMX,UAAWiE,KAAK,KAAKC,UAAU,GAAMC,YAAAV,EAAA,WAAU,UAAQU,YAAAV,EAAA,WAC/HvD,eAACkE,KAAI,CAAAnE,SAAA,CACDF,cAACsE,KAAW,CAACN,OAAQpD,EAAMqD,YAAY/D,SAAC,oBACxCF,cAACuE,KAAS,CAAArE,SACNF,cAACqJ,KAAI,CAAAnJ,SACDC,eAACmJ,KAAQ,CAAApJ,SAAA,CACLC,eAACoJ,KAAG,CAAArJ,SAAA,CAEAF,cAACwJ,KAAG,CAACC,GAAI,GAAGvJ,SACRC,eAACuJ,KAAS,CAAAxJ,SAAA,CACNF,cAAC2J,KAAK,CAAAzJ,SAAE,cACRF,cAAC4J,KAAK,CACFC,KAAK,OACL5E,KAAK,WACL0D,GAAG,WACHF,MAAO9B,EAAWH,SAClBsD,SAAUZ,EACV7I,MAAO,CAAC0J,OAAQ,oBAAoBC,aAAa,UACjDC,UAAQ,IAEQ,KAAnB3C,EAAOd,SACJxG,cAAA,QAAMC,UAAWiG,EAAQhB,MAAMhF,SAAEoH,EAAOd,WACxC,QAGZxG,cAACwJ,KAAG,CAACC,GAAI,GAAGvJ,SACRC,eAACuJ,KAAS,CAAAxJ,SAAA,CACNF,cAAC2J,KAAK,CAAAzJ,SAAE,cACRF,cAAC4J,KAAK,CACFC,KAAK,WACL5E,KAAK,WACL0D,GAAG,WACHF,MAAO9B,EAAWF,SAClBqD,SAAUZ,EACV7I,MAAO,CAAC0J,OAAQ,oBAAoBC,aAAa,UACjDC,UAAQ,IAEQ,KAAnB3C,EAAOb,SACJzG,cAAA,QAAMC,UAAWiG,EAAQhB,MAAMhF,SAAEoH,EAAOb,WACxC,WAIfM,EAAS/G,cAACkK,KAAO,IAAM,GACxBlK,cAAA,SACAA,cAACmK,KAAM,CACHN,KAAK,SACLO,QAAQ,YAER/J,MAAO,CAACiF,gBAAgB,UAAU+E,WAAW,UAE7CC,QA9EX,SAACnB,GAClBA,EAAEoB,iBAlBW,WACb,IAAIC,EAAIzJ,YAAA,GAAQuG,GAahB,OAZAkD,EAAKhE,SAAWG,EAAWH,SACrB,GACA,uBACNgE,EAAK/D,SAAWE,EAAWF,SACrB,GACA,uBACN+D,EAAK5K,IAAM+G,EAAW/G,IAChB,GACA,yBACN2H,EAASxG,YAAC,CAAC,EACJyJ,IAEAlC,OAAOmC,OAAOD,GAAME,OAAM,SAACC,GAAC,MAAW,KAANA,CAAQ,GACpD,CAIQC,KACA5D,GAAU,GACViB,IAAM4C,KAAK,GAADtK,OAAI2H,EAAO,4BAA2BvB,EAC5C,CAAEwB,QAAS,CAAC,cAAe,UAAA5H,OAAajB,MAGvC8I,MAAK,SAAAC,GACFrB,GAAU,GACVpG,EAAMqI,YACN6B,IAAM9E,QAAQ,8BACdpF,EAAMqD,aAEV,IACC2E,OAAM,SAAA1D,GACH8B,GAAU,GACV8D,IAAM5F,MAAM,wBACZtE,EAAMqD,aACV,IAEZ,EAyDsD/D,SAEtBF,cAAA,QAAMK,MAAO,CAAE0K,cAAe,cAAexF,MAAM,QAASrF,SAAC,gCAK1EwD,KAIvB,E,UC1LMnB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACF1C,MAAO,OACP2C,UAAWR,EAAMG,QAAQ,IAE7BM,OAAQ,CACJP,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCO,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJ7C,OAAQ,GACRF,MAAO,KAEXgD,OAAQ,CACJX,OAAQF,EAAMG,QAAQ,IAG1BW,KAAM,CACF,QAAS,CACLZ,OAAQF,EAAMG,QAAQ,KAG9BY,MAAO,CACHX,QAAS,QAEhB,IAuEcmI,GApEK,SAACpK,GAAW,IAAD8C,EACrBwC,EAAU3D,KAehB,OACIvC,cAAA,OAAAE,SAEIF,cAAC6D,MAAKH,EAAA,CAACI,OAAQlD,EAAMmD,UAAWC,OAAQpD,EAAMqD,YAAahE,UAAWW,EAAMX,UAAWiE,KAAK,KAAKC,UAAU,GAAMC,YAAAV,EAAA,WAAU,UAAQU,YAAAV,EAAA,WAC/HvD,eAACkE,KAAI,CAAAnE,SAAA,CACDF,cAACsE,KAAW,CAACN,OAAQpD,EAAMqD,YAAY/D,SAAC,iBACxCF,cAACuE,KAAS,CAAArE,SAENF,cAACqJ,KAAI,CAAAnJ,SACDC,eAACmJ,KAAQ,CAAApJ,SAAA,CACLC,eAACoJ,KAAG,CAAArJ,SAAA,CACAF,cAACwJ,KAAG,CAACC,GAAI,GAAGvJ,SAERF,cAACiL,KAAK,CAAC1F,MAAM,UAASrF,SAClBC,eAAA,KAAGE,MAAO,CAAC4C,UAAW,SAAU/C,SAAA,CAAC,sBACJF,cAAA,QAAMK,MAAO,CAAEgK,WAAY,UAAUnK,SAAE,6CAAkD,kCAQ9HF,cAACwJ,KAAG,CAACC,GAAI,OAIbzJ,cAAA,SAEAA,cAAA,SAIAA,cAACkL,KAAS,CACNd,QAAQ,YACR7E,MAAM,UACN+E,QAAS1J,EAAMuK,aACflL,UAAWiG,EAAQ5C,OACnB8H,UAAWpL,cAACqL,KAAU,IAAInL,SAC7B,sBAOVwD,KAIvB,ECrEMjD,GAAa,CACnBC,IAAKC,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACc,IAAMC,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC/DG,MAAOL,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACgB,IAAKD,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAChEI,MAAON,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACiB,IAAKF,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAChEK,OAAQP,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACmB,IAAaJ,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACzEO,YAAaT,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACqB,IAAYN,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC7ES,KAAMX,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACsB,IAAIP,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC9DU,OAAQZ,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACwB,KAAOT,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACnEY,OAAQd,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAAC0B,IAAUX,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACtEc,UAAWhB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAAC2B,KAASZ,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACxEe,SAAUjB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAAC4B,KAAQb,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACtEgB,SAAUlB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACqB,IAAYN,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC1EiB,aAAcnB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAAC+B,IAAWhB,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC7EmB,YAAarB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACiB,IAAKF,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACtEoB,OAAQtB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACiC,KAAMlB,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAClEqB,UAAWvB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACmC,IAAWpB,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC1EuB,gBAAiBzB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACqC,KAAMtB,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC3EyB,WAAY3B,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACsC,KAAUvB,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,KAGpE0B,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACF1C,MAAO,OACP2C,UAAWR,EAAMG,QAAQ,IAE7BM,OAAQ,CACJP,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCO,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJ7C,OAAQ,GACRF,MAAO,KAEXgD,OAAQ,CACJX,OAAQF,EAAMG,QAAQ,IAG1BW,KAAM,CACF,QAAS,CACLZ,OAAQF,EAAMG,QAAQ,KAG9BY,MAAO,CACHX,QAAS,QAEbqC,MAAO,CACHK,MAAO,UACPQ,SAAU,QAEdC,QAAS,CACLT,MAAO,WACPQ,SAAU,QAEjB,IA0WcuF,GAxWE,SAAC1K,GAGhB,IAAMsF,EAAU3D,KAChB4D,EAAgCC,mBAAU,IAAGC,EAAAC,YAAAH,EAAA,GAAtCoF,EAAQlF,EAAA,GAAEmF,EAAWnF,EAAA,GAC5BE,EAAoCH,mBAAU,IAAGM,EAAAJ,YAAAC,EAAA,GAA1CkF,EAAU/E,EAAA,GAAEgF,EAAahF,EAAA,GAChCG,EAA0BT,oBAAS,GAAMU,EAAAR,YAAAO,EAAA,GAAlC8E,EAAK7E,EAAA,GAAE8E,EAAQ9E,EAAA,GACtBG,EAAgDb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAAxD4E,EAAgB3E,EAAA,GAAE4E,EAAmB5E,EAAA,GAC5CE,EAAkDhB,oBAAS,GAAMiB,EAAAf,YAAAc,EAAA,GAA1D2E,EAAiB1E,EAAA,GAAE2E,EAAoB3E,EAAA,GAC9C4E,EAAgC7F,oBAAS,GAAM8F,EAAA5F,YAAA2F,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBlI,EAAS,WAAH,OAAS4H,GAAUD,EAAO,EAItCU,EAA4BjG,oBAAS,GAAMkG,EAAAhG,YAAA+F,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAGxBG,EAA0CrG,mBADpB,CAAEsG,WAAY,GAAIC,UAAY,GAAIC,QAAQ,GAAIC,KAAI,IACPC,EAAAxG,YAAAmG,EAAA,GAA1DM,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,EAA4B7G,oBAAS,GAAM8G,EAAA5G,YAAA2G,EAAA,GAApClG,EAAMmG,EAAA,GAAElG,EAASkG,EAAA,GACxBC,GAA4B/G,mBAAS,CAAC,GAAEgH,GAAA9G,YAAA6G,GAAA,GAAjC7F,GAAM8F,GAAA,GAAE7F,GAAS6F,GAAA,GACxBC,GAAgDjH,mBAAS,GAAEkH,GAAAhH,YAAA+G,GAAA,GAApDE,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GAC5CG,GAA4CrH,oBAAS,GAAMsH,GAAApH,YAAAmH,GAAA,GAApDE,GAAcD,GAAA,GACrBE,IADwCF,GAAA,GACAtH,mBAAS,KAAGyH,GAAAvH,YAAAsH,GAAA,GACpDE,IADmBD,GAAA,GAAiBA,GAAA,GACYzH,sBAAU2H,GAAAzH,YAAAwH,GAAA,GAAnCC,GAAA,GAAqBA,GAAA,GAE9C/E,qBAAU,YA2BL,WAEwBgF,GAAAlF,MAAC,KAADC,UAAA,CA5BzBkF,GACAC,IACA,GAAG,IAGH,IAAMtD,GAAW,WACb,IAAIJ,EAAIzJ,YAAA,GAAQuG,IAOZ,OANJkD,EAAKkC,WAAaK,EAAcL,WAC1B,GACA,uBACFnF,GAASxG,YAAC,CAAC,EACJyJ,IAEAlC,OAAOmC,OAAOD,GAAME,OAAM,SAACC,GAAC,MAAW,KAANA,CAAQ,GACxD,EACC,SACcuD,KAAe,OAAAC,GAAArF,MAAC,KAADC,UAAA,CAW9B,SAAAoF,KADC,OACDA,GAAA1G,YAAAC,cAAAC,MAXA,SAAAyG,IAAA,OAAA1G,cAAAG,MAAA,SAAAwG,GAAA,cAAAA,EAAAtG,KAAAsG,EAAArG,MAAA,OACIC,IACKtI,IAAI,GAADY,OAAI2H,EAAO,yBAChB,CAAEC,QAAS,CAAC,cAAe,UAAA5H,OAAajB,MAEtC8I,MAAK,SAACC,GACHmD,EAAYnD,EAASvD,KACzB,IACC8D,OAAM,SAAC1D,GACR,IAAG,wBAAAmJ,EAAAxF,OAAA,GAAAuF,EAAA,MACVtF,MAAA,KAAAC,UAAA,CAEwB,SAAAiF,KAkBxB,OAlBwBA,GAAAvG,YAAAC,cAAAC,MAAzB,SAAA2G,IAAA,OAAA5G,cAAAG,MAAA,SAAA0G,GAAA,cAAAA,EAAAxG,KAAAwG,EAAAvG,MAAA,OACIC,IACKtI,IAAI,GAADY,OAAI2H,EAAO,WACf,CAAEC,QAAS,CAAC,cAAe,UAAA5H,OAAajB,MAEvC8I,MAAK,SAACC,GAEHqD,EACIpD,OAAOC,QAAQF,EAASvD,KAAK0J,kCAAkCzJ,KAAI,SAAA0J,GAAA,IAAAC,EAAApI,YAAAmI,EAAA,GAAOhG,GAAFiG,EAAA,GAAOA,EAAA,UAAO,CAClFhG,MAAOD,EAAMkG,qBACblG,MAAOA,EAAMmG,mBACd,IAEX,IACChG,OAAM,SAAC1D,GAER,IAAG,wBAAAqJ,EAAA1F,OAAA,GAAAyF,EAAA,MAEVxF,MAAA,KAAAC,UAAA,CACD,IAWM8F,GAAY,eAAA/O,EAAA2H,YAAAC,cAAAC,MAAG,SAAAC,EAAMuB,GAAC,OAAAzB,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAER,GADhBmB,EAAEoB,iBACFvD,GAAU,IACP4D,KAAW,CAAD9C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEaC,IAAMtI,IAAI,GAADY,OAAI2H,EAAO,0BAAA3H,OAAyBwM,EAAcL,WAAU,aAAAnM,OAAYwM,EAAcF,KAAO,CACpH1E,QAAS,CAAC,cAAe,UAAA5H,OAAajB,IACtCwP,iBAAkB,SAAAC,GACdvB,GACAwB,SACIC,KAAKC,MAA8B,IAAvBH,EAAcI,OAAgBJ,EAAcK,SAI5DC,YAAW,kBAAM7B,GAAoB,EAAE,GAAE,IAC7C,IACD,KAAD,EAXO1F,EAAAwH,KAYTxE,IAAM9E,QAAQ,mCACdhC,IACAkK,KACAlH,GAAU,GAAOc,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyH,GAAAzH,EAAA,SAEjBd,GAAU,GAAO,QAAAc,EAAAE,KAAA,iBAGrB8C,IAAM5F,MAAM,0BAA0B,yBAAA4C,EAAAe,OAAA,GAAAjB,EAAA,mBAG7C,gBA5BiB4H,GAAA,OAAA1P,EAAAgJ,MAAA,KAAAC,UAAA,KA+FpB,OACE5I,eAAA,OAAAD,SAAA,EACMyN,IAAmBxN,eAAAsP,WAAA,CAAAvP,SAAA,CACjBF,cAACmK,KAAM,CACPC,QAAQ,YACR/J,MAAO,CAACiF,gBAAgB,WACxBrF,UAAU,oBAEVqK,QA1EgB,WACpBsB,GAAUD,EACd,EAwEkCzL,SAE1BF,cAAA,QAAMK,MAAO,CAAE0K,cAAe,aAAcxF,MAAM,QAASrF,SAAC,2BAEhEF,cAAA,SAAKA,cAAA,SACLA,cAACwE,IAAa,CACbC,MAAOhE,GACJiE,MAAM,6BACNC,QAAS,CAET,CACID,MAAO,gBACPE,MAAO,gBAEX,CAAEF,MAAO,aAAcE,MAAO,YAAaC,WAAW,GACtD,CAAEH,MAAO,eAAgBE,MAAO,aAAcC,WAAW,GACzD,CAAEH,MAAO,kBAAmBE,MAAO,OAAQC,WAAW,GACtD,CAAEH,MAAO,SAAUE,MAAO,SAAUC,WAAW,GAC/C,CAAEH,MAAO,SAAUE,MAAO,UAAWC,WAAW,IAEhDC,KAAOyG,EAASxG,KAAI,SAACC,GAAG,MAAM,CAE1B0K,aAAc1K,EAAI0K,aAClBC,UAAW3K,EAAI2K,UACfC,WAAY5K,EAAI4K,WAChBC,KAAOC,IAAO9K,EAAI+K,cAAcC,OAAO,QACvCC,OAAuB,OAAfjL,EAAIkL,SAAkC,IAAhBlL,EAAImL,UAAgB,aAAe,YAAc,QAE/EC,QAASpQ,cAAA,OAAAE,SACGF,cAACqQ,KAAKA,KAAI,CAACC,SAAS,QAAOpQ,SAC3BF,cAACqQ,KAAKE,KAAI,CAAArQ,SACNF,cAACwQ,KAAO,CAACnQ,MAAO,CAACiF,gBAAgB,kBAAmBmL,SAAO,EAAAvQ,SAC3DF,cAAC0Q,KAAQ,CAACC,MAAI,EAACC,KAAK,SAAQ1Q,SAE5BC,eAACuQ,KAASL,KAAI,CAAChQ,MAAO,CAAE4C,UAAU,QAAU/C,SAAA,CAEpCC,eAACuQ,KAASH,KAAI,CAAEjG,QAAS,kBA/FvCuG,EA+F0D7L,EAAI2K,eA9FhF1H,IACKtI,IAAI,GAADY,OAAI2H,EAAO,oBAAA3H,OAAmBsQ,GAC9B,CAAC1I,QAAS,CAAC,cAAgB,UAAD5H,OAAYjB,IAAUwR,aAAc,SAEjE1I,MAAK,SAACC,GACH,IAAM0I,EAAe1I,EAASvD,KAC1BkM,EAAO,IAAIC,KAAK,CAACF,GAAe,CAAClH,KAAM,6BAC3CqH,KAAUC,OAAOH,EAAK,GAADzQ,OAAKsQ,GAC9B,IACCjI,OAAM,SAAC1D,GACR,IAXa,IAAC2L,CA+FwE,EAAC3Q,SAAA,CAACF,cAACoR,KAAiB,CAAC7L,MAAM,YAAW,oBAEhGpF,eAACuQ,KAASH,KAAI,CAAEjG,QAAS,kBAAyBtF,EAAI2K,UAAW3K,EAAI4J,wBAtGrG5C,GAAsBD,EAsGkG,EAAC7L,SAAA,CAACF,cAACqR,IAAW,CAAC9L,MAAM,YAAW,qBAExHpF,eAACuQ,KAASH,KAAI,CAAEjG,QAAS,WA9GzDwB,GAAqBD,EA8GiE,EAAC3L,SAAA,CAACF,cAACsR,KAAc,CAAC/L,MAAM,YAAW,uBAEzFpF,eAACuQ,KAASH,KAAI,CAAEjG,QAAS,WA7GzD8B,GAAaD,EA6GkE,EAACjM,SAAA,CAACF,cAACsR,KAAc,CAAC/L,MAAM,YAAW,4BASzG,IAEDH,QAAS,CACDC,YAAa,CACTC,gBAAiB,UACjBC,MAAO,QAEXC,iBAAkB,CACdlF,MAAQ,OACRmF,YAAa,SAEjBZ,WAAW,EACXa,cAAc,EACdC,qBAAsB,OACtBC,gBAAgB,CAAC,GAAG,GAAG,KACvBC,SAAS,GACTC,iBAAkB,UAKlC9F,cAAC6D,KAAK,CAACC,OAAQ6H,EAAO3H,OAAQA,EAAQ/D,UAAWW,EAAMX,UAAWiE,KAAK,KAAMC,SAAS,SAAQjE,SAC1FC,eAACkE,KAAI,CAAAnE,SAAA,CACLF,cAACsE,KAAW,CAACN,OAAQA,EAAO9D,SAAC,wBACzBF,cAACuE,KAAS,CAAArE,SACNF,cAACqJ,KAAI,CAAAnJ,SACDC,eAACmJ,KAAQ,CAAApJ,SAAA,CACLC,eAACoJ,KAAG,CAAArJ,SAAA,CACJF,cAACwJ,KAAG,CAACC,GAAI,GAAGvJ,SACZC,eAACuJ,KAAS,CAAAxJ,SAAA,CACVF,cAAC2J,KAAK,CAAAzJ,SAAE,eACJC,eAACyJ,KAAK,CACFC,KAAK,SACL5E,KAAK,aACL0D,GAAG,aACHmB,SAxMN,SAAAX,GACtB6D,EAAgBjM,wBAAA,GAAMgM,GAAa,GAAA3I,YAAA,GAAI+E,EAAEC,OAAOnE,KAAOkE,EAAEC,OAAOX,QACpE,EAuMgCpI,MAAO,CAAC0J,OAAQ,oBAAoBC,aAAa,UACjDuH,OAAQxE,EAAcL,WAAWxM,SAAA,CAEjCF,cAAA,UAAAE,SAAS,MACRuL,EAAW1G,KAAI,SAAAyD,GAAA,IAAGE,EAAKF,EAALE,MAAOD,EAAKD,EAALC,MAAK,OAC3BzI,cAAA,UAAoByI,MAAOA,EAAMvI,SAChCwI,GADYD,EAEJ,OAGK,KAArBnB,GAAOoF,WACJ1M,cAAA,QAAMC,UAAWiG,EAAQhB,MAAMhF,SAAEoH,GAAOoF,aACxC,QAGRvM,eAAA,OAAKF,UAAU,mCAAkCC,SAAA,CAC7CF,cAAA,SACA6J,KAAK,WACL5J,UAAU,mBACVgF,KAAK,MACL0D,GAAG,MACHmB,SA3NN,SAAAX,GACfA,EAAEC,OAAOoI,QACRxE,EAAgBjM,wBAAA,GAAMgM,GAAa,GAAA3I,YAAA,GAAI,MAAQ+E,EAAEC,OAAOoI,WAGxDxE,EAAgBjM,wBAAA,GAAMgM,GAAa,GAAA3I,YAAA,GAAI,OAAQ,IAEvD,EAqN4BoN,QAASzE,EAAcF,MAGvB7M,cAAA,SACAC,UAAU,mBACVwR,QAAQ,MAAKvR,SACZ,0BAKLF,cAAA,SACAA,cAAA,KAAAE,UAAwB,IAApB6M,EAAcF,IAAa,0CAA4C,wCAC3E7M,cAAA,SACC+G,EACD/G,cAACH,EAAQ,CAACE,WAAYwN,KACpB,GACFvN,cAAA,SAEAA,cAACkL,KAAS,CACNrB,KAAK,SACLO,QAAQ,YACR7E,MAAM,UACNtF,UAAWiG,EAAQ5C,OACnBjD,MAAO,CAACiF,gBAAgB,UAAU+E,WAAW,UAC7Ce,UAAWpL,cAAC0R,KAAyB,IACrCpH,QAASuE,GAAa3O,SAGpB6G,EAGF/G,cAAA,QAAMK,MAAO,CAAE0K,cAAe,cAAe7K,SAAC,8BAF9CF,cAAA,QAAMK,MAAO,CAAE0K,cAAe,cAAe7K,SAAC,eAMlDF,cAACkL,KAAS,CACNd,QAAQ,YACR7E,MAAM,UACN+E,QAAStG,EACT/D,UAAWiG,EAAQ5C,OACnBjD,MAAO,CAACiF,gBAAgB,WACxB8F,UAAWpL,cAACqL,KAAU,IAAInL,SAE1BF,cAAA,QAAMK,MAAO,CAAE0K,cAAe,cAAexF,MAAM,QAASrF,SAAC,yBAOrFF,cAAC6D,KAAK,CAACC,OAAQyI,EAAQvI,OA5Ub,WAAH,OAASwI,GAAWD,EAAQ,EA4UKpI,UAAU,EAAOwN,MAAM,EAAMtR,MAAO,CAAC4C,UAAU,SAAUiB,KAAK,KAAIhE,SACtGF,cAACuE,KAAS,CAAArE,SACNF,cAAA,MAAAE,SAAI,iDAIZF,cAACiG,GAAY,CAAChC,YApVY,WAAH,OAAS+H,GAAsBD,EAAmB,EAoVrBhI,UAAWgI,IAC/D/L,cAACyD,GAAI,CAACQ,YAvVW,WAAH,OAASmI,GAAaD,EAAU,EAuVXpI,UAAWoI,IAC9CnM,cAAC4R,GAAW,CAAC3N,YAvVY,WAAH,OAAS6H,GAAqBD,EAAkB,EAuVpB9H,UAAW8H,MAGrE,ECxcMtJ,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACF1C,MAAO,OACP2C,UAAWR,EAAMG,QAAQ,IAE7BM,OAAQ,CACJP,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCO,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJ7C,OAAQ,GACRF,MAAO,KAEXgD,OAAQ,CACJX,OAAQF,EAAMG,QAAQ,IAG1BW,KAAM,CACF,QAAS,CACLZ,OAAQF,EAAMG,QAAQ,KAG9BY,MAAO,CACHX,QAAS,QAEbqC,MAAO,CACHK,MAAO,UACPQ,SAAU,QAEdC,QAAS,CACLT,MAAO,WACPQ,SAAU,QAEjB,IAsKc8L,GAlKE,SAACjR,GAAW,IAAD8C,EAClBwC,EAAU3D,KAChB4D,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAE7CI,GAFcF,EAAA,GAAYA,EAAA,GAEUD,mBADd,CAAEI,SAAU,GAAIC,SAAU,GAAI7G,IAAI,MACG8G,EAAAJ,YAAAC,EAAA,GAApDI,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,EAA4BT,oBAAS,GAAMU,EAAAR,YAAAO,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,EAAkCb,mBAAU,IAAGc,EAAAZ,YAAAW,EAAA,GAA7BE,GAAFD,EAAA,GAAcA,EAAA,IAC9BE,EAA4BhB,mBAAS,CAAC,GAAEiB,EAAAf,YAAAc,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAOI,SAAAG,IAiBzB,OAjByBA,EAAAC,YAAAC,cAAAC,MAAxB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACEC,IACKtI,IAAI,GAADY,OAAI2H,EAAO,oBACf,CAAEC,QAAS,CAAC,cAAe,UAAA5H,OAAajB,MAEvC8I,MAAK,SAACC,GACHlB,EACImB,OAAOC,QAAQF,EAASvD,MAAMC,KAAI,SAAAjF,GAAA,IAAA0I,EAAAlC,YAAAxG,EAAA,GAAO2I,GAAFD,EAAA,GAAOA,EAAA,UAAO,CACjDE,MAAOD,EAAM7I,IACb6I,MAAOA,EAAME,GACd,IAEX,IACCC,OAAM,SAAC1D,GAER,IAAG,wBAAA4C,EAAAe,OAAA,GAAAjB,EAAA,MAEVkB,MAAA,KAAAC,UAAA,CArBHC,qBAAU,YAGN,WACwBxB,EAAAsB,MAAC,KAADC,UAAA,CAH1BE,EACF,GAAG,IAqBH,IAAMC,EAAoB,SAAAC,GACxBvC,EAAa7F,wBAAA,GAAM4F,GAAU,GAAAvC,YAAA,GAAI+E,EAAEC,OAAOnE,KAAOkE,EAAEC,OAAOX,QAC5D,EA2CF,OACIzI,cAAA,OAAAE,SAEMF,cAAC6D,MAAKH,EAAA,CAACI,OAAQlD,EAAMmD,UAAWC,OAAQpD,EAAMqD,YAAahE,UAAWW,EAAMX,UAAWiE,KAAK,KAAKC,UAAU,GAAMC,YAAAV,EAAA,WAAU,UAAQU,YAAAV,EAAA,WACjIvD,eAACkE,KAAI,CAAAnE,SAAA,CACHF,cAACsE,KAAW,CAACN,OAAQpD,EAAMqD,YAAY/D,SAAC,2BACxCF,cAACuE,KAAS,CAAArE,SACNF,cAACqJ,KAAI,CAAAnJ,SACLC,eAACmJ,KAAQ,CAAApJ,SAAA,CACTC,eAACoJ,KAAG,CAAArJ,SAAA,CAEIF,cAACwJ,KAAG,CAACC,GAAI,GAAGvJ,SACZC,eAACuJ,KAAS,CAAAxJ,SAAA,CACVF,cAAC2J,KAAK,CAAAzJ,SAAE,kBACAF,cAAC4J,KAAK,CACFC,KAAK,OACL5E,KAAK,MACL0D,GAAG,MACHF,MAAO9B,EAAW/G,IAClBkK,SAAUZ,EACV7I,MAAO,CAAC0J,OAAQ,oBAAoBC,aAAa,UACjDC,UAAQ,IAEO,KAAd3C,EAAO1H,IACQI,cAAA,QAAMC,UAAWiG,EAAQhB,MAAMhF,SAAEoH,EAAO1H,MACxC,QAG5BI,cAACwJ,KAAG,CAACC,GAAI,GAAGvJ,SAChBC,eAACuJ,KAAS,CAAAxJ,SAAA,CACVF,cAAC2J,KAAK,CAAAzJ,SAAE,cACAF,cAAC4J,KAAK,CACFC,KAAK,OACL5E,KAAK,WACL0D,GAAG,WACHF,MAAO9B,EAAWH,SAClBsD,SAAUZ,EACV7I,MAAO,CAAC0J,OAAQ,oBAAoBC,aAAa,UACjDC,UAAQ,IAEY,KAAnB3C,EAAOd,SACJxG,cAAA,QAAMC,UAAWiG,EAAQhB,MAAMhF,SAAEoH,EAAOd,WACxC,QAGhBxG,cAACwJ,KAAG,CAACC,GAAI,GAAGvJ,SACZC,eAACuJ,KAAS,CAAAxJ,SAAA,CACVF,cAAC2J,KAAK,CAAAzJ,SAAE,cACAF,cAAC4J,KAAK,CACFC,KAAK,WACL5E,KAAK,WACL0D,GAAG,WACHF,MAAO9B,EAAWF,SAClBqD,SAAUZ,EACV7I,MAAO,CAAC0J,OAAQ,oBAAoBC,aAAa,UACjDC,UAAQ,IAEgB,KAAnB3C,EAAOb,SACJzG,cAAA,QAAMC,UAAWiG,EAAQhB,MAAMhF,SAAEoH,EAAOb,WACxC,WAIvBM,EAAS/G,cAACkK,KAAO,IAAM,GACxBlK,cAAA,SACIA,cAACmK,KAAM,CACHN,KAAK,SACLO,QAAQ,YAER/J,MAAO,CAACiF,gBAAgB,UAAU+E,WAAW,UAE7CC,QA/FH,SAACnB,GACpBA,EAAEoB,iBAlBa,WACjB,IAAIC,EAAIzJ,YAAA,GAAQuG,GAaZ,OAZJkD,EAAKhE,SAAWG,EAAWH,SACrB,GACA,uBACFgE,EAAK/D,SAAWE,EAAWF,SACzB,GACA,uBACF+D,EAAK5K,IAAM+G,EAAW/G,IACpB,GACA,yBACF2H,EAASxG,YAAC,CAAC,EACJyJ,IAEAlC,OAAOmC,OAAOD,GAAME,OAAM,SAACC,GAAC,MAAW,KAANA,CAAQ,GACpD,CAIYC,KACI5D,GAAU,GACViB,IAAM4C,KAAK,GAADtK,OAAI2H,EAAO,4BAA2BvB,EAC/C,CAAEwB,QAAS,CAAC,cAAe,UAAA5H,OAAajB,MAGpC8I,MAAK,SAAAC,GACFrB,GAAU,GACVpG,EAAMqI,YACN6B,IAAM9E,QAAQ,8BACdpF,EAAMqD,aAEV,IACC2E,OAAM,SAAA1D,GACH8B,GAAU,GACV8D,IAAM5F,MAAM,wBACZtE,EAAMqD,aACV,IAEhB,EA0E0C/D,SAEtBF,cAAA,QAAMK,MAAO,CAAE0K,cAAe,cAAexF,MAAM,QAASrF,SAAC,0CAKtEwD,KAInB,EC7MMnB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACF1C,MAAO,OACP2C,UAAWR,EAAMG,QAAQ,IAE7BM,OAAQ,CACJP,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCO,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJ7C,OAAQ,GACRF,MAAO,KAEXgD,OAAQ,CACJX,OAAQF,EAAMG,QAAQ,IAG1BW,KAAM,CACF,QAAS,CACLZ,OAAQF,EAAMG,QAAQ,KAG9BY,MAAO,CACHX,QAAS,QAEbqC,MAAO,CACHK,MAAO,UACPQ,SAAU,QAEdC,QAAS,CACLT,MAAO,WACPQ,SAAU,QAEjB,IAqKc+L,GAjKK,SAAClR,GAAW,IAAD8C,EACrBwC,EAAU3D,KAChB4D,EAAoCC,mBAAU,CAAEI,SAAU5F,EAAMmR,UAAUvL,SAAUC,SAAU,GAAI7G,IAAIgB,EAAMmR,UAAUnS,MAAMyG,EAAAC,YAAAH,EAAA,GAArHQ,EAAUN,EAAA,GAAEO,EAAaP,EAAA,GAChCE,EAA4BH,oBAAS,GAAMM,EAAAJ,YAAAC,EAAA,GAApCQ,EAAML,EAAA,GAAEM,EAASN,EAAA,GACxBG,EAAkCT,mBAAU,IAAGU,EAAAR,YAAAO,EAAA,GAA7BM,GAAFL,EAAA,GAAcA,EAAA,IAC9BG,EAA4Bb,mBAAS,CAAC,GAAEc,EAAAZ,YAAAW,EAAA,GAAjCK,EAAMJ,EAAA,GAAEK,EAASL,EAAA,GAMA,SAAAM,IAiBvB,OAjBuBA,EAAAC,YAAAC,cAAAC,MAAxB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACMC,IACKtI,IAAI,GAADY,OAAI2H,EAAO,oBACf,CAAEC,QAAS,CAAC,cAAe,UAAA5H,OAAajB,MAEvC8I,MAAK,SAACC,GACHlB,EACImB,OAAOC,QAAQF,EAASvD,MAAMC,KAAI,SAAAjF,GAAA,IAAA0I,EAAAlC,YAAAxG,EAAA,GAAO2I,GAAFD,EAAA,GAAOA,EAAA,UAAO,CACjDE,MAAOD,EAAM7I,IACb6I,MAAOA,EAAME,GACd,IAEX,IACCC,OAAM,SAAC1D,GAER,IAAG,wBAAA4C,EAAAe,OAAA,GAAAjB,EAAA,MAEZkB,MAAA,KAAAC,UAAA,CArBDC,qBAAU,YAGV,WACwBxB,EAAAsB,MAAC,KAADC,UAAA,CAHtBE,EACF,GAAG,IAqBH,IAAMC,EAAoB,SAAAC,GACxBvC,EAAa7F,wBAAA,GAAM4F,GAAU,GAAAvC,YAAA,GAAI+E,EAAEC,OAAOnE,KAAOkE,EAAEC,OAAOX,QAC5D,EA2CF,OACIzI,cAAA,OAAAE,SAEEF,cAAC6D,MAAKH,EAAA,CAACI,OAAQlD,EAAMmD,UAAWC,OAAQpD,EAAMqD,YAAahE,UAAWW,EAAMX,UAAWiE,KAAK,KAAKC,UAAU,GAAMC,YAAAV,EAAA,WAAU,UAAQU,YAAAV,EAAA,WACnIvD,eAACkE,KAAI,CAAAnE,SAAA,CACDF,cAACsE,KAAW,CAACN,OAAQpD,EAAMqD,YAAY/D,SAAC,kCACxCF,cAACuE,KAAS,CAAArE,SAEFF,cAACqJ,KAAI,CAAAnJ,SACDC,eAACmJ,KAAQ,CAAApJ,SAAA,CACLC,eAACoJ,KAAG,CAAArJ,SAAA,CAEJF,cAACwJ,KAAG,CAACC,GAAI,GAAGvJ,SACZC,eAACuJ,KAAS,CAAAxJ,SAAA,CACVF,cAAC2J,KAAK,CAAAzJ,SAAE,iBACJF,cAAC4J,KAAK,CACFC,KAAK,OACL5E,KAAK,MACL0D,GAAG,MACHF,MAAO9B,EAAW/G,IAClBkK,SAAUZ,EACV7I,MAAO,CAAC0J,OAAQ,oBAAoBC,aAAa,UACjDC,UAAQ,IAEG,KAAd3C,EAAO1H,IACJI,cAAA,QAAMC,UAAWiG,EAAQhB,MAAMhF,SAAEoH,EAAO1H,MACxC,QAGRI,cAACwJ,KAAG,CAACC,GAAI,GAAGvJ,SAChBC,eAACuJ,KAAS,CAAAxJ,SAAA,CACVF,cAAC2J,KAAK,CAAAzJ,SAAE,cACJF,cAAC4J,KAAK,CACFC,KAAK,OACL5E,KAAK,WACL0D,GAAG,WACHF,MAAO9B,EAAWH,SAClBsD,SAAUZ,EACV7I,MAAO,CAAC0J,OAAQ,oBAAoBC,aAAa,UACjDC,UAAQ,IAEQ,KAAnB3C,EAAOd,SACJxG,cAAA,QAAMC,UAAWiG,EAAQhB,MAAMhF,SAAEoH,EAAOd,WACxC,QAGRxG,cAACwJ,KAAG,CAACC,GAAI,GAAGvJ,SACZC,eAACuJ,KAAS,CAAAxJ,SAAA,CACVF,cAAC2J,KAAK,CAAAzJ,SAAE,cACAF,cAAC4J,KAAK,CACFC,KAAK,WACL5E,KAAK,WACL0D,GAAG,WACHF,MAAO9B,EAAWF,SAClBqD,SAAUZ,EACV7I,MAAO,CAAC0J,OAAQ,oBAAoBC,aAAa,UACjDC,UAAQ,IAEQ,KAAnB3C,EAAOb,SACJzG,cAAA,QAAMC,UAAWiG,EAAQhB,MAAMhF,SAAEoH,EAAOb,WACxC,WAIXM,EAAS/G,cAACkK,KAAO,IAAM,GACxBlK,cAAA,SACIA,cAACmK,KAAM,CACHN,KAAK,SACLO,QAAQ,YAER/J,MAAO,CAACiF,gBAAgB,UAAU+E,WAAW,UAE7CC,QAhGP,SAACnB,GACpBA,EAAEoB,iBAlBa,WACjB,IAAIC,EAAIzJ,YAAA,GAAQuG,GAaZ,OAZJkD,EAAKhE,SAAWG,EAAWH,SACrB,GACA,uBACFgE,EAAK/D,SAAWE,EAAWF,SACzB,GACA,uBACF+D,EAAK5K,IAAM+G,EAAW/G,IACpB,GACA,yBACF2H,EAASxG,YAAC,CAAC,EACJyJ,IAEAlC,OAAOmC,OAAOD,GAAME,OAAM,SAACC,GAAC,MAAW,KAANA,CAAQ,GACpD,CAIYC,KACI5D,GAAU,GACViB,IAAM+J,IAAI,GAADzR,OAAI2H,EAAO,6BAAA3H,OAA4BK,EAAMmR,UAAUpJ,IAAKhC,EACpE,CAAEwB,QAAS,CAAC,cAAe,UAAA5H,OAAajB,MAGpC8I,MAAK,SAAAC,GACFrB,GAAU,GACVpG,EAAMqI,YACN6B,IAAM9E,QAAQ,8BACdpF,EAAMqD,aAEV,IACC2E,OAAM,SAAA1D,GACH8B,GAAU,GACV8D,IAAM5F,MAAM,wBACZtE,EAAMqD,aACV,IAEhB,EA2E8C/D,SAGtBF,cAAA,QAAMK,MAAO,CAAE0K,cAAe,cAAexF,MAAM,QAASrF,SAAC,wCAK9EwD,KAIf,ECxLMjD,GAAa,CACnBC,IAAKC,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACc,IAAMC,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC/DG,MAAOL,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACgB,IAAKD,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAChEI,MAAON,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACiB,IAAKF,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAChEK,OAAQP,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACmB,IAAaJ,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACzEO,YAAaT,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACqB,IAAYN,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC7ES,KAAMX,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACsB,IAAIP,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC9DU,OAAQZ,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACwB,KAAOT,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACnEY,OAAQd,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAAC0B,IAAUX,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACtEc,UAAWhB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAAC2B,KAASZ,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACxEe,SAAUjB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAAC4B,KAAQb,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACtEgB,SAAUlB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACqB,IAAYN,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC1EiB,aAAcnB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAAC+B,IAAWhB,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC7EmB,YAAarB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACiB,IAAKF,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IACtEoB,OAAQtB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACiC,KAAMlB,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAClEqB,UAAWvB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACmC,IAAWpB,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC1EuB,gBAAiBzB,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACqC,KAAMtB,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,IAC3EyB,WAAY3B,sBAAW,SAACC,EAAOC,GAAG,OAAKb,cAACsC,KAAUvB,wBAAA,GAAKH,GAAK,IAAEC,IAAKA,IAAO,KAqH3DoR,GAjHK,SAACrR,GAEnB,IAAAuF,EAAkCC,mBAAU,IAAGC,EAAAC,YAAAH,EAAA,GAAxC+L,EAAS7L,EAAA,GAAEc,EAAYd,EAAA,GAC9BE,EAA0BH,oBAAS,GAAMM,EAAAJ,YAAAC,EAAA,GAEzC4L,GAFYzL,EAAA,GAAUA,EAAA,GAEY0L,IAAMhM,UAAS,IAAMiM,EAAA/L,YAAA6L,EAAA,GAAhDpO,EAASsO,EAAA,GAAEC,EAAYD,EAAA,GAE9BE,EAAoCH,IAAMhM,UAAS,GAAMoM,EAAAlM,YAAAiM,EAAA,GAAlDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAGhC3L,EAAkCT,mBAAU,CAAEI,SAAU,GAAIC,SAAU,GAAI7G,IAAI,KAAKkH,EAAAR,YAAAO,EAAA,GAA5EkL,EAASjL,EAAA,GAAE6L,EAAY7L,EAAA,GAI5B,SACemC,IAAS,OAAAzB,EAAAsB,MAAC,KAADC,UAAA,UAAAvB,IAcvB,OAduBA,EAAAC,YAAAC,cAAAC,MAAxB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACIC,IACKtI,IAAI,GAADY,OAAI2H,EAAO,oBACf,CAAEC,QAAS,CAAC,cAAe,UAAA5H,OAAajB,MAEvC8I,MAAK,SAACC,GAEHlB,EAAakB,EAASvD,KAE1B,IACC8D,OAAM,SAAC1D,GAER,IAAG,wBAAA4C,EAAAe,OAAA,GAAAjB,EAAA,MAEVkB,MAAA,KAAAC,UAAA,CAlBHC,qBAAU,WACRC,GACF,GAAG,IA0BH,OACE9I,eAAA,OAAAD,SAAA,CACIF,cAACmK,KAAM,CACHC,QAAQ,YACR7E,MAAM,UACNtF,UAAU,oBAEVI,MAAO,CAACiF,gBAAgB,WACxBgF,QAjBU,WACdgI,GAAcvO,EAClB,EAe4B7D,SAEpBF,cAAA,QAAMK,MAAO,CAAE0K,cAAe,cAAe7K,SAAC,0BAElDF,cAAA,SAAKA,cAAA,SACLA,cAAA,SACFA,cAACwE,IAAa,CACbC,MAAOhE,GACNiE,MAAM,sBACNC,QAAS,CAEP,CACED,MAAO,UACPE,MAAO,QAET,CAAEF,MAAO,gBAAiBE,MAAO,MAAOC,WAAW,GACjD,CAAEH,MAAO,SAAUE,MAAO,MAAOC,WAAW,GAC9C,CAAEH,MAAO,SAAUE,MAAO,UAAWC,WAAW,IAIlDC,KAAOoN,EAAUnN,KAAI,SAACC,GAAG,MAAM,CAEzBC,KAAMD,EAAIpF,IACVA,IAAKoF,EAAIwB,SAET4J,QAASpQ,cAAA,OAAAE,SACPF,cAACqQ,KAAKA,KAAI,CAACC,SAAS,QAAOpQ,SAC3BF,cAACqQ,KAAKE,KAAI,CAAArQ,SACNF,cAACwQ,KAAO,CAACnQ,MAAO,CAACiF,gBAAgB,kBAAmBmL,SAAO,EAAAvQ,SAC3DF,cAAC0Q,KAAQ,CAACC,MAAI,EAACC,KAAK,SAAQ1Q,SAC5BF,cAAC0Q,KAASL,KAAI,CAAChQ,MAAO,CAAE4C,UAAU,QAAU/C,SACxCC,eAACuQ,KAASH,KAAI,CAAEjG,QAAS,kBA9CvB,SAACtF,GACnB0N,GAAeD,GACfE,EAAa3N,EACjB,CA2CkD4N,CAAe5N,EAAI,EAAC9E,SAAA,CAACF,cAACsR,KAAc,IAAG,wBAQhF,IAEKlM,QAAS,CACPC,YAAa,CACTC,gBAAiB,UACjBC,MAAO,QAEXC,iBAAkB,CACdlF,MAAQ,OACRmF,YAAa,SAEjBZ,WAAW,EACXa,cAAc,EACdC,qBAAsB,OACtBC,gBAAgB,CAAC,GAAG,GAAG,KACvBC,SAAS,GACTC,iBAAkB,OAIlC9F,cAAC6S,GAAsB,CAAC5O,YArGN,WAAH,OAASqO,GAAcvO,EAAW,EAqGCA,UAAWA,EAAWkF,UAAWA,IACnFjJ,cAAC8S,GAAyB,CAAC7O,YApGR,WAAH,OAASyO,GAAeD,EAAW,EAoGG1O,UAAW0O,EAAYxJ,UAAWA,EAAW8I,UAAWA,MAGlH,ECzFegB,GAlEqB,SAACnS,GAEjC,IACAuF,EAAoCC,mBADd,CAAEI,SAAU,GAAIC,SAAU,GAAI7G,IAAI,KACGyG,EAAAC,YAAAH,EAAA,GAC3DI,GADiBF,EAAA,GAAeA,EAAA,GACJD,oBAAS,IAAMM,EAAAJ,YAAAC,EAAA,GAC3CM,GADaH,EAAA,GAAWA,EAAA,GACUN,mBAAU,KAAGU,EAAAR,YAAAO,EAAA,GAA7BM,GAAFL,EAAA,GAAcA,EAAA,IAQF,SAAAU,IAkBzB,OAlByBA,EAAAC,YAAAC,cAAAC,MAAxB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACEC,IACKtI,IAAI,GAADY,OAAI2H,EAAO,qBAGdE,MAAK,SAACC,GACH1E,QAAQC,IAAIyE,EAASvD,MACrBqC,EACImB,OAAOC,QAAQF,EAASvD,MAAMC,KAAI,SAAAjF,GAAA,IAAA0I,EAAAlC,YAAAxG,EAAA,GAAO2I,GAAFD,EAAA,GAAOA,EAAA,UAAO,CACjDE,MAAOD,EAAM7I,IACb6I,MAAOA,EAAME,GACd,IAEX,IACCC,OAAM,SAAC1D,GAER,IAAG,wBAAA4C,EAAAe,OAAA,GAAAjB,EAAA,MAEVkB,MAAA,KAAAC,UAAA,CAtBHC,qBAAU,YAGN,WACwBxB,EAAAsB,MAAC,KAADC,UAAA,CAH1BE,EACF,GAAG,IAgDL,OAEQjJ,cAACiS,GAAW,GAGtB,E,iDCjCkBzP,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACF1C,MAAO,OACP2C,UAAWR,EAAMG,QAAQ,IAE7BM,OAAQ,CACJP,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCO,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJ7C,OAAQ,GACRF,MAAO,KAEXgD,OAAQ,CACJX,OAAQF,EAAMG,QAAQ,IAG1BW,KAAM,CACF,QAAS,CACLZ,OAAQF,EAAMG,QAAQ,KAG9BY,MAAO,CACHX,QAAS,QAEbqC,MAAO,CACHK,MAAO,UACPQ,SAAU,QAEdC,QAAS,CACLT,MAAO,WACPQ,SAAU,QAEjB,I,cCxBiBvD,aAAW,SAACC,GAAK,MAAM,CACrCc,KAAM,CACFjD,MAAO,OACP0S,SAAU,IACV1N,gBAAiB7C,EAAMwQ,QAAQC,WAAWC,MAC1C,YAAa,CACTlQ,UAAWR,EAAMG,QAAQ,KAGpC,I,oCCzCDwQ,IAAOC,OAAO,MACdC,MAEA,IAAM/Q,GAAYC,aAAW,SAACC,GAAK,MAAM,CACvC8Q,OAAQ,CACNxN,SAAU,OACVsE,WAAY,OACZmJ,QAAS,MACTC,cAAe,QAEjBC,SAAU,CACR/Q,OAAQ,OAGVgR,SAAU,CACR1Q,UAAW,QAGbkQ,MAAO,CACLS,YAAanR,EAAMG,QAAQ,IAE7BiR,SAAU,CACRhR,QAAS,QAEZ,IAOD,SAASiR,GAASlT,GAChB,IAAQV,EAAqCU,EAArCV,SAAUuI,EAA2B7H,EAA3B6H,MAAOsL,EAAoBnT,EAApBmT,MAAUC,EAAKC,YAAKrT,EAAKsT,IAElD,OACElU,cAACmU,IAAUpT,wBAAA,CACTqT,UAAU,MACVhU,KAAK,WACLiU,OAAQ5L,IAAUsL,EAClBpL,GAAE,6BAAApI,OAA+BwT,GACjC,0CAAAxT,OAAyCwT,IACrCC,GAAK,IAAA9T,SAERuI,IAAUsL,GAAS/T,cAACsU,IAAG,CAACC,EAAG,EAAErU,SAAEA,MAGtC,CAQA,SAASsU,GAAUT,GACjB,MAAO,CACLpL,GAAG,wBAADpI,OAA0BwT,GAC5B,gBAAgB,6BAADxT,OAA+BwT,GAElD,CAgEeU,OA/Df,SAAkB7T,GAChB,IAAMsF,EAAU3D,KAChB4D,EAA0BC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAjCsC,EAAKpC,EAAA,GAAEqO,EAAQrO,EAAA,GAChBsO,EAAU/T,EAAMnB,UAAYmB,EAAMnB,SAASmV,MAAQhU,EAAMnB,SAASmV,MAAQ,IAC1EC,EC1FsB,SAACC,EAAQlV,GACnC,IAAImV,EAAOnV,EAGPoV,EADM,IAAIC,OAAO,OAASH,EAAS,YAAa,KAC9BI,KAAKH,GAC3B,OAAOC,EAAcA,EAAY,GAAK,IAC1C,CDoFmBG,CAAe,MAAOvU,EAAMnB,UAAYmB,EAAMnB,SAASC,OAASkB,EAAMnB,SAASC,OAAS,IACnG0V,EAAuB,OAAbP,EAAoBA,EAAWF,EAgB/C,OAfA3L,qBAAY,WAEV,OAAOoM,GACL,IAAK,gBAGL,QAAS,OAAOV,EAAS,GAFzB,IAAK,UAAW,OAAOA,EAAS,GAIpC,GAAG,CAACG,IAQF1U,eAAAsP,WAAA,CAAAvP,SAAA,CACCF,cAAA,OAAKC,UAAU,uBAAuBI,MAAO,CAAC4C,UAAU,MAAOG,aAAa,SAASlD,SACvFF,cAAA,MAAIC,UAAU,aAAYC,SACzBF,cAAA,MAAIC,UAAU,yBAAwBC,SAACF,cAAA,MAAAE,SAAI,uBAGzCF,cAAA,SACFG,eAAA,OAAKF,UAAWiG,EAAQ3C,KAAKrD,SAAA,CAC3BF,cAACqV,IAAM,CAAC/E,SAAS,SAASjQ,MAAO,CAACiF,gBAAgB,QAAQpF,SACxDC,eAACmV,IAAI,CACH7M,MAAOA,EACPqB,SAjBa,SAACyL,EAAOC,GAC3Bd,EAASc,EACX,EAgBQpL,QAAQ,aACRqL,cAAc,KACdC,eAAe,YACfC,UAAU,UACV,aAAW,gCAA+BzV,SAAA,CAEzCF,cAAC4V,IAAG7U,YAAA,CAACd,UAAWiG,EAAQxB,MAAOgE,MAAM,+BAA+BmN,KAAM7V,cAAC8V,KAAa,KAAStB,GAAU,KAI5GxU,cAAC4V,IAAG7U,YAAA,CAACd,UAAWiG,EAAQxB,MAAOgE,MAAM,kBAAkBmN,KAAM7V,cAAC+V,KAAY,KAASvB,GAAU,UAK/FxU,cAAC8T,GAAQ,CAACrL,MAAOA,EAAOsL,MAAO,EAAE7T,SAC/BF,cAACsL,GAAQ,MAEXtL,cAAC8T,GAAQ,CAACrL,MAAOA,EAAOsL,MAAO,EAAE7T,SAC/BF,cAACgW,GAAO,WAMlB,EElIe,SAASC,KACtB,OACEjW,cAACkW,IAAM,CAAAhW,SACLC,eAAA,OAAAD,SAAA,CACAF,cAACmW,IAAc,IAGbnW,cAACoW,IAAM,CAAAlW,SAELF,cAACqW,IAAK,CAACC,KAAK,IAAGpW,SACbF,cAACyU,GAAQ,YAOrB,C,cCpBe8B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrO,MAAK,SAAAtI,GAAkD,IAA/C4W,EAAM5W,EAAN4W,OAAQC,EAAM7W,EAAN6W,OAAQC,EAAM9W,EAAN8W,OAAQC,EAAM/W,EAAN+W,OAAQC,EAAOhX,EAAPgX,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACV,GAEJ,E,UCVIO,GAAY,MAEHC,GAAc,CAC1B,CACCC,WAAY,UACZC,QAAS,QACTC,OAAQ,WACRC,SAAU,UACVC,YAAa,UACbC,UAAW,UACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBX,UAAWA,IAEZ,CACCE,WAAY,UACZC,QAAS,QACTC,OAAQ,WACR1G,QAAS,UACT2G,SAAU,UACVC,YAAa,UACbC,UAAW,UACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBX,UAAWA,IAEX,CACAE,WAAY,UACZC,QAAS,QACTC,OAAQ,WACRE,YAAa,WACbD,SAAU,UACVE,UAAW,WACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBjH,QAAS,WACTsG,UAAWA,IAEZ,CAECE,WAAY,UACZC,QAAS,OACTC,OAAQ,WACRC,SAAU,UACVC,YAAa,UACbC,UAAW,UACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBjH,QAAS,UACTsG,UAAWA,IAEZ,CAECE,WAAY,UACZC,QAAS,QACTC,OAAQ,WACRE,YAAa,WACbD,SAAU,UACVG,aAAc,OACdD,UAAW,UACXE,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBjH,QAAS,WACTsG,UAAWA,IAGZ,CAECE,WAAY,UACZC,QAAS,QACTC,OAAQ,aACRE,YAAa,UACbD,SAAU,UACVE,UAAW,UACXC,aAAc,SACdC,gBAAiB,SACjBC,eAAgB,QAChBC,gBAAiB,OACjBjH,QAAS,UACTsG,UAAWA,KCrFAY,GAAeC,0BA0RbC,GAxRc,SAACjX,GAC7B,IAAAuF,EAAwCC,mBAAS,CAAEqC,MAAO,OAAQC,MAAO,SAASrC,EAAAC,YAAAH,EAAA,GAA3E2R,EAAYzR,EAAA,GAAE0R,EAAe1R,EAAA,GACpCE,EAA8CH,mBAAS,CAAEqC,MAAO,QAASC,MAAO,UAAUhC,EAAAJ,YAAAC,EAAA,GAAnFyR,EAAetR,EAAA,GAAEuR,EAAkBvR,EAAA,GACvCG,EAA4CT,mBAAS,CAAEqC,MAAO,QAASC,MAAO,UAAW5B,EAAAR,YAAAO,EAAA,GAAlFqR,EAAcpR,EAAA,GAAEqR,EAAiBrR,EAAA,GACxCG,EAA0Cb,mBAAS,CAAEqC,MAAO,WAAYC,MAAO,aAAaxB,EAAAZ,YAAAW,EAAA,GAArFmR,EAAalR,EAAA,GAAEmR,EAAgBnR,EAAA,GACzCE,EAAkChB,mBAAS,CAAEqC,MAAO,MAAOC,MAAO,QAAQrB,EAAAf,YAAAc,EAAA,GAAnE2P,EAAS1P,EAAA,GAAEiR,EAAYjR,EAAA,GAC9B4E,EAAwC7F,mBAAS,WAAU8F,EAAA5F,YAAA2F,EAAA,GAApDsM,EAAYrM,EAAA,GAAEsM,EAAetM,EAAA,GACpCG,EAA8CjG,mBAAS,WAAUkG,EAAAhG,YAAA+F,EAAA,GAA1DoM,EAAenM,EAAA,GAAEoM,EAAkBpM,EAAA,GAC1CG,EAAoCrG,mBAAS,WAAU0G,EAAAxG,YAAAmG,EAAA,GAAhDkM,EAAU7L,EAAA,GAAE8L,EAAa9L,EAAA,GAChCG,EAAwC7G,mBAAS,WAAU8G,EAAA5G,YAAA2G,EAAA,GAApD4L,EAAY3L,EAAA,GAAE4L,EAAe5L,EAAA,GACpCC,EAAkC/G,oBAAS,GAAMgH,EAAA9G,YAAA6G,EAAA,GAA1C4L,EAAS3L,EAAA,GAAE4L,EAAY5L,EAAA,GAC9BC,EAAoCjH,oBAAS,GAAMkH,EAAAhH,YAAA+G,EAAA,GAA5C4L,EAAU3L,EAAA,GAAE4L,EAAa5L,EAAA,GAChCG,EAAoCrH,mBAAS,CAAEqC,MAAO,QAASC,MAAO,UAAUgF,EAAApH,YAAAmH,EAAA,GAAzEyF,EAAUxF,EAAA,GAAEyL,EAAazL,EAAA,GAChCE,EAAoDxH,mBAAS,CAACqC,MAAO,aAAcC,MAAO,eAAemF,EAAAvH,YAAAsH,EAAA,GAAlGwL,GAAkBvL,EAAA,GAAEwL,GAAqBxL,EAAA,GACvCyL,GAAOC,SAASC,cAAc,QACpC1L,GAAsC1H,mBAAS,GAAE2H,GAAAzH,YAAAwH,GAAA,GAA1C2L,GAAW1L,GAAA,GAAE2L,GAAc3L,GAAA,GAClC4L,GAAwCvT,mBAAS,GAAEwT,GAAAtT,YAAAqT,GAAA,GAA5CE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GA4DhCG,GAAqB,SAAC9U,GAC7BuT,EAAgBvT,GACbqU,GAAKU,aAAa,eAAgB/U,EACpC,EACMgV,GAAwB,SAAChV,GAC7ByT,EAAmBzT,GACnBqU,GAAKU,aAAa,oBAAqB/U,EACzC,EACMiV,GAAmB,SAACjV,GACxB2T,EAAc3T,GACdqU,GAAKU,aAAa,gBAAiB/U,EACrC,EACMkV,GAAqB,SAAClV,GAC1B6T,EAAgB7T,GAChBqU,GAAKU,aAAa,iBAAkB/U,EACtC,EACMmV,GAAuB,SAACnV,GAC5BgT,EAAmBhT,GACnBqU,GAAKU,aAAa,wBAAyB/U,EAAKwD,MAClD,EACM4R,GAAwB,SAACpV,GAC7BqT,EAAarT,GACbqU,GAAKU,aAAa,YAAa/U,EAAKwD,OACpC,IAAI6R,EAAOf,SAASC,cAAc,QAClCc,EAAKN,aAAa,MAAO/U,EAAKwD,OAC9B6R,EAAKra,UAAYgF,EAAKwD,KACxB,EACM8R,GAAsB,SAACtV,GACR,eAAfA,EAAKwD,OACoB,YAAvBqP,EAAarP,OACf4P,EAAiBpT,GACjBqU,GAAKU,aAAa,cAAe/U,EAAKwD,OACtCsP,EAAgB,CAAEtP,MAAO,OAAQC,MAAO,SACxC4Q,GAAKU,aAAa,qBAAsB,UAM1C3B,EAAiBpT,GACjBqU,GAAKU,aAAa,cAAe/U,EAAKwD,OAE1C,EACM+R,GAAqB,SAACvV,GACE,eAAxBmT,EAAc3P,OACG,YAAfxD,EAAKwD,MACPgS,MAAM,yDAOR1C,EAAgB9S,GAChB+T,EAA4B,eAAf/T,EAAKwD,MAAyB,WAAa,IACxD6Q,GAAKU,aAAa,qBAAsB/U,EAAKwD,OAEjD,EAEMiS,GAAsB,SAACzV,GAC3BkT,EAAkBlT,GAClBqU,GAAKU,aAAa,uBAAwB/U,EAAKwD,MACjD,EAQMkS,GAAmB,SAAC1V,GACxBqU,GAAKU,aAAa,qBAAsB/U,EAAKwD,OAC7C0Q,EAAclU,EAChB,EAEM2V,GAA0B,SAAC3V,GAC/BoU,GAAsBpU,GACtBqU,GAAKU,aAAa,iBAAkB/U,EAAKwD,OAC1B,UAAfxD,EAAKwD,OACH+R,GAAmB,CAAE/R,MAAO,UAAWC,MAAO,WAClD,EA4EA,OA7BAM,qBAAU,WACX,IAAMsQ,EAAOC,SAASC,cAAc,QACjCF,EAAKU,aAAa,kBAAmB,WACrCV,EAAKU,aAAa,qBAAsB,SACxCV,EAAKU,aAAa,cAAe,YACjCV,EAAKU,aAAa,eAAgB,WAClCV,EAAKU,aAAa,oBAAqB,WACvCV,EAAKU,aAAa,gBAAiB,WACnCV,EAAKU,aAAa,qBAAsB,WACxCV,EAAKU,aAAa,iBAAkB,WACpCV,EAAKU,aAAa,eAAgB,WAClCV,EAAKU,aAAa,wBAAyB,SAC3CV,EAAKU,aAAa,uBAAwB,SAC1CV,EAAKU,aAAa,iBAAkB,QACpCV,EAAKU,aAAa,YAAa,OACjC,IAAIa,EAAe,WAClBnB,GAAela,OAAOsb,YACtBhB,GAAgBta,OAAOub,aACvBvb,OAAOsb,YAAc,KAAOtb,OAAOsb,WAAa,KAC9CxB,EAAKU,aAAa,qBAAsB,QACxCxa,OAAOsb,YAAc,IACrBxB,EAAKU,aAAa,qBAAsB,WACxCV,EAAKU,aAAa,qBAAsB,OAC3C,EAGE,OAFAa,IACArb,OAAOwb,iBAAiB,SAAUH,GAC3B,kBAAMrb,OAAOyb,oBAAoB,SAAUJ,EAAc,CAClE,GAAG,IAGD7a,cAAC2X,GAAauD,SAAQ,CACpBzS,MAAO,CACL6Q,QACA6B,cArNgB,CACpB,CAAE1S,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,aAAcC,MAAO,eAgN1B0S,aA1Ne,CACnB,CAAE3S,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,aAAcC,MAAO,eAyN1B2S,iBA/MmB,CACvB,CAAE5S,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,OAAQC,MAAO,SA8MpBsP,kBACAsD,gBAzMkB,CACtB,CAAE7S,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,SAAUC,MAAO,WAwMtB6S,kBAtMoB,CACxB,CAAE9S,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,OAAQC,MAAO,SAoMpB8S,kBAjLoB,CACxB,CAAE/S,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,QAgLnB+S,WA9Ka,CACjB,CAAEhT,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,WAAYC,MAAO,aAC5B,CAAED,MAAO,gBAAiBC,MAAO,kBA0KnC6P,eACME,kBACNgB,eACAI,gBACME,sBACAE,yBACAO,sBACA1C,eACAsC,wBACAsB,iBA1NmB,CACvB,CAAEjT,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,SAAUC,MAAO,WAyNtBgS,uBACAxC,iBACAqC,uBACAnC,gBACAiC,yBACAO,2BACA7D,YACA4E,OArNS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,YAuMIhD,aACAuB,oBACAC,sBACAtB,eACAE,YACAE,aACA2C,eAhIiB,WACE,WAAvB9D,EAAarP,MACTyQ,GAAc,GACdA,GAAc,EACpB,EA6HMyB,oBACAzH,aACAkG,sBACNyC,aAlHqB,SAACpZ,EAAMsU,GAE7B,IAAI+E,EAAU,CAAC,EAGXC,EAAgB/E,GAAYvU,GAEhC6W,GAAKU,aAAa,kBAAmB+B,EAAc9E,YAEnD6E,EAAQrT,MAAQsT,EAAc7E,QAC9ByD,GAAiBmB,GAEjBA,EAAQrT,MAAQsT,EAAc5E,OAC9BoD,GAAoBuB,GAGpB/B,GAAmBgC,EAActL,SAGjCwJ,GAAsB8B,EAAc1E,aAGpC6C,GAAiB6B,EAAc3E,UAE/B0E,EAAQrT,MAAQsT,EAAcxE,aAC9BiD,GAAmBsB,GAGnB3B,GAAmB4B,EAAczE,WAEjCwE,EAAQrT,MAAQsT,EAAcvE,gBAC9B4C,GAAqB0B,GAErBA,EAAQrT,MAAQsT,EAActE,eAC9BiD,GAAoBoB,GAEpBA,EAAQrT,MAAQsT,EAAcrE,gBAC9BkD,GAAwBkB,GAGxBA,EAAQrT,MAAQsO,EAChBsD,GAAsByB,EAEtB,GAwEE5b,SAEIU,EAAMV,UAGb,EClRA8b,IAASC,OACRjc,cAACoS,IAAM8J,WAAU,CAAAhc,SAENF,cAACmc,KAAmB,CAAAjc,SAChBF,cAACoc,KAAa,CAACC,SAAS,IAAGnc,SACvBF,cAAC2X,GAAY,CAAAzX,SACTF,cAACiW,GAAG,YAM1BsD,SAAS+C,eAAe,SAE1B/F,I","file":"static/js/main.b62cb043.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n// export const url =  'http://localhost:8789/api/v1/';\r\n// export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjk5OTU4NDExfQ.r7Zbo7MPgEYRToaUaYZX8bM89VAerl8FA6g0gDYwuz_y_-gjGt9U9D-km8ecfvuWZ_dc4qk4gDHklYIUNH4j0w'","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Progress = ({ percentage }) => {\r\n  return (\r\n    <div className='progress'>\r\n      <div\r\n        className='progress-bar progress-bar-striped bg-success'\r\n        role='progressbar'\r\n        style={{ width: `${percentage}%`, height: '80px' }}\r\n\r\n      >\r\n        {percentage}%\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProgress.propTypes = {\r\n  percentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Progress;\r\n","import React, {useState, useEffect, forwardRef} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\n    Row,Col, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }\r\n}))\r\n\r\n\r\nconst Logs = (props) => {\r\n    const classes = useStyles()\r\n\r\n    console.log(props)\r\n\r\n\r\n\r\n    //const samplesdispatched ={\"sampleManifests\": [] };\r\n    const LogsProcess = e => {\r\n        e.preventDefault()\r\n        alert(\"Processing \")\r\n        //Closing of the modal \r\n        props.togglestatus();\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop={false} backdrop=\"static\">\r\n                <Form >\r\n                    <ModalHeader toggle={props.toggleModal}>Logs </ModalHeader>\r\n                    <ModalBody>\r\n                        <MaterialTable\r\n                            icons={tableIcons}\r\n                            title={\"JSON Files Errors \" }\r\n                            columns={[\r\n                                { title: \"Name\", field: \"name\", filtering: false },\r\n                                { title: \"Error\", field: \"error\", filtering: false },\r\n                                { title: \"Others\", field: \"others\", filtering: false },\r\n                            ]}\r\n                            data={ [].map((row) => ({\r\n                                //Id: manager.id,\r\n                                name: row.name,\r\n                                error: row.error,\r\n                                others: row.others,\r\n\r\n                            }))}\r\n\r\n                            options={{\r\n                                headerStyle: {\r\n                                    backgroundColor: \"#014d88\",\r\n                                    color: \"#fff\",\r\n                                },\r\n                                searchFieldStyle: {\r\n                                    width : '200%',\r\n                                    margingLeft: '250px',\r\n                                },\r\n                                filtering: false,\r\n                                exportButton: true,\r\n                                searchFieldAlignment: 'left',\r\n                                pageSizeOptions:[10,20,100],\r\n                                pageSize:10,\r\n                                debounceInterval: 400\r\n                            }}\r\n                        />\r\n                    </ModalBody>\r\n\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logs;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\n    Row,Col, Card,CardBody, FormGroup, Input, Label} from 'reactstrap';\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\n\r\n\r\nconst SendToServer = (props) => {\r\n    const classes = useStyles()\r\n    const [urlHide, setUrlHide] = useState(false);\r\n    const defaultValues = { username: \"\", password: \"\", url:\"\" }\r\n    const [patDetails, setPatDetails] = useState(defaultValues);\r\n    const [saving, setSaving] = useState(false);\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        ServerUrl()\r\n    }, []);\r\n    ///GET LIST OF Facilities\r\n    async function ServerUrl() {\r\n        axios\r\n            .get(`${baseUrl}sync/remote-urls`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setServerUrl(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.url,\r\n                        value: value.id,\r\n                    }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n    }\r\n    /*****  Validation */\r\n    const validate = () => {\r\n        let temp = { ...errors };\r\n        temp.username = patDetails.username\r\n            ? \"\"\r\n            : \"Username is required\";\r\n        temp.password = patDetails.password\r\n            ? \"\"\r\n            : \"Password is required\";\r\n        temp.url = patDetails.url\r\n            ? \"\"\r\n            : \"Server URL is required\";\r\n        setErrors({\r\n            ...temp,\r\n        });\r\n        return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (validate()) {\r\n            setSaving(true);\r\n            axios.post(`${baseUrl}sync/remote-access-token`,patDetails,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n            )\r\n                .then(response => {\r\n                    setSaving(false);\r\n                    props.ServerUrl()\r\n                    toast.success(\"Token Generated Successful\");\r\n                    props.toggleModal()\r\n\r\n                })\r\n                .catch(error => {\r\n                    setSaving(false);\r\n                    toast.error(\"Something went wrong\");\r\n                    props.toggleModal();\r\n                });\r\n        };\r\n    }\r\n\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop={false} backdrop=\"static\">\r\n                <Form >\r\n                    <ModalHeader toggle={props.toggleModal}>SEND TO SERVER </ModalHeader>\r\n                    <ModalBody>\r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n\r\n                                    <Col md={12}>\r\n                                        <FormGroup>\r\n                                            <Label >Username </Label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"username\"\r\n                                                id=\"username\"\r\n                                                value={patDetails.username}\r\n                                                onChange={handleInputChange}\r\n                                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                required\r\n                                            />\r\n                                            {errors.username !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.username}</span>\r\n                                            ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={12}>\r\n                                        <FormGroup>\r\n                                            <Label >Password </Label>\r\n                                            <Input\r\n                                                type=\"password\"\r\n                                                name=\"password\"\r\n                                                id=\"password\"\r\n                                                value={patDetails.password}\r\n                                                onChange={handleInputChange}\r\n                                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                required\r\n                                            />\r\n                                            {errors.password !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.password}</span>\r\n                                            ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br/>\r\n                                <Button\r\n                                    type='submit'\r\n                                    variant='contained'\r\n                                    //color='primary'\r\n                                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    //startIcon={<SettingsBackupRestoreIcon />}\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>Send To Server</span>\r\n                                </Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </ModalBody>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SendToServer;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\n    Row,Col, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }\r\n}))\r\n\r\n\r\nconst GenerateKey = (props) => {\r\n    const classes = useStyles()\r\n\r\n    //const samplesdispatched ={\"sampleManifests\": [] };\r\n    const GenerateKeyProcess = e => {\r\n        e.preventDefault()\r\n        alert(\"Processing \")\r\n        //Closing of the modal \r\n        props.togglestatus();\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop={false} backdrop=\"static\">\r\n                <Form >\r\n                    <ModalHeader toggle={props.toggleModal}>GENERATE KEY</ModalHeader>\r\n                    <ModalBody>\r\n\r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                    <Col md={12} >\r\n\r\n                                        <Alert color=\"primary\" >\r\n                                            <p style={{marginTop: '.7rem' }}>\r\n                                                Info : &nbsp;&nbsp;&nbsp;<span style={{ fontWeight: 'bolder'}}>{'Kindly copy the generated key for upload'}</span>\r\n                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                                            </p>\r\n\r\n                                        </Alert>\r\n                                    </Col>\r\n\r\n                                    <Col md={6}>\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                                <br/>\r\n\r\n                                <br/>\r\n\r\n\r\n\r\n                                <MatButton\r\n                                    variant='contained'\r\n                                    color='default'\r\n                                    onClick={props.togglestatus}\r\n                                    className={classes.button}\r\n                                    startIcon={<CancelIcon />}\r\n                                >\r\n                                    Cancel\r\n                                </MatButton>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </ModalBody>\r\n\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GenerateKey;\r\n","import React, { useState, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport Progress from './Progress';\r\nimport CloudUpload from '@material-ui/icons/CloudUpload';\r\nimport moment from \"moment\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//import { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\n//import { MdModeEdit } from \"react-icons/md\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\n    Row,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport FileSaver from \"file-saver\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Dropdown,Button as Buuton2, Menu,  } from 'semantic-ui-react'\r\nimport Logs from \"./Logs\";\r\nimport SendToServer from \"./SendToServer\";\r\nimport Generatekey from \"./Generatekey\";\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\nconst SyncList = (props) => {\r\n  //let history = useHistory();\r\n  // The state for our timer\r\n  const classes = useStyles()\r\n  const [syncList, setSyncList] = useState( [])\r\n  const [facilities, setFacilities] = useState( [])\r\n  const [modal, setModal] = useState(false);\r\n  const [generateKeyModal, setGenerateKeyModal] = useState(false);\r\n  const [sendToServerModal, setSendToServerModal] = useState(false);\r\n  const [logModal, setLogModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const toggleLogModal = () => setLogModal(!logModal);\r\n  const toggleGenerateKeyModal = () => setGenerateKeyModal(!generateKeyModal);\r\n  const toggleSendToServerModal = () => setSendToServerModal(!sendToServerModal);\r\n  const [modal2, setModal2] = useState(false);\r\n  const toggle2 = () => setModal2(!modal2);\r\n  const defaultValues = { facilityId: \"\", startDate : \"\", endDate:\"\", all:false}\r\n  const [uploadDetails, setUploadDetails] = useState(defaultValues);\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n  const [showErrorTable, setShowErrorTable] = useState(false);\r\n  const [showErrorObj, setShowErrorObj] = useState([]);\r\n  const [showErrorFileObj, setShowErrorFileObj] = useState();\r\n\r\nuseEffect(() => {\r\n    Facilities();\r\n    JsonSyncHistory();\r\n    }, []);\r\n\r\n    /*****  Validation */\r\n    const validate = () => {\r\n        let temp = { ...errors };\r\n        temp.facilityId = uploadDetails.facilityId\r\n            ? \"\"\r\n            : \"Facility is required\";\r\n            setErrors({\r\n                ...temp,\r\n            });\r\n            return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n     ///GET LIST OF Sync History\r\n    async function JsonSyncHistory() {\r\n        axios\r\n            .get(`${baseUrl}export/sync-histories`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSyncList(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function Facilities() {\r\n        axios\r\n            .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setFacilities(\r\n                    Object.entries(response.data.applicationUserOrganisationUnits).map(([key, value]) => ({\r\n                        label: value.organisationUnitName,\r\n                        value: value.organisationUnitId,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    const handleInputChange = e => {\r\n        setUploadDetails ({...uploadDetails,  [e.target.name]: e.target.value});\r\n    }\r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setUploadDetails ({...uploadDetails,  ['all']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setUploadDetails ({...uploadDetails,  ['all']: false}); \r\n        }\r\n    }\r\n    const handleSubmit = async e => {  \r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            try {\r\n                const res = await axios.get(`${baseUrl}export/all?facilityId=${uploadDetails.facilityId}&current=${uploadDetails.all}`, {\r\n                    headers: {\"Authorization\" : `Bearer ${token}`},\r\n                    onUploadProgress: progressEvent => {\r\n                        setUploadPercentage(\r\n                        parseInt(\r\n                            Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n                        )\r\n                        );\r\n                        // Clear percentage\r\n                        setTimeout(() => setUploadPercentage(0), 10000);\r\n                    }\r\n                });\r\n                toast.success(\"JSON Extraction was successful!\");\r\n                toggle();\r\n                JsonSyncHistory();\r\n                setSaving(false);\r\n            } catch (err) {\r\n                setSaving(false); \r\n                }  \r\n        }else{\r\n            toast.error(\"Please select facility\");\r\n        }    \r\n       \r\n    };\r\n    const generateJsonFile =()=> {        \r\n        setModal(!modal)\r\n    }\r\n    const displayGenerateKey =()=> {\r\n        setGenerateKeyModal(!generateKeyModal)\r\n    }\r\n    const displayLogs =()=> {\r\n        setLogModal(!logModal)\r\n    }\r\n    const sendToServerAction =()=> {\r\n        setSendToServerModal(!sendToServerModal);\r\n    }\r\n    const displaySendToServer =()=> {\r\n        setSendToServerModal(!sendToServerModal)\r\n    }\r\n    const downloadFile = (fileName) => {\r\n        axios\r\n            .get(`${baseUrl}export/download/${fileName}`,\r\n                {headers: {\"Authorization\": `Bearer ${token}`}, responseType: 'blob'}\r\n            )\r\n            .then((response) => {\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}`);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // const  sendToServerAction = (fileName,facilityId) => {\r\n    //     setModal2(true)\r\n    //      //SENDING A POST REQUEST\r\n    //      axios.post(`${baseUrl}export/send-data?fileName=${fileName}&facilityId=${facilityId}`,fileName,\r\n    //                  { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n    //                )\r\n    //         .then(response => {\r\n    //             console.log(\"the server call is completed\")\r\n    //         window.setTimeout(() => {\r\n    //             toast.success(\" Uploading To server Successful!\");\r\n    //             setModal2(false)\r\n    //             JsonSyncHistory()\r\n    //         }, 1000);\r\n    //         })\r\n    //         .catch(error => {\r\n    //             //console.log(\"the server call error\")\r\n    //             //toast.error(\" Something went wrong!\");\r\n    //             if(error.response && error.response.data){\r\n    //                 let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n    //                 toast.error(errorMessage);\r\n    //                 setModal2(false)\r\n    //             }\r\n    //             else{\r\n    //                 setModal2(false)\r\n    //                 toast.error(\"Something went wrong. Please try again...\");\r\n    //             }\r\n    //     });\r\n    // }\r\n    const displayErrorTable =(row)=> {        \r\n        setShowErrorTable(true)\r\n        setShowErrorFileObj(row)\r\n        setShowErrorObj(row.errorLog)\r\n    }\r\n    const backToGenerateJsonFile =()=> {        \r\n        setShowErrorTable(false)\r\n    }\r\n\r\n \r\n  return (\r\n    <div>\r\n        {!showErrorTable && (<>\r\n            <Button\r\n            variant=\"contained\"\r\n            style={{backgroundColor:\"#014d88\", }}\r\n            className=\" float-right mr-1\"\r\n            //startIcon={<FaUserPlus />}\r\n            onClick={generateJsonFile}\r\n            >\r\n            <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Generate JSON Files </span>\r\n            </Button>       \r\n        <br/><br/>\r\n        <MaterialTable\r\n         icons={tableIcons}\r\n            title=\"Generated JSON Files List \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Facility Name\",\r\n                field: \"facilityName\",\r\n            },\r\n            { title: \"File Name \", field: \"tableName\", filtering: false },\r\n            { title: \"Upload Size \", field: \"uploadSize\", filtering: false },\r\n            { title: \"Date Generated \", field: \"date\", filtering: false },\r\n            { title: \"Status\", field: \"status\", filtering: false },         \r\n            { title: \"Action\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            data={ syncList.map((row) => ({\r\n                //Id: manager.id,\r\n                facilityName: row.facilityName,\r\n                tableName: row.tableName,\r\n                uploadSize: row.uploadSize,\r\n                date:  moment(row.dateLastSync).format(\"LLLL\"),\r\n                status: row.errorLog===null ? row.processed===0 ? \"Processing\" : \"Completed\" : \"Error\",\r\n                //errorLog: row.errorLog,\r\n                actions:(<div>\r\n                            <Menu.Menu position='right'  >\r\n                            <Menu.Item >\r\n                                <Buuton2 style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                                <Dropdown item text='Action'>\r\n\r\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n\r\n                                        <Dropdown.Item  onClick={() => downloadFile(row.tableName)}><CloudDownloadIcon color=\"primary\"/> Download File\r\n                                        </Dropdown.Item>\r\n                                        <Dropdown.Item  onClick={() => sendToServerAction(row.tableName, row.organisationUnitId)}><CloudUpload color=\"primary\"/> Send To Server\r\n                                        </Dropdown.Item>\r\n                                        <Dropdown.Item  onClick={() => displayGenerateKey(row)}><VisibilityIcon color=\"primary\"/>View Generate Key\r\n                                        </Dropdown.Item>\r\n                                        <Dropdown.Item  onClick={() => displayLogs(row)}><VisibilityIcon color=\"primary\"/>View Logs\r\n                                        </Dropdown.Item>\r\n\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                                </Buuton2>\r\n                            </Menu.Item>\r\n                            </Menu.Menu>\r\n                        </div>)\r\n                }))}\r\n        \r\n                options={{\r\n                        headerStyle: {\r\n                            backgroundColor: \"#014d88\",\r\n                            color: \"#fff\",\r\n                        },\r\n                        searchFieldStyle: {\r\n                            width : '200%',\r\n                            margingLeft: '250px',\r\n                        },\r\n                        filtering: false,\r\n                        exportButton: true,\r\n                        searchFieldAlignment: 'left',\r\n                        pageSizeOptions:[10,20,100],\r\n                        pageSize:10,\r\n                        debounceInterval: 400\r\n                }}\r\n        />\r\n        </>)}\r\n\r\n        <Modal isOpen={modal} toggle={toggle} className={props.className} size=\"lg\"  backdrop=\"static\">\r\n            <Form >\r\n            <ModalHeader toggle={toggle}>Generate JSON Files</ModalHeader>\r\n                <ModalBody>   \r\n                    <Card >\r\n                        <CardBody>\r\n                            <Row >                                  \r\n                            <Col md={12}>\r\n                            <FormGroup>\r\n                            <Label >Facility *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"facilityId\"\r\n                                    id=\"facilityId\"\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    vaulue={uploadDetails.facilityId}\r\n                                    >\r\n                                    <option > </option>\r\n                                    {facilities.map(({ label, value }) => (\r\n                                        <option key={value} value={value}>\r\n                                        {label}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                                {errors.facilityId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.facilityId}</span>\r\n                                ) : \"\" } \r\n                            </FormGroup>\r\n                            </Col> \r\n                            <div className=\"form-check custom-checkbox ml-3 \">\r\n                                <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                name=\"all\"\r\n                                id=\"all\"                                        \r\n                                onChange={handleCheckBox}\r\n                                checked={uploadDetails.all}\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"all\"\r\n                                >\r\n                                 Recent Update ?\r\n                                </label>\r\n                            </div>\r\n                            </Row>\r\n                            <br/>\r\n                            <b>{uploadDetails.all===true ? \"Only the updated records will be pushed\" : \"You are pushing record from initial\"}</b>\r\n                            <br/>\r\n                            {saving ?\r\n                            <Progress percentage={uploadPercentage} /> \r\n                            : \"\"}\r\n                            <br />\r\n                            \r\n                            <MatButton\r\n                                type='submit'\r\n                                variant='contained'\r\n                                color='primary'\r\n                                className={classes.button}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                startIcon={<SettingsBackupRestoreIcon />}\r\n                                onClick={handleSubmit}\r\n                                \r\n                            >   \r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Generate</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Generating Please Wait...</span>\r\n                                )\r\n                            } \r\n                            </MatButton>                                          \r\n                            <MatButton\r\n                                variant='contained'\r\n                                color='default'\r\n                                onClick={toggle}\r\n                                className={classes.button}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                startIcon={<CancelIcon />}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>cancel</span>\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                </ModalBody>\r\n            </Form>\r\n        </Modal>\r\n        <Modal isOpen={modal2} toggle={toggle2} backdrop={false} fade={true} style={{marginTop:\"250px\"}} size='lg'>            \r\n            <ModalBody>\r\n                <h1>Uploading File To Server. Please wait...</h1>\r\n            </ModalBody>\r\n        </Modal>\r\n\r\n        <SendToServer toggleModal={toggleSendToServerModal} showModal={sendToServerModal}  />\r\n        <Logs toggleModal={toggleLogModal} showModal={logModal}  />\r\n        <Generatekey toggleModal={toggleGenerateKeyModal} showModal={generateKeyModal}  />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SyncList;\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\nRow,Col, Card,CardBody, FormGroup, Input, Label} from 'reactstrap';\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst NewToken = (props) => {\r\n    const classes = useStyles()\r\n    const [urlHide, setUrlHide] = useState(false);\r\n    const defaultValues = { username: \"\", password: \"\", url:\"\" }\r\n    const [patDetails, setPatDetails] = useState(defaultValues);\r\n    const [saving, setSaving] = useState(false);\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n      ServerUrl()\r\n    }, []);\r\n        ///GET LIST OF Facilities\r\n        async function ServerUrl() {\r\n          axios\r\n              .get(`${baseUrl}sync/remote-urls`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n              )\r\n              .then((response) => {\r\n                  setServerUrl(\r\n                      Object.entries(response.data).map(([key, value]) => ({\r\n                          label: value.url,\r\n                          value: value.id,\r\n                        }))\r\n                  );\r\n              })\r\n              .catch((error) => {\r\n  \r\n              });\r\n      \r\n      }\r\n    \r\n    const handleInputChange = e => {\r\n      setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n    }\r\n    /*****  Validation */\r\n    const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.username = patDetails.username\r\n        ? \"\"\r\n        : \"Username is required\";\r\n        temp.password = patDetails.password\r\n        ? \"\"\r\n        : \"Password is required\";\r\n        temp.url = patDetails.url\r\n        ? \"\"\r\n        : \"Server URL is required\";\r\n        setErrors({\r\n            ...temp,\r\n        });\r\n        return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n            if (validate()) {      \r\n                    setSaving(true);\r\n                    axios.post(`${baseUrl}sync/remote-access-token`,patDetails,\r\n                     { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n                    )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            props.ServerUrl()\r\n                            toast.success(\"Token Generated Successful\");\r\n                            props.toggleModal()\r\n\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            toast.error(\"Something went wrong\");\r\n                            props.toggleModal();\r\n                        });\r\n            };\r\n        }\r\n\r\n      \r\n  return (      \r\n      <div >\r\n         \r\n            <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop={false} backdrop=\"static\">\r\n              <Form >\r\n                <ModalHeader toggle={props.toggleModal}>Personal Access Token </ModalHeader>\r\n                <ModalBody>\r\n                    <Card >\r\n                    <CardBody>\r\n                    <Row >\r\n\r\n                            <Col md={12}>\r\n                            <FormGroup>\r\n                            <Label >Server URL * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"url\"\r\n                                        id=\"url\"\r\n                                        value={patDetails.url} \r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        required\r\n                                        />\r\n                                        {errors.url !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.url}</span>\r\n                                                    ) : \"\" }   \r\n                            </FormGroup>\r\n                            </Col>                \r\n                            <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >Username </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    id=\"username\" \r\n                                    value={patDetails.username}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    required\r\n                                    />\r\n                                    {errors.username !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.username}</span>\r\n                                    ) : \"\" }\r\n                        </FormGroup>\r\n                        </Col>\r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >Password </Label>\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\" \r\n                                    value={patDetails.password}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    required\r\n                                    />\r\n                                        {errors.password !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.password}</span>\r\n                                        ) : \"\" }\r\n                        </FormGroup>\r\n                        </Col>                    \r\n                    </Row>\r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br/>              \r\n                        <Button\r\n                            type='submit'\r\n                            variant='contained'\r\n                            //color='primary'\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            //startIcon={<SettingsBackupRestoreIcon />}\r\n                            onClick={handleSubmit}   \r\n                        >   \r\n                            <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>Connect & Generate Token</span>  \r\n                        </Button>\r\n                    </CardBody>\r\n                    </Card> \r\n                </ModalBody>\r\n            </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewToken;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\nRow,Col, Card,CardBody, FormGroup, Input, Label} from 'reactstrap';\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token,  url as baseUrl } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst UpdateToken = (props) => {\r\n    const classes = useStyles()\r\n    const [patDetails, setPatDetails] = useState( { username: props.userToken.username, password: \"\", url:props.userToken.url });\r\n    const [saving, setSaving] = useState(false);\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n      ServerUrl()\r\n    }, []);\r\n    ///GET LIST OF Facilities\r\n    async function ServerUrl() {\r\n          axios\r\n              .get(`${baseUrl}sync/remote-urls`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n              )\r\n              .then((response) => {\r\n                  setServerUrl(\r\n                      Object.entries(response.data).map(([key, value]) => ({\r\n                          label: value.url,\r\n                          value: value.id,\r\n                        }))\r\n                  );\r\n              })\r\n              .catch((error) => {\r\n  \r\n              });\r\n      \r\n    }\r\n    \r\n    const handleInputChange = e => {\r\n      setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n    }\r\n    /*****  Validation */\r\n    const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.username = patDetails.username\r\n        ? \"\"\r\n        : \"Username is required\";\r\n        temp.password = patDetails.password\r\n        ? \"\"\r\n        : \"Password is required\";\r\n        temp.url = patDetails.url\r\n        ? \"\"\r\n        : \"Server URL is required\";\r\n        setErrors({\r\n            ...temp,\r\n        });\r\n        return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n            if (validate()) {      \r\n                    setSaving(true);\r\n                    axios.put(`${baseUrl}sync/remote-access-token/${props.userToken.id}`,patDetails,\r\n                     { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n                    )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            props.ServerUrl()\r\n                            toast.success(\"Token Generated Successful\");\r\n                            props.toggleModal()\r\n\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            toast.error(\"Something went wrong\");\r\n                            props.toggleModal();\r\n                        });\r\n            };\r\n        }\r\n\r\n      \r\n  return (      \r\n      <div >\r\n         \r\n        <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop={false} backdrop=\"static\">\r\n        <Form >\r\n            <ModalHeader toggle={props.toggleModal}>Update Personal Access Token </ModalHeader>\r\n            <ModalBody>\r\n                \r\n                    <Card >\r\n                        <CardBody>\r\n                            <Row >\r\n\r\n                            <Col md={12}>\r\n                            <FormGroup>\r\n                            <Label >Server URL* </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"url\"\r\n                                    id=\"url\"\r\n                                    value={patDetails.url} \r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    required\r\n                                />\r\n                                {errors.url !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.url}</span>\r\n                                ) : \"\" }   \r\n                            </FormGroup>\r\n                            </Col>                \r\n                            <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >Username </Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                id=\"username\" \r\n                                value={patDetails.username}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                required\r\n                            />\r\n                            {errors.username !==\"\" ? (\r\n                                <span className={classes.error}>{errors.username}</span>\r\n                            ) : \"\" }\r\n                        </FormGroup>\r\n                        </Col>\r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >Password </Label>\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\" \r\n                                    value={patDetails.password}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    required\r\n                                />\r\n                                {errors.password !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.password}</span>\r\n                                ) : \"\" }\r\n                        </FormGroup>\r\n                        </Col>                    \r\n                    </Row>\r\n                        {saving ? <Spinner /> : \"\"}\r\n                        <br/>              \r\n                            <Button\r\n                                type='submit'\r\n                                variant='contained'\r\n                                //color='primary'\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                //startIcon={<SettingsBackupRestoreIcon />}\r\n                                onClick={handleSubmit}\r\n                                \r\n                            >   \r\n                                <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>Connect & Update Token</span>  \r\n                            </Button>\r\n                        </CardBody>\r\n                    </Card> \r\n            </ModalBody>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateToken;\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport NewPersonalAccessToken from './NewPersonalAccessToken';\r\nimport UpdatePersonalAccessToken from './UpdateToken';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Dropdown,Button as Buuton2, Menu,  } from 'semantic-ui-react'\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst SettingList = (props) => {\r\n\r\n  const [serverUrl, setServerUrl] = useState( [])\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const toggleModal = () => setShowModal(!showModal);\r\n  const [showModal2, setShowModal2] = React.useState(false);\r\n  const toggleModal2 = () => setShowModal2(!showModal2)\r\n  const defaultValues = { facility: \"\", url: \"\" }\r\n  const [userToken, setUserToken] = useState( { username: \"\", password: \"\", url:\"\" })\r\n  useEffect(() => {\r\n    ServerUrl()\r\n  }, []);\r\n    ///GET LIST OF Remote URL\r\n    async function ServerUrl() {\r\n        axios\r\n            .get(`${baseUrl}sync/remote-urls`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setServerUrl(response.data)\r\n                \r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n\r\n    }\r\n    const tokenSetup =()=> {        \r\n        setShowModal(!showModal)\r\n    }\r\n    const editTokenSetup =(row)=> {        \r\n        setShowModal2(!showModal2)\r\n        setUserToken(row)\r\n    }\r\n    \r\n \r\n  return (\r\n    <div>\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-right mr-1\"\r\n            //startIcon={<FaUserPlus />}\r\n            style={{backgroundColor:\"#014d88\"}}\r\n            onClick={tokenSetup}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>Upload Config File </span>\r\n        </Button>        \r\n        <br/><br/>\r\n        <br/>\r\n      <MaterialTable\r\n       icons={tableIcons}\r\n        title=\"Config Information \"\r\n        columns={[\r\n         // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Version\",\r\n            field: \"name\",\r\n          },\r\n          { title: \"Date Uploaded\", field: \"url\", filtering: false },\r\n            { title: \"Status\", field: \"url\", filtering: false },\r\n          { title: \"Action\", field: \"actions\", filtering: false },\r\n         \r\n         \r\n        ]}\r\n        data={ serverUrl.map((row) => ({\r\n            //Id: manager.id,\r\n              name: row.url,\r\n              url: row.username,\r\n\r\n              actions:(<div>\r\n                <Menu.Menu position='right'  >\r\n                <Menu.Item >\r\n                    <Buuton2 style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                    <Dropdown item text='Action'>\r\n                    <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                        <Dropdown.Item  onClick={() =>editTokenSetup(row)}><VisibilityIcon /> View </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                    </Buuton2>\r\n                </Menu.Item>\r\n                </Menu.Menu>\r\n            </div>)\r\n            \r\n            }))}\r\n       \r\n                  options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400\r\n                }}\r\n      />\r\n    \r\n    <NewPersonalAccessToken toggleModal={toggleModal} showModal={showModal} ServerUrl={ServerUrl} />\r\n    <UpdatePersonalAccessToken toggleModal={toggleModal2} showModal={showModal2} ServerUrl={ServerUrl} userToken={userToken}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingList;\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from \"axios\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport SettingList from './SettingList' \r\n\r\n\r\n\r\nconst TabExampleMenuPositionRight = (props) => {\r\n\r\n    const defaultValues = { username: \"\", password: \"\", url:\"\" }\r\n    const [patDetails, setPatDetails] = useState(defaultValues);\r\n    const [saving, setSaving] = useState(false);\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      ServerUrl()\r\n    }, []);\r\n        ///GET LIST OF Facilities\r\n        async function ServerUrl() {\r\n          axios\r\n              .get(`${baseUrl}sync/remote-urls`,\r\n              //{ headers: {\"Authorization\" : `Bearer ${token}`} }\r\n              )\r\n              .then((response) => {\r\n                  console.log(response.data)\r\n                  setServerUrl(\r\n                      Object.entries(response.data).map(([key, value]) => ({\r\n                          label: value.url,\r\n                          value: value.id,\r\n                        }))\r\n                  );\r\n              })\r\n              .catch((error) => {\r\n  \r\n              });\r\n      \r\n      }\r\n    \r\n    const handleInputChange = e => {\r\n      setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n      console.log(patDetails)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();      \r\n      setSaving(true);\r\n      axios.post(`${baseUrl}sync/remote-access-token`,\r\n     // { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n      patDetails\r\n      )\r\n        .then(response => {\r\n            setSaving(false);\r\n            toast.success(\"Token Generated Successful\");\r\n\r\n        })\r\n        .catch(error => {\r\n            setSaving(false);\r\n            toast.error(\"Something went wrong\");\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n  return (    \r\n          \r\n          <SettingList />\r\n        )\r\n\r\n}\r\n\r\nexport default TabExampleMenuPositionRight","import React, { useState, useRef, useCallback, useEffect } from 'react'\r\n//import MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"../../../api\";\r\nimport { forwardRef } from 'react';\r\n//import { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//import { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\n//import { MdModeEdit } from \"react-icons/md\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Form,\r\n    Row,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Spinner } from 'reactstrap';\r\n//import { DropzoneArea } from 'material-ui-dropzone';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\nconst SyncList = (props) => {\r\n    let history = useHistory();\r\n  // The state for our timer\r\n  const classes = useStyles()\r\n  const [syncList, setSyncList] = useState( [])\r\n  const [facilities, setFacilities] = useState( [])\r\n  const [serverUrl, setServerUrl] = useState( [])\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const defaultValues = { facilityId: \"\", serverUrl : \"\", allTables:null, tables:\"\" }\r\n  const [uploadDetails, setUploadDetails] = useState(defaultValues);\r\n  const [saving, setSaving] = useState(false);\r\n  const [disabledTables, setDisabledTables] = useState(true);\r\n  const [errors, setErrors] = useState({});\r\n  const [tableList, setTableList] = useState( [])\r\n\r\n    useEffect(() => {\r\n        syncHistory()\r\n        Facilities()\r\n        ServerUrl()\r\n        const timer = setTimeout(() => console.log('Initial timeout!'), 1);\r\n        return () => clearTimeout(timer);\r\n    }, []);\r\n\r\n\r\n    //Public API that will echo messages sent to it back to the client\r\n  const [socketUrl, setSocketUrl] = useState('wss://demo.piesocket.com/v3/channel_123?api_key=VCXCEuvhGcBDP7XhiJJUDvR1e1D3eiVjgZ9VRiaV&notify_self');\r\n  const [messageHistory, setMessageHistory] = useState([]);\r\n\r\n  const { sendMessage, lastMessage, readyState } = useWebSocket(socketUrl);\r\n\r\n  useEffect(() => {\r\n    if (lastMessage !== null) {\r\n      setMessageHistory((prev) => prev.concat(lastMessage));\r\n    }\r\n  }, [lastMessage, setMessageHistory]);\r\n\r\n  const handleClickChangeSocketUrl = useCallback(\r\n    () => setSocketUrl('ws://demos.kaazing.com/echo'),\r\n    []\r\n  );\r\n\r\n  const handleClickSendMessage = useCallback(() => sendMessage('Hello Mathew testing'), []);\r\n\r\n  const connectionStatus = {\r\n    [ReadyState.CONNECTING]: 'Connecting',\r\n    [ReadyState.OPEN]: 'Open',\r\n    [ReadyState.CLOSING]: 'Closing',\r\n    [ReadyState.CLOSED]: 'Closed',\r\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\r\n   }[readyState];\r\n\r\n       \r\n    /*****  Validation */\r\n    const validate = () => {\r\n        let temp = { ...errors };\r\n        temp.facilityId = uploadDetails.facilityId\r\n            ? \"\"\r\n            : \"Facility is required\";\r\n            temp.serverUrl  = uploadDetails.serverUrl \r\n            ? \"\"\r\n            : \"URL is required\";\r\n            \r\n            setErrors({\r\n                ...temp,\r\n            });\r\n            return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n    //GET LIST OF Sync History\r\n    async function syncHistory() {\r\n\r\n        axios\r\n            .get(`${baseUrl}sync/sync-history`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSyncList(response.data);\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function Facilities() {\r\n        axios\r\n            .get(`${baseUrl}sync/facilities`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setFacilities(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.name,\r\n                        value: value.id,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function ServerUrl() {\r\n        axios\r\n            .get(`${baseUrl}sync/remote-urls`,\r\n             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setServerUrl(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.url + \" - \" + value.username,\r\n                        value: value.url,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Tables\r\n    async function TableList(facilityId) {\r\n        axios\r\n            .get(`${baseUrl}sync/table/${facilityId}`,\r\n             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setTableList(\r\n                    Object.entries(response.data).map((row) => ({\r\n                        label: row,\r\n                        value: row,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    const handleInputChange = e => {\r\n        setUploadDetails ({...uploadDetails,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"facilityId\" ){\r\n            TableList(e.target.value)\r\n        }\r\n    }\r\n    const handleInputChangeAll =e =>{\r\n        if(e.target.checked){ \r\n            setUploadDetails({...uploadDetails, [e.target.name]: e.target.checked})\r\n            setDisabledTables(true)\r\n         }else{\r\n            setDisabledTables(false)\r\n         }\r\n \r\n     }\r\n    const handleSubmit = (e) => {\r\n       \r\n        e.preventDefault();\r\n             \r\n            \r\n           if(validate()){\r\n            setSaving(true);\r\n            const defaultTable = uploadDetails.tables!==null ? uploadDetails.tables : null ;\r\n            axios.post(`${baseUrl}sync/upload/${defaultTable}`, uploadDetails,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            toast.success(\"Upload Successful\");\r\n                            syncHistory();\r\n                            //Closing of the modal \r\n                            toggle();\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            toast.error(\"Something went wrong\");\r\n                        });\r\n             }       \r\n      };\r\n\r\n    const syncDataBase =()=> {        \r\n        setModal(!modal)\r\n    }\r\n\r\n    const apiCall = {\r\n        event: 'bts:subscribe',\r\n        data: { channel: 'order_book_btcusd' },\r\n    }; \r\n \r\n    const [bids, setBids] = useState([0]);\r\n\r\n    useEffect(() => {\r\n        const ws = new WebSocket('wss://ws.bitstamp.net');\r\n        ws.onopen = (event) => {\r\n            ws.send(JSON.stringify(apiCall));\r\n        };\r\n        ws.onmessage = function (event) {\r\n            const json = JSON.parse(event.data);\r\n            try {\r\n                if ((json.event == 'data')) {\r\n                    setBids(json.data.bids.slice(0, 5));\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        //clean up function\r\n        return () => ws.close();\r\n    }, []);\r\n    const firstBids = bids.map((item, index) => (\r\n        <div key={index}>\r\n            <p> {item}</p>\r\n        </div>\r\n    ));\r\n  return (\r\n    <div>\r\n       \r\n        <Button\r\n            variant=\"contained\"\r\n            style={{backgroundColor:\"#014d88\", }}\r\n            className=\" float-right mr-1\"\r\n            //startIcon={<FaUserPlus />}\r\n            onClick={syncDataBase}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Upload </span>\r\n        </Button>        \r\n        <br/><br/>\r\n        <div>{firstBids}</div>\r\n        <Button onClick={handleClickChangeSocketUrl}>\r\n            Click Me to change Socket Url\r\n        </Button>\r\n        <Button\r\n            onClick={handleClickSendMessage}\r\n            disabled={readyState !== ReadyState.OPEN}\r\n        >\r\n            Click Me to send 'Hello'\r\n        </Button>\r\n\r\n        <span>The WebSocket is currently {connectionStatus}</span>\r\n        {lastMessage ? <span>Last message: {lastMessage.data}</span> : null}\r\n        <ul>\r\n            {messageHistory.map((message, idx) => (\r\n            <span key={idx}>{message ? message.data : null}</span>\r\n            ))}\r\n        </ul>\r\n             <Form >\r\n  \r\n                <Card >\r\n                    <CardBody>\r\n                        <Row >                                  \r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >Facility *</Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"facilityId\"\r\n                                id=\"facilityId\"\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                required\r\n                                >\r\n                                <option > </option>\r\n                                {facilities.map(({ label, value }) => (\r\n                                    <option key={value} value={value}>\r\n                                    {label}\r\n                                    </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.facilityId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.facilityId}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        </Col> \r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >URL *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"serverUrl\"\r\n                                    id=\"serverUrl\"\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    required\r\n                                    >\r\n                                    {serverUrl.map(({ label, value }) => (\r\n                                        <option key={value} value={value}>\r\n                                        {label}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                                {errors.serverUrl !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.serverUrl}</span>\r\n                                ) : \"\" } \r\n                        </FormGroup>\r\n                        </Col>\r\n                        {!disabledTables && (\r\n                            <>\r\n                                <Col md={12}>\r\n                                <FormGroup>\r\n                                <Label >Tables</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"tables\"\r\n                                            id=\"tables\"\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        // disabled={}\r\n                                        >\r\n                                            <option >Select Table </option>\r\n                                            {tableList.map((row) => (\r\n                                                <option key={row} value={row}>\r\n                                                {row}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Input>\r\n                                        {errors.tables !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.tables}</span>\r\n                                        ) : \"\" } \r\n                                </FormGroup>\r\n                                </Col>\r\n                            </>\r\n                        )} \r\n                        <div className=\"form-group mb-3 col-md-12\">                                    \r\n                        <div className=\"form-check custom-checkbox ml-1 \">\r\n                            <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"                           \r\n                            name=\"allTables\"\r\n                            id=\"allTables\"\r\n                            checked={disabledTables}\r\n                            onChange={handleInputChangeAll}\r\n                            />\r\n                            <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor=\"basic_checkbox_1\"\r\n                            >\r\n                                All Tables\r\n                            </label>\r\n                        </div>\r\n                        </div>\r\n                        </Row>\r\n                        <br/>\r\n                        {saving ? <Spinner /> : \"\"}\r\n                        <br />\r\n                        \r\n                        <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<SettingsBackupRestoreIcon />}\r\n                            onClick={handleSubmit}\r\n                            \r\n                        >   \r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Upload</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Uploading Please Wait...</span>\r\n                            )\r\n                        } \r\n                        </MatButton>                                          \r\n                        <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={toggle}\r\n                            className={classes.button}\r\n                            style={{backgroundColor:'#992E62'}}\r\n                            startIcon={<CancelIcon />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>cancel</span>\r\n                        </MatButton>\r\n                    </CardBody>\r\n                </Card> \r\n          \r\n        </Form>\r\n   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SyncList;\r\n\r\n\r\n","import React, {forwardRef, useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport {Modal, ModalBody, ModalHeader, Form,\r\n    Row,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MaterialTable from 'material-table';\r\nimport CloudUpload from '@material-ui/icons/CloudUpload';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport {FiUploadCloud} from \"react-icons/fi\";\r\nimport FileSaver from \"file-saver\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Dropdown,Button as Buuton2, Menu, Icon } from 'semantic-ui-react'\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Spinner } from 'reactstrap';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from \"moment\";\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref}/>),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref}/>),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref}/>),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref}/>),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref}/>),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref}/>),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref}/>),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref}/>),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref}/>),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref}/>),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref}/>),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref}/>),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref}/>)\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport default function DownloadNdr(props) {\r\n    const classes = useStyles();\r\n    const [syncList, setSyncList] = useState( [])\r\n    const [facilities, setFacilities] = useState( [])\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n    const [loading, setLoading] = useState('')\r\n    const [modal, setModal] = useState(false);\r\n    const [modal2, setModal2] = useState(false);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledTables, setDisabledTables] = useState(true);\r\n    const [errors, setErrors] = useState({});\r\n    const [tableList, setTableList] = useState( [\"patient\",\r\n            \"patient_visit\",\r\n            \"triage_vital_sign\",\r\n            \"hiv_enrollment\",\r\n            \"hiv_art_clinical\",\r\n            \"hiv_art_pharmacy\",\r\n            \"laboratory_order\",\r\n            \"laboratory_test\",\r\n            \"laboratory_sample\",\r\n            \"laboratory_result\",\r\n            \"biometric\",\r\n            \"hiv_status_tracker\",\r\n            \"hiv_eac\",\r\n            \"hiv_eac_session\",\r\n            //hiv_eac_out_come,\r\n            \"hiv_observation\",\r\n            \"prep_eligibility\",\r\n            \"prep_enrollment\",\r\n            \"prep_clinic\",\r\n            \"prep_interruption\"])\r\n    const defaultValues = { facilityId: \"\", serverUrl : \"\", allTables:null, tables:\"\" }\r\n    const [uploadDetails, setUploadDetails] = useState(defaultValues);\r\n    const toggle = () => setModal(!modal);\r\n    const toggle2 = () => setModal2(!modal2);\r\n    useEffect(() => {\r\n        syncHistory()\r\n        Facilities()\r\n        ServerUrl()\r\n        const timer = setTimeout(() => console.log('Initial timeout!'), 1);\r\n        return () => clearTimeout(timer);\r\n      }, []);\r\n\r\n           ///GET LIST OF Sync History\r\n    async function syncHistory() {\r\n\r\n        axios\r\n            .get(`${baseUrl}sync/sync-history`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSyncList(response.data);\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function Facilities() {\r\n        axios\r\n            .get(`${baseUrl}sync/facilities`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setFacilities(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.name,\r\n                        value: value.id,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function ServerUrl() {\r\n        axios\r\n            .get(`${baseUrl}sync/remote-urls`,\r\n             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setServerUrl(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.url + \" - \" + value.username,\r\n                        value: value.url,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Tables\r\n    async function TableList(facilityId) {\r\n        axios\r\n            .get(`${baseUrl}sync/table/${facilityId}`,\r\n             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setTableList(\r\n                    Object.entries(response.data).map((row) => ({\r\n                        label: row,\r\n                        value: row,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    const downloadFile = (fileName) => {\r\n \r\n        axios\r\n            .get(`${baseUrl}ndr/download/${fileName}`,\r\n                {headers: {\"Authorization\": `Bearer ${token}`}, responseType: 'blob'}\r\n            )\r\n            .then((response) => {\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.zip`);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    const handleInputChange = e => {\r\n        setUploadDetails ({...uploadDetails,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"facilityId\" ){\r\n            TableList(e.target.value)\r\n        }\r\n    }\r\n    const handleInputChangeAll =e =>{\r\n        if(e.target.checked){ \r\n            setUploadDetails({...uploadDetails, [e.target.name]: e.target.checked})\r\n            setDisabledTables(true)\r\n         }else{\r\n            setDisabledTables(false)\r\n         }\r\n \r\n    }\r\n         /*****  Validation */\r\n    const validate = () => {\r\n        let temp = { ...errors };\r\n        temp.facilityId = uploadDetails.facilityId\r\n            ? \"\"\r\n            : \"Facility is required\";\r\n            temp.serverUrl  = uploadDetails.serverUrl \r\n            ? \"\"\r\n            : \"URL is required\";\r\n            \r\n            setErrors({\r\n                ...temp,\r\n            });\r\n            return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n     const handleSubmit = (e) => {\r\n       \r\n        e.preventDefault();\r\n             \r\n            \r\n           if(validate()){\r\n            setSaving(true);\r\n            const defaultTable = uploadDetails.tables!==null ? uploadDetails.tables : null ;\r\n            axios.post(`${baseUrl}sync/upload/${defaultTable}`, uploadDetails,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            toast.success(\"Upload Successful\");\r\n                            syncHistory();\r\n                            //Closing of the modal \r\n                            toggle();\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            toast.error(\"Something went wrong\");\r\n                        });\r\n             }       \r\n    };\r\n    const varient =(value)=>{\r\n        console.log(value)\r\n        if(value<=20 ){\r\n            return \"danger\"\r\n        }else if(value> 20 && value<=69){\r\n            return \"warning\"\r\n        }else if(value>= 70 && value<=99){\r\n            return \"info\"\r\n        }else if(value=== 100){\r\n            return \"success\"\r\n        }else{\r\n            return \"success\" \r\n        }\r\n    }\r\n    const CentralUploadStatus =(value)=>{\r\n        if(value<=0 ){\r\n            return \"Not Yet Uploaded\"\r\n        }else if(value> 0 && value<=99){\r\n            return \"Processing\"\r\n        }else if(value=== 100){\r\n            return \"Completed\"\r\n        }else{\r\n            return \"Pending\" \r\n        }\r\n    }\r\n    let tableListObj=[\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Patient\",\r\n            date:\"2023-04-23\",\r\n            status:100,\r\n            centralUpload:100\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Triage\",\r\n            date:\"2023-04-23\",\r\n            status:30,\r\n            centralUpload:30\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Hiv Enrollment\",\r\n            date:\"2023-04-23\",\r\n            status:97,\r\n            centralUpload:97\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"HIV Clinic Visit\",\r\n            date:\"2023-04-23\",\r\n            status:40,\r\n            centralUpload:40\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Biomteric\",\r\n            date:\"2023-04-23\",\r\n            status:0,\r\n            centralUpload:0\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Laboratory\",\r\n            date:\"2023-04-23\",\r\n            status:70,\r\n            centralUpload:70\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Pharmacy\",\r\n            date:\"2023-04-23\",\r\n            status:80,\r\n            centralUpload:80\r\n        },\r\n    ];\r\n    const syncDataBase =()=> {        \r\n        setModal2(!modal2)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-right\"\r\n                startIcon={<FiUploadCloud size=\"10\"/>}\r\n                style={{backgroundColor: '#014d88'}}\r\n                onClick={syncDataBase}\r\n                //href=\"https://ndr.phis3project.org.ng/Identity/Account/Login?ReturnUrl=%2F\"\r\n                //onClick={loadNdrWeb}\r\n                target=\"_blank\"\r\n            >\r\n                <span> Genrate Tables</span>\r\n            </Button>\r\n\r\n            <br/><br/>\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title=\"List of Tables Generated\"\r\n\r\n                columns={[\r\n                    {title: \"Facility Name\", field: \"name\", filtering: false},\r\n                    {\r\n                        title: \"Number of Files Generated\",\r\n                        field: \"number\",\r\n                        filtering: false\r\n                    },\r\n                    {title: \"File Name\", field: \"fileName\", filtering: false},\r\n                    {title: \"Date Last Generated\", field: \"date\", type: \"date\", filtering: false},\r\n                    {title: \"Central Upload Status\", field: \"status\", filtering: false},\r\n\r\n                    {\r\n                        title: \"Action\",\r\n                        field: \"actions\",\r\n                        filtering: false,\r\n                    },\r\n                ]}\r\n                isLoading={loading}\r\n                data={tableListObj.map((row) => ({\r\n                    name: row.name,\r\n                    number: row.number,\r\n                    fileName: row.fileName,\r\n                    date: moment(row.date).format(\"LLLL\"),\r\n                    status:(\r\n                            <>\r\n                            <p><b>{CentralUploadStatus(row.centralUpload)}</b></p>\r\n\r\n                            <ProgressBar now={row.status} variant={varient(row.status)} label={`${row.status}%`} />\r\n                            </>  \r\n                            ),\r\n                    actions:(<div>\r\n                    <Menu.Menu position='right'  >\r\n                    <Menu.Item >\r\n                        <Buuton2 style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                        <Dropdown item text='Action'>\r\n\r\n                        <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                            <Dropdown.Item  onClick={() => downloadFile(row.fileName)} title=\"Download\"><CloudDownloadIcon color=\"primary\"/> Download\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item  ><CloudUpload color=\"primary\" title=\"Upload to Central\"/> Upload To Central\r\n                            </Dropdown.Item>\r\n                            \r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                        </Buuton2>\r\n                    </Menu.Item>\r\n                    </Menu.Menu>\r\n              </div>)\r\n                }))}\r\n                options={{\r\n\r\n                    pageSizeOptions: [5, 10, 50, 100, 150, 500],\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                        margin: \"auto\"\r\n                    },\r\n                    filtering: true,\r\n                    searchFieldStyle: {\r\n                        width: '300%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                }}\r\n\r\n            />\r\n\r\n        {/* <Modal isOpen={modal} toggle={toggle} backdrop={false} fade={true} style={{marginTop:\"250px\"}} size='lg'>\r\n        \r\n        <ModalBody>\r\n        <h1>Uploading File To NDR. Please wait...</h1>\r\n        </ModalBody>\r\n        \r\n        </Modal>  */}\r\n        <Modal isOpen={modal2} toggle={toggle2} className={props.className} size=\"lg\"  backdrop=\"static\">\r\n        <Form >\r\n        <ModalHeader toggle={toggle2}>Upload</ModalHeader>\r\n            <ModalBody>   \r\n                <Card >\r\n                    <CardBody>\r\n                        <Row >                                  \r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >Facility *</Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"facilityId\"\r\n                                id=\"facilityId\"\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                required\r\n                                >\r\n                                <option > </option>\r\n                                {facilities.map(({ label, value }) => (\r\n                                    <option key={value} value={value}>\r\n                                    {label}\r\n                                    </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.facilityId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.facilityId}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        </Col> \r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >URL *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"serverUrl\"\r\n                                    id=\"serverUrl\"\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    required\r\n                                    >\r\n                                    {serverUrl.map(({ label, value }) => (\r\n                                        <option key={value} value={value}>\r\n                                        {label}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                                {errors.serverUrl !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.serverUrl}</span>\r\n                                ) : \"\" } \r\n                        </FormGroup>\r\n                        </Col>\r\n                        {!disabledTables && (\r\n                            <>\r\n                                <Col md={12}>\r\n                                <FormGroup>\r\n                                <Label >Tables</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"tables\"\r\n                                            id=\"tables\"\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        // disabled={}\r\n                                        >\r\n                                            <option >Select Table </option>\r\n                                            {tableList.map((row) => (\r\n                                                <option key={row} value={row}>\r\n                                                {row}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Input>\r\n                                        {errors.tables !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.tables}</span>\r\n                                        ) : \"\" } \r\n                                </FormGroup>\r\n                                </Col>\r\n                            </>\r\n                        )} \r\n                        <div className=\"form-group mb-3 col-md-12\">                                    \r\n                        <div className=\"form-check custom-checkbox ml-1 \">\r\n                            <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"                           \r\n                            name=\"allTables\"\r\n                            id=\"allTables\"\r\n                            checked={disabledTables}\r\n                            onChange={handleInputChangeAll}\r\n                            />\r\n                            <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor=\"basic_checkbox_1\"\r\n                            >\r\n                                All Tables\r\n                            </label>\r\n                        </div>\r\n                        </div>\r\n                        </Row>\r\n                        <br/>\r\n                        {saving ? <Spinner /> : \"\"}\r\n                        <br />\r\n                        \r\n                        <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<SettingsBackupRestoreIcon />}\r\n                            onClick={handleSubmit}\r\n                            \r\n                        >   \r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Upload</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Uploading Please Wait...</span>\r\n                            )\r\n                        } \r\n                        </MatButton>                                          \r\n                        <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={toggle2}\r\n                            className={classes.button}\r\n                            style={{backgroundColor:'#992E62'}}\r\n                            startIcon={<CancelIcon />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>cancel</span>\r\n                        </MatButton>\r\n                    </CardBody>\r\n                </Card> \r\n            </ModalBody>\r\n        </Form>\r\n    </Modal>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\nimport {getQueryParams} from \"./../components/Utils/PageUtils\";\r\n\r\nimport SyncList from './Sync/SyncList';\r\nimport Setting from './Settings/index'\r\n// import Backup from './backup/backupList'\r\n// import Restore from './restore/restoreList'\r\n// import RestoreIcon from '@material-ui/icons/Restore';\r\n//import SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\n//import BackupIcon from '@material-ui/icons/Backup';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport CloudSyncIcon from '@mui/icons-material/CloudSync';\r\nimport Websocket from './Sync/Websocket'; \r\nimport NewList from './Sync/NewList'; \r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    fontSize: \"20px\",\r\n    fontWeight: \"bold\",\r\n    padding: \"5px\",\r\n    paddingBottom: \"10px\",\r\n  },\r\n  inforoot: {\r\n    margin: \"5px\",\r\n  },\r\n\r\n  dropdown: {\r\n    marginTop :\"50px\"\r\n   \r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  downmenu: {\r\n    display: 'flex'\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={5}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    \"aria-controls\": `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\nfunction HomePage(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(null);\r\n  const getstate= props.location && props.location.state ? props.location.state : \" \" ;\r\n  const urlIndex = getQueryParams(\"tab\", props.location && props.location.search ? props.location.search : \"\"); \r\n  const urlTabs = urlIndex !== null ? urlIndex : getstate ;\r\n  useEffect ( () => {\r\n\r\n    switch(urlTabs){  \r\n      case \"database-sync\": return setValue(0)\r\n      case \"setting\": return setValue(1)\r\n\r\n      default: return setValue(0)\r\n    }\r\n  }, [urlIndex]);\r\n  \r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n     <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>Central Sync</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <br/>\r\n    <div className={classes.root} >\r\n      <AppBar position=\"static\" style={{backgroundColor:'#fff'}}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"primary\"\r\n          aria-label=\"scrollable force tabs example\"\r\n        >\r\n           <Tab className={classes.title} label=\"Generate & Upload JSON Files\" icon={<CloudSyncIcon />} {...a11yProps(0)} />\r\n         \r\n          {/* <Tab className={classes.title} label=\"WebSocket  \" icon={<SettingsIcon />} {...a11yProps(1)}/> \r\n          <Tab className={classes.title} label=\"Generate & Upload  \" icon={<SettingsIcon />} {...a11yProps(2)}/>  */}\r\n          <Tab className={classes.title} label=\"Configuration  \" icon={<SettingsIcon />} {...a11yProps(1)}/> \r\n      </Tabs>\r\n      </AppBar>\r\n\r\n     \r\n        <TabPanel value={value} index={0}>\r\n          <SyncList />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <Setting />\r\n        </TabPanel>\r\n       \r\n     </div> \r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default HomePage;\r\n","export const getQueryParams = (params, url) => {\r\n    let href = url;\r\n    //this expression is to get the query strings\r\n    let reg = new RegExp(\"[?&]\" + params + \"=([^&#]*)\", \"i\");\r\n    let queryString = reg.exec(href);\r\n    return queryString ? queryString[1] : null;\r\n};","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport HomePage from './main/webapp/jsx/components/Dashboard'\r\n//import HomePage from './main/webapp/jsx/ndr/Dashboard'\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          \r\n          <Route path=\"/\">\r\n            <HomePage />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}