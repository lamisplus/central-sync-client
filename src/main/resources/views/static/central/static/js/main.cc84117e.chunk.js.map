{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Sync/Progress.js","main/webapp/jsx/components/Sync/SyncList.js","main/webapp/jsx/components/Settings/NewPersonalAccessToken.js","main/webapp/jsx/components/Settings/SettingList.js","main/webapp/jsx/components/Settings/index.js","main/webapp/jsx/components/Sync/Websocket.js","main/webapp/jsx/components/Sync/NewList.js","main/webapp/jsx/components/Dashboard.js","main/webapp/jsx/components/Utils/PageUtils.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","Progress","_ref","percentage","_jsx","className","children","_jsxs","role","style","width","concat","height","tableIcons","Add","forwardRef","props","ref","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","useStyles","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","marginTop","submit","cardBottom","marginBottom","Select","button","root","input","error","color","fontSize","success","SyncList","classes","_useState","useState","_useState2","_slicedToArray","syncList","setSyncList","_useState3","_useState4","facilities","setFacilities","_useState5","_useState6","modal","setModal","toggle","_useState7","facilityId","startDate","endDate","_useState8","uploadDetails","setUploadDetails","_useState9","_useState10","saving","setSaving","_useState11","_useState12","errors","setErrors","_useState13","_useState14","uploadPercentage","setUploadPercentage","useEffect","syncHistory","_Facilities","apply","arguments","Facilities","interval","setInterval","clearInterval","validate","temp","Object","values","every","x","_syncHistory","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","axios","get","baseUrl","headers","then","response","data","catch","stop","_callee3","_context3","entries","map","_ref3","_ref4","value","label","name","id","handleInputChange","e","_defineProperty","target","handleSubmit","_callee","_context","preventDefault","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","sent","t0","toast","_x","Button","variant","backgroundColor","onClick","textTransform","MaterialTable","icons","title","columns","field","filtering","row","facilityName","tableName","uploadSize","date","dateLastSync","status","processed","actions","Menu","position","Item","Buuton2","primary","Dropdown","item","text","fileName","responseType","responseData","blob","Blob","type","FileSaver","saveAs","CloudDownloadIcon","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","pageSize","debounceInterval","Modal","isOpen","size","backdrop","Form","ModalHeader","ModalBody","Card","CardBody","Row","Col","md","FormGroup","Label","Input","onChange","border","borderRadius","vaulue","_ref2","max","moment","Date","format","min","MatButton","fontWeight","startIcon","SettingsBackupRestoreIcon","CancelIcon","DatabaseSyn","_jsx2","username","password","patDetails","setPatDetails","setServerUrl","_ServerUrl","ServerUrl","showModal","toggleModal","required","Spinner","post","SettingList","useHistory","serverUrl","_React$useState","React","_React$useState2","setShowModal","facility","NewPersonalAccessToken","TabExampleMenuPositionRight","console","log","maxWidth","palette","background","paper","Moment","locale","momentLocalizer","header","padding","paddingBottom","inforoot","dropdown","marginRight","downmenu","TabPanel","index","other","_objectWithoutProperties","_excluded","Typography","component","hidden","Box","p","HomePage","setValue","getstate","location","state","urlIndex","params","href","queryString","RegExp","exec","getQueryParams","search","urlTabs","_Fragment","AppBar","Tabs","event","newValue","scrollButtons","indicatorColor","textColor","Tab","icon","CloudSyncIcon","Setting","App","Router","ToastContainer","Switch","Route","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","typography","version","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","_useState15","_useState16","haderColor","setHaderColor","_useState17","_useState18","sidebarColor","setSidebarColor","_useState19","_useState20","iconHover","setIconHover","_useState21","_useState22","menuToggle","setMenuToggle","_useState23","_useState24","setBackground","_useState25","_useState26","containerPosition_","setcontainerPosition_","body","document","querySelector","_useState27","_useState28","windowWidth","setWindowWidth","_useState29","_useState30","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","alert","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","window","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","fontFamily","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.cc84117e.chunk.js","sourcesContent":["// export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\n// export const url = '/api/'\r\nexport const url =  'http://localhost:9090/api/';\r\nexport const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjgyMjkwNDYyfQ.66BYmESAuUSGhO8DxJv9pAue0Y_yZcykW_K-pbVKE2bX9CpOXxZxtq4gBHtiUkG7zpk52eB3aYciNEMKJ03hng'","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Progress = ({ percentage }) => {\r\n  return (\r\n    <div className='progress'>\r\n      <div\r\n        className='progress-bar progress-bar-striped bg-success'\r\n        role='progressbar'\r\n        style={{ width: `${percentage}%`, height: '80px' }}\r\n\r\n      >\r\n        {percentage}%\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProgress.propTypes = {\r\n  percentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Progress;\r\n","import React, { useState, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport Progress from './Progress';\r\nimport moment from \"moment\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//import { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\n//import { MdModeEdit } from \"react-icons/md\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\n    Row,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport { Spinner } from 'reactstrap';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport FileSaver from \"file-saver\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Dropdown,Button as Buuton2, Menu, Icon } from 'semantic-ui-react'\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\nconst SyncList = (props) => {\r\n  //let history = useHistory();\r\n  // The state for our timer\r\n  const classes = useStyles()\r\n  const [syncList, setSyncList] = useState( [])\r\n  const [facilities, setFacilities] = useState( [])\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const defaultValues = { facilityId: \"\", startDate : \"\", endDate:\"\",}\r\n  const [uploadDetails, setUploadDetails] = useState(defaultValues);\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\nuseEffect(() => {\r\n    syncHistory()\r\n    Facilities()\r\n    }, []);\r\n    \r\nuseEffect(() => {\r\n    const interval = setInterval(() => {\r\n        syncHistory()\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n    }, []);\r\n    /*****  Validation */\r\n    const validate = () => {\r\n        let temp = { ...errors };\r\n        temp.facilityId = uploadDetails.facilityId\r\n            ? \"\"\r\n            : \"Facility is required\";\r\n            temp.startDate  = uploadDetails.startDate \r\n            ? \"\"\r\n            : \"Start Date is required\";\r\n            temp.endDate  = uploadDetails.endDate \r\n            ? \"\"\r\n            : \"End Date is required\";\r\n            setErrors({\r\n                ...temp,\r\n            });\r\n            return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n     ///GET LIST OF Sync History\r\n    async function syncHistory() {\r\n\r\n        axios\r\n            .get(`${baseUrl}sync/sync-history`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSyncList(response.data);\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function Facilities() {\r\n        axios\r\n            .get(`${baseUrl}sync/facilities`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setFacilities(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.name,\r\n                        value: value.id,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    const handleInputChange = e => {\r\n        setUploadDetails ({...uploadDetails,  [e.target.name]: e.target.value});\r\n    }\r\n    const handleSubmit = async e => {  \r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            try {\r\n                const res = await axios.get(`${baseUrl}export/all?facilityId=${uploadDetails.facilityId}&startDate=${uploadDetails.startDate}&endDate=${uploadDetails.endDate}`, {\r\n                    headers: {\"Authorization\" : `Bearer ${token}`},\r\n                    onUploadProgress: progressEvent => {\r\n                        setUploadPercentage(\r\n                        parseInt(\r\n                            Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n                        )\r\n                        );\r\n                        // Clear percentage\r\n                        setTimeout(() => setUploadPercentage(0), 10000);\r\n                    }\r\n                });\r\n\r\n            } catch (err) {\r\n                // console.log(err)\r\n                \r\n                }  \r\n        }else{\r\n            toast.error(\"All Fields are required\");\r\n        }    \r\n       \r\n    };\r\n    const generateJsonFile =()=> {        \r\n        setModal(!modal)\r\n    }\r\n    const downloadFile = (fileName) => {\r\n        axios\r\n            .get(`${baseUrl}files/download/${fileName}`,\r\n                {headers: {\"Authorization\": `Bearer ${token}`}, responseType: 'blob'}\r\n            )\r\n            .then((response) => {\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.zip`);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n \r\n  return (\r\n    <div>\r\n       \r\n        <Button\r\n            variant=\"contained\"\r\n            style={{backgroundColor:\"#014d88\", }}\r\n            className=\" float-right mr-1\"\r\n            //startIcon={<FaUserPlus />}\r\n            onClick={generateJsonFile}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Generate JSON File </span>\r\n        </Button>        \r\n        <br/><br/>\r\n        <MaterialTable\r\n         icons={tableIcons}\r\n            title=\"Generated JSON Files List \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Facility Name\",\r\n                field: \"facilityName\",\r\n            },\r\n            { title: \"File Name\", field: \"name\", filtering: false },\r\n            { title: \"Files\", field: \"url\", filtering: false },\r\n            { title: \"File Size\", field: \"uploadSize\", filtering: false },\r\n            { title: \"Date of Upload \", field: \"date\", filtering: false },\r\n            { title: \"Status\", field: \"status\", filtering: false },        \r\n            { title: \"Action\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            data={ syncList.map((row) => ({\r\n                //Id: manager.id,\r\n                facilityName: row.facilityName,\r\n                name: row.name,\r\n                url: row.tableName,\r\n                uploadSize: row.uploadSize,\r\n                date:  row.dateLastSync,\r\n                status: row.processed===0 ? \"Processing\" : \"Completed\",\r\n                actions:(<div>\r\n                    <Menu.Menu position='right'  >\r\n                    <Menu.Item >\r\n                        <Buuton2 style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                        <Dropdown item text='Action'>\r\n\r\n                        <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                            <Dropdown.Item  onClick={() => downloadFile(row.fileName)}><CloudDownloadIcon color=\"primary\"/> Download File\r\n                            </Dropdown.Item>\r\n                            {/*{!row.completelyPushed && (<Dropdown.Item  onClick= {() => generateAction(row.id)}><CloudUpload color=\"primary\"/> Upload To NDR*/}\r\n                            {/*</Dropdown.Item>*/}\r\n                            {/*)}*/}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                        </Buuton2>\r\n                    </Menu.Item>\r\n                    </Menu.Menu>\r\n              </div>)\r\n                }))}\r\n        \r\n                    options={{\r\n                        headerStyle: {\r\n                            backgroundColor: \"#014d88\",\r\n                            color: \"#fff\",\r\n                        },\r\n                        searchFieldStyle: {\r\n                            width : '200%',\r\n                            margingLeft: '250px',\r\n                        },\r\n                        filtering: false,\r\n                        exportButton: false,\r\n                        searchFieldAlignment: 'left',\r\n                        pageSizeOptions:[10,20,100],\r\n                        pageSize:10,\r\n                        debounceInterval: 400\r\n         }}\r\n        />\r\n    \r\n    <Modal isOpen={modal} toggle={toggle} className={props.className} size=\"lg\"  backdrop=\"static\">\r\n        <Form >\r\n        <ModalHeader toggle={toggle}>Generate JSON Files</ModalHeader>\r\n            <ModalBody>   \r\n                <Card >\r\n                    <CardBody>\r\n                        <Row >                                  \r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >Facility *</Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"facilityId\"\r\n                                id=\"facilityId\"\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                vaulue={uploadDetails.facilityId}\r\n                                >\r\n                                <option > </option>\r\n                                {facilities.map(({ label, value }) => (\r\n                                    <option key={value} value={value}>\r\n                                    {label}\r\n                                    </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.facilityId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.facilityId}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        </Col> \r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >Start Date</Label>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"startDate\"\r\n                                id=\"startDate\"\r\n                                vaulue={uploadDetails.startDate}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                >\r\n                                \r\n                            </Input>\r\n                            {errors.startDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.startDate}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        </Col>\r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >End Date</Label>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"endDate\"\r\n                                id=\"endDate\"\r\n                                vaulue={uploadDetails.endDate}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                min= {moment(uploadDetails.startDate).format(\"YYYY-MM-DD\") }\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                >\r\n                            </Input>\r\n                            {errors.endDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.endDate}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        </Col>\r\n                        </Row>\r\n                        <br/>\r\n                        {saving ?\r\n                         <Progress percentage={uploadPercentage} /> \r\n                         : \"\"}\r\n                        <br />\r\n                        \r\n                        <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<SettingsBackupRestoreIcon />}\r\n                            onClick={handleSubmit}\r\n                            \r\n                        >   \r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Generate</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Generating Please Wait...</span>\r\n                            )\r\n                        } \r\n                        </MatButton>                                          \r\n                        <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={toggle}\r\n                            className={classes.button}\r\n                            style={{backgroundColor:'#992E62'}}\r\n                            startIcon={<CancelIcon />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>cancel</span>\r\n                        </MatButton>\r\n                    </CardBody>\r\n                </Card> \r\n            </ModalBody>\r\n        </Form>\r\n    </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SyncList;\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\nRow,Col, Card,CardBody, FormGroup, Input, Label} from 'reactstrap';\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst DatabaseSyn = (props) => {\r\n    const classes = useStyles()\r\n    const [urlHide, setUrlHide] = useState(false);\r\n    const defaultValues = { username: \"\", password: \"\", url:\"\" }\r\n    const [patDetails, setPatDetails] = useState(defaultValues);\r\n    const [saving, setSaving] = useState(false);\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n      ServerUrl()\r\n    }, []);\r\n        ///GET LIST OF Facilities\r\n        async function ServerUrl() {\r\n          axios\r\n              .get(`${baseUrl}sync/remote-urls`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n              )\r\n              .then((response) => {\r\n                  setServerUrl(\r\n                      Object.entries(response.data).map(([key, value]) => ({\r\n                          label: value.url,\r\n                          value: value.id,\r\n                        }))\r\n                  );\r\n              })\r\n              .catch((error) => {\r\n  \r\n              });\r\n      \r\n      }\r\n    \r\n    const handleInputChange = e => {\r\n      setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n    }\r\n    /*****  Validation */\r\n    const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.username = patDetails.username\r\n        ? \"\"\r\n        : \"Username is required\";\r\n        temp.password = patDetails.password\r\n        ? \"\"\r\n        : \"Password is required\";\r\n        temp.url = patDetails.url\r\n        ? \"\"\r\n        : \"Server URL is required\";\r\n        setErrors({\r\n            ...temp,\r\n        });\r\n        return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n            if (validate()) {      \r\n                    setSaving(true);\r\n                    axios.post(`${baseUrl}sync/remote-access-token`,patDetails,\r\n                     { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n                    )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            props.ServerUrl()\r\n                            toast.success(\"Token Generated Successful\");\r\n                            props.toggleModal()\r\n\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            toast.error(\"Something went wrong\");\r\n                            props.toggleModal();\r\n                        });\r\n            };\r\n        }\r\n\r\n      \r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop={false} backdrop=\"static\">\r\n              <Form >\r\n             <ModalHeader toggle={props.toggleModal}>Personal Access Token </ModalHeader>\r\n                <ModalBody>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n\r\n                                <Col md={12}>\r\n                                <FormGroup>\r\n                                <Label >Server URL * </Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"url\"\r\n                                            id=\"url\"\r\n                                            value={patDetails.url} \r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                            required\r\n                                            />\r\n                                            {errors.url !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.url}</span>\r\n                                                        ) : \"\" }   \r\n                                </FormGroup>\r\n                                </Col>                \r\n                                <Col md={12}>\r\n                            <FormGroup>\r\n                            <Label >Username </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"username\"\r\n                                        id=\"username\" \r\n                                        value={patDetails.username}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        required\r\n                                        />\r\n                                        {errors.username !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.username}</span>\r\n                                        ) : \"\" }\r\n                            </FormGroup>\r\n                            </Col>\r\n                            <Col md={12}>\r\n                            <FormGroup>\r\n                            <Label >Password </Label>\r\n                                    <Input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        id=\"password\" \r\n                                        value={patDetails.password}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        required\r\n                                        />\r\n                                            {errors.password !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.password}</span>\r\n                                            ) : \"\" }\r\n                            </FormGroup>\r\n                            </Col>                    \r\n                        </Row>\r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br/>              \r\n                                <Button\r\n                                    type='submit'\r\n                                    variant='contained'\r\n                                    //color='primary'\r\n                                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    //startIcon={<SettingsBackupRestoreIcon />}\r\n                                    onClick={handleSubmit}\r\n                                    \r\n                                >   \r\n                                    <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>Connect & Generate Token</span>  \r\n                                </Button>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DatabaseSyn;\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport NewPersonalAccessToken from './NewPersonalAccessToken'\r\n\r\nimport { forwardRef } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { MdDashboard, MdDeleteForever, MdModeEdit } from \"react-icons/md\";\r\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SettingList = (props) => {\r\n    let history = useHistory();\r\n  // The state for our timer\r\n  const classes = useStyles()\r\n  const [syncList, setSyncList] = useState( [])\r\n  const [facilities, setFacilities] = useState( [])\r\n  const [serverUrl, setServerUrl] = useState( [])\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const toggleModal = () => setShowModal(!showModal)\r\n  const defaultValues = { facility: \"\", url: \"\" }\r\n  const [uploadDetails, setUploadDetails] = useState(defaultValues);\r\n  const [saving, setSaving] = useState(false);\r\n  useEffect(() => {\r\n    ServerUrl()\r\n }, []);\r\n\r\n    \r\n    \r\n    ///GET LIST OF Remote URL\r\n    async function ServerUrl() {\r\n        axios\r\n            .get(`${baseUrl}sync/remote-urls`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setServerUrl(response.data)\r\n                \r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    const syncDataBase =()=> {        \r\n        setShowModal(!showModal)\r\n    }\r\n    \r\n \r\n  return (\r\n    <div>\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-right mr-1\"\r\n            //startIcon={<FaUserPlus />}\r\n            style={{backgroundColor:\"#014d88\"}}\r\n            onClick={syncDataBase}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>New Personal Access Token </span>\r\n        </Button>        \r\n        <br/><br/>\r\n        <br/>\r\n      <MaterialTable\r\n       icons={tableIcons}\r\n        title=\"Personal Access Token List\"\r\n        columns={[\r\n         // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"URLS\",\r\n            field: \"name\",\r\n          },\r\n          { title: \"Username\", field: \"url\", filtering: false },\r\n          { title: \" Status\", field: \"date\", filtering: false },\r\n          //{ title: \"Action\", field: \"actions\", filtering: false },\r\n         \r\n         \r\n        ]}\r\n        data={ serverUrl.map((row) => ({\r\n            //Id: manager.id,\r\n              name: row.url,\r\n              url: row.username,\r\n              date:  \"Active\",\r\n              actions:\"\"\r\n            //   <div>\r\n\r\n            //       <Menu>\r\n            //           <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", }}>\r\n            //               Actions <span aria-hidden>▾</span>\r\n            //           </MenuButton>\r\n            //           <MenuList style={{ color:\"#000 !important\"}} >\r\n\r\n\r\n            //               <MenuItem  style={{ color:\"#000 !important\"}}>\r\n            //                   <Link\r\n            //                       to ={{\r\n            //                           pathname: \"/patient-dashboard\",\r\n            //                           state: (row.details && row.details.hospitalNumber ? row.details.hospitalNumber : row.hospitalNumber)\r\n            //                       }}\r\n            //                   >\r\n            //                       <MdDashboard size=\"15\" color=\"blue\" />{\" \"}<span style={{color: '#000'}}>Re-Generate</span>\r\n            //                   </Link>\r\n            //               </MenuItem>\r\n\r\n            //               <MenuItem style={{ color:\"#000 !important\"}}>\r\n            //                   <Link\r\n            //                       to={{\r\n            //                           pathname: \"/patient-update-formio\",\r\n            //                           state: (row.details && row.details.hospitalNumber ? row.details.hospitalNumber : row.hospitalNumber)\r\n            //                       }}\r\n            //                   >\r\n            //                       <MdModeEdit size=\"15\" color=\"blue\" />{\" \"}<span style={{color: '#000'}}>Edit  </span>\r\n            //                   </Link>\r\n            //               </MenuItem>\r\n            //               <MenuItem style={{ color:\"#000 !important\"}}>\r\n            //                   <Link\r\n            //                       //onClick={() => onDelete(row)}\r\n            //                       >\r\n            //                       <MdDeleteForever size=\"15\" color=\"blue\" />{\" \"}\r\n            //                       <span style={{color: '#000'}}>Delete </span>\r\n            //                   </Link>\r\n            //               </MenuItem>\r\n            //           </MenuList>\r\n            //       </Menu>\r\n            //   </div>\r\n            }))}\r\n       \r\n                  options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400\r\n                }}\r\n      />\r\n    \r\n    <NewPersonalAccessToken toggleModal={toggleModal} showModal={showModal} ServerUrl={ServerUrl}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingList;\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from \"axios\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport SettingList from './SettingList' \r\n\r\n\r\n\r\nconst TabExampleMenuPositionRight = (props) => {\r\n\r\n    const defaultValues = { username: \"\", password: \"\", url:\"\" }\r\n    const [patDetails, setPatDetails] = useState(defaultValues);\r\n    const [saving, setSaving] = useState(false);\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      ServerUrl()\r\n    }, []);\r\n        ///GET LIST OF Facilities\r\n        async function ServerUrl() {\r\n          axios\r\n              .get(`${baseUrl}sync/remote-urls`,\r\n              //{ headers: {\"Authorization\" : `Bearer ${token}`} }\r\n              )\r\n              .then((response) => {\r\n                  console.log(response.data)\r\n                  setServerUrl(\r\n                      Object.entries(response.data).map(([key, value]) => ({\r\n                          label: value.url,\r\n                          value: value.id,\r\n                        }))\r\n                  );\r\n              })\r\n              .catch((error) => {\r\n  \r\n              });\r\n      \r\n      }\r\n    \r\n    const handleInputChange = e => {\r\n      setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n      console.log(patDetails)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n      console.log(patDetails)\r\n      e.preventDefault();      \r\n      setSaving(true);\r\n      axios.post(`${baseUrl}sync/remote-access-token`,\r\n     // { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n      patDetails\r\n      )\r\n                  .then(response => {\r\n                      setSaving(false);\r\n                      toast.success(\"Token Generated Successful\");\r\n\r\n                  })\r\n                  .catch(error => {\r\n                      setSaving(false);\r\n                      toast.error(\"Something went wrong\");\r\n                  });\r\n    };\r\n\r\n\r\n\r\n\r\n  return (    \r\n          \r\n          <SettingList />\r\n        )\r\n\r\n}\r\n\r\nexport default TabExampleMenuPositionRight","import React, { useState, useRef, useCallback, useEffect } from 'react'\r\n//import MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"../../../api\";\r\nimport { forwardRef } from 'react';\r\n//import { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//import { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\n//import { MdModeEdit } from \"react-icons/md\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Form,\r\n    Row,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Spinner } from 'reactstrap';\r\n//import { DropzoneArea } from 'material-ui-dropzone';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\nconst SyncList = (props) => {\r\n    let history = useHistory();\r\n  // The state for our timer\r\n  const classes = useStyles()\r\n  const [syncList, setSyncList] = useState( [])\r\n  const [facilities, setFacilities] = useState( [])\r\n  const [serverUrl, setServerUrl] = useState( [])\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const defaultValues = { facilityId: \"\", serverUrl : \"\", allTables:null, tables:\"\" }\r\n  const [uploadDetails, setUploadDetails] = useState(defaultValues);\r\n  const [saving, setSaving] = useState(false);\r\n  const [disabledTables, setDisabledTables] = useState(true);\r\n  const [errors, setErrors] = useState({});\r\n  const [tableList, setTableList] = useState( [])\r\n\r\n    useEffect(() => {\r\n        syncHistory()\r\n        Facilities()\r\n        ServerUrl()\r\n        const timer = setTimeout(() => console.log('Initial timeout!'), 1);\r\n        return () => clearTimeout(timer);\r\n    }, []);\r\n\r\n\r\n    //Public API that will echo messages sent to it back to the client\r\n  const [socketUrl, setSocketUrl] = useState('wss://demo.piesocket.com/v3/channel_123?api_key=VCXCEuvhGcBDP7XhiJJUDvR1e1D3eiVjgZ9VRiaV&notify_self');\r\n  const [messageHistory, setMessageHistory] = useState([]);\r\n\r\n  const { sendMessage, lastMessage, readyState } = useWebSocket(socketUrl);\r\n\r\n  useEffect(() => {\r\n    if (lastMessage !== null) {\r\n      setMessageHistory((prev) => prev.concat(lastMessage));\r\n    }\r\n  }, [lastMessage, setMessageHistory]);\r\n\r\n  const handleClickChangeSocketUrl = useCallback(\r\n    () => setSocketUrl('ws://demos.kaazing.com/echo'),\r\n    []\r\n  );\r\n\r\n  const handleClickSendMessage = useCallback(() => sendMessage('Hello Mathew testing'), []);\r\n\r\n  const connectionStatus = {\r\n    [ReadyState.CONNECTING]: 'Connecting',\r\n    [ReadyState.OPEN]: 'Open',\r\n    [ReadyState.CLOSING]: 'Closing',\r\n    [ReadyState.CLOSED]: 'Closed',\r\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\r\n   }[readyState];\r\n\r\n       \r\n    /*****  Validation */\r\n    const validate = () => {\r\n        let temp = { ...errors };\r\n        temp.facilityId = uploadDetails.facilityId\r\n            ? \"\"\r\n            : \"Facility is required\";\r\n            temp.serverUrl  = uploadDetails.serverUrl \r\n            ? \"\"\r\n            : \"URL is required\";\r\n            \r\n            setErrors({\r\n                ...temp,\r\n            });\r\n            return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n    //GET LIST OF Sync History\r\n    async function syncHistory() {\r\n\r\n        axios\r\n            .get(`${baseUrl}sync/sync-history`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSyncList(response.data);\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function Facilities() {\r\n        axios\r\n            .get(`${baseUrl}sync/facilities`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setFacilities(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.name,\r\n                        value: value.id,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function ServerUrl() {\r\n        axios\r\n            .get(`${baseUrl}sync/remote-urls`,\r\n             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setServerUrl(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.url + \" - \" + value.username,\r\n                        value: value.url,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Tables\r\n    async function TableList(facilityId) {\r\n        axios\r\n            .get(`${baseUrl}sync/table/${facilityId}`,\r\n             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setTableList(\r\n                    Object.entries(response.data).map((row) => ({\r\n                        label: row,\r\n                        value: row,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    const handleInputChange = e => {\r\n        setUploadDetails ({...uploadDetails,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"facilityId\" ){\r\n            TableList(e.target.value)\r\n        }\r\n    }\r\n    const handleInputChangeAll =e =>{\r\n        if(e.target.checked){ \r\n            setUploadDetails({...uploadDetails, [e.target.name]: e.target.checked})\r\n            setDisabledTables(true)\r\n         }else{\r\n            setDisabledTables(false)\r\n         }\r\n \r\n     }\r\n    const handleSubmit = (e) => {\r\n       \r\n        e.preventDefault();\r\n             \r\n            \r\n           if(validate()){\r\n            setSaving(true);\r\n            const defaultTable = uploadDetails.tables!==null ? uploadDetails.tables : null ;\r\n            axios.post(`${baseUrl}sync/upload/${defaultTable}`, uploadDetails,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            toast.success(\"Upload Successful\");\r\n                            syncHistory();\r\n                            //Closing of the modal \r\n                            toggle();\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            toast.error(\"Something went wrong\");\r\n                        });\r\n             }       \r\n      };\r\n\r\n    const syncDataBase =()=> {        \r\n        setModal(!modal)\r\n    }\r\n\r\n    const apiCall = {\r\n        event: 'bts:subscribe',\r\n        data: { channel: 'order_book_btcusd' },\r\n    }; \r\n \r\n    const [bids, setBids] = useState([0]);\r\n\r\n    useEffect(() => {\r\n        const ws = new WebSocket('wss://ws.bitstamp.net');\r\n        ws.onopen = (event) => {\r\n            ws.send(JSON.stringify(apiCall));\r\n        };\r\n        ws.onmessage = function (event) {\r\n            const json = JSON.parse(event.data);\r\n            try {\r\n                if ((json.event == 'data')) {\r\n                    setBids(json.data.bids.slice(0, 5));\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        //clean up function\r\n        return () => ws.close();\r\n    }, []);\r\n    const firstBids = bids.map((item, index) => (\r\n        <div key={index}>\r\n            <p> {item}</p>\r\n        </div>\r\n    ));\r\n  return (\r\n    <div>\r\n       \r\n        <Button\r\n            variant=\"contained\"\r\n            style={{backgroundColor:\"#014d88\", }}\r\n            className=\" float-right mr-1\"\r\n            //startIcon={<FaUserPlus />}\r\n            onClick={syncDataBase}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Upload </span>\r\n        </Button>        \r\n        <br/><br/>\r\n        <div>{firstBids}</div>\r\n        <Button onClick={handleClickChangeSocketUrl}>\r\n            Click Me to change Socket Url\r\n        </Button>\r\n        <Button\r\n            onClick={handleClickSendMessage}\r\n            disabled={readyState !== ReadyState.OPEN}\r\n        >\r\n            Click Me to send 'Hello'\r\n        </Button>\r\n\r\n        <span>The WebSocket is currently {connectionStatus}</span>\r\n        {lastMessage ? <span>Last message: {lastMessage.data}</span> : null}\r\n        <ul>\r\n            {messageHistory.map((message, idx) => (\r\n            <span key={idx}>{message ? message.data : null}</span>\r\n            ))}\r\n        </ul>\r\n             <Form >\r\n  \r\n                <Card >\r\n                    <CardBody>\r\n                        <Row >                                  \r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >Facility *</Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"facilityId\"\r\n                                id=\"facilityId\"\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                required\r\n                                >\r\n                                <option > </option>\r\n                                {facilities.map(({ label, value }) => (\r\n                                    <option key={value} value={value}>\r\n                                    {label}\r\n                                    </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.facilityId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.facilityId}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        </Col> \r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >URL *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"serverUrl\"\r\n                                    id=\"serverUrl\"\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    required\r\n                                    >\r\n                                    {serverUrl.map(({ label, value }) => (\r\n                                        <option key={value} value={value}>\r\n                                        {label}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                                {errors.serverUrl !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.serverUrl}</span>\r\n                                ) : \"\" } \r\n                        </FormGroup>\r\n                        </Col>\r\n                        {!disabledTables && (\r\n                            <>\r\n                                <Col md={12}>\r\n                                <FormGroup>\r\n                                <Label >Tables</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"tables\"\r\n                                            id=\"tables\"\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        // disabled={}\r\n                                        >\r\n                                            <option >Select Table </option>\r\n                                            {tableList.map((row) => (\r\n                                                <option key={row} value={row}>\r\n                                                {row}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Input>\r\n                                        {errors.tables !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.tables}</span>\r\n                                        ) : \"\" } \r\n                                </FormGroup>\r\n                                </Col>\r\n                            </>\r\n                        )} \r\n                        <div className=\"form-group mb-3 col-md-12\">                                    \r\n                        <div className=\"form-check custom-checkbox ml-1 \">\r\n                            <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"                           \r\n                            name=\"allTables\"\r\n                            id=\"allTables\"\r\n                            checked={disabledTables}\r\n                            onChange={handleInputChangeAll}\r\n                            />\r\n                            <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor=\"basic_checkbox_1\"\r\n                            >\r\n                                All Tables\r\n                            </label>\r\n                        </div>\r\n                        </div>\r\n                        </Row>\r\n                        <br/>\r\n                        {saving ? <Spinner /> : \"\"}\r\n                        <br />\r\n                        \r\n                        <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<SettingsBackupRestoreIcon />}\r\n                            onClick={handleSubmit}\r\n                            \r\n                        >   \r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Upload</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Uploading Please Wait...</span>\r\n                            )\r\n                        } \r\n                        </MatButton>                                          \r\n                        <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={toggle}\r\n                            className={classes.button}\r\n                            style={{backgroundColor:'#992E62'}}\r\n                            startIcon={<CancelIcon />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>cancel</span>\r\n                        </MatButton>\r\n                    </CardBody>\r\n                </Card> \r\n          \r\n        </Form>\r\n   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SyncList;\r\n\r\n\r\n","import React, {forwardRef, useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport {Modal, ModalBody, ModalHeader, Form,\r\n    Row,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MaterialTable from 'material-table';\r\nimport CloudUpload from '@material-ui/icons/CloudUpload';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport {FiUploadCloud} from \"react-icons/fi\";\r\nimport FileSaver from \"file-saver\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Dropdown,Button as Buuton2, Menu, Icon } from 'semantic-ui-react'\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Spinner } from 'reactstrap';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from \"moment\";\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref}/>),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref}/>),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref}/>),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref}/>),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref}/>),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref}/>),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref}/>),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref}/>),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref}/>),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref}/>),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref}/>),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref}/>),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref}/>)\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport default function DownloadNdr(props) {\r\n    const classes = useStyles();\r\n    const [syncList, setSyncList] = useState( [])\r\n    const [facilities, setFacilities] = useState( [])\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n    const [loading, setLoading] = useState('')\r\n    const [modal, setModal] = useState(false);\r\n    const [modal2, setModal2] = useState(false);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledTables, setDisabledTables] = useState(true);\r\n    const [errors, setErrors] = useState({});\r\n    const [tableList, setTableList] = useState( [\"patient\",\r\n            \"patient_visit\",\r\n            \"triage_vital_sign\",\r\n            \"hiv_enrollment\",\r\n            \"hiv_art_clinical\",\r\n            \"hiv_art_pharmacy\",\r\n            \"laboratory_order\",\r\n            \"laboratory_test\",\r\n            \"laboratory_sample\",\r\n            \"laboratory_result\",\r\n            \"biometric\",\r\n            \"hiv_status_tracker\",\r\n            \"hiv_eac\",\r\n            \"hiv_eac_session\",\r\n            //hiv_eac_out_come,\r\n            \"hiv_observation\",\r\n            \"prep_eligibility\",\r\n            \"prep_enrollment\",\r\n            \"prep_clinic\",\r\n            \"prep_interruption\"])\r\n    const defaultValues = { facilityId: \"\", serverUrl : \"\", allTables:null, tables:\"\" }\r\n    const [uploadDetails, setUploadDetails] = useState(defaultValues);\r\n    const toggle = () => setModal(!modal);\r\n    const toggle2 = () => setModal2(!modal2);\r\n    useEffect(() => {\r\n        syncHistory()\r\n        Facilities()\r\n        ServerUrl()\r\n        const timer = setTimeout(() => console.log('Initial timeout!'), 1);\r\n        return () => clearTimeout(timer);\r\n      }, []);\r\n\r\n           ///GET LIST OF Sync History\r\n    async function syncHistory() {\r\n\r\n        axios\r\n            .get(`${baseUrl}sync/sync-history`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSyncList(response.data);\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function Facilities() {\r\n        axios\r\n            .get(`${baseUrl}sync/facilities`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setFacilities(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.name,\r\n                        value: value.id,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function ServerUrl() {\r\n        axios\r\n            .get(`${baseUrl}sync/remote-urls`,\r\n             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setServerUrl(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.url + \" - \" + value.username,\r\n                        value: value.url,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Tables\r\n    async function TableList(facilityId) {\r\n        axios\r\n            .get(`${baseUrl}sync/table/${facilityId}`,\r\n             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setTableList(\r\n                    Object.entries(response.data).map((row) => ({\r\n                        label: row,\r\n                        value: row,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    const downloadFile = (fileName) => {\r\n \r\n        axios\r\n            .get(`${baseUrl}ndr/download/${fileName}`,\r\n                {headers: {\"Authorization\": `Bearer ${token}`}, responseType: 'blob'}\r\n            )\r\n            .then((response) => {\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.zip`);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    const handleInputChange = e => {\r\n        setUploadDetails ({...uploadDetails,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"facilityId\" ){\r\n            TableList(e.target.value)\r\n        }\r\n    }\r\n    const handleInputChangeAll =e =>{\r\n        if(e.target.checked){ \r\n            setUploadDetails({...uploadDetails, [e.target.name]: e.target.checked})\r\n            setDisabledTables(true)\r\n         }else{\r\n            setDisabledTables(false)\r\n         }\r\n \r\n    }\r\n         /*****  Validation */\r\n    const validate = () => {\r\n        let temp = { ...errors };\r\n        temp.facilityId = uploadDetails.facilityId\r\n            ? \"\"\r\n            : \"Facility is required\";\r\n            temp.serverUrl  = uploadDetails.serverUrl \r\n            ? \"\"\r\n            : \"URL is required\";\r\n            \r\n            setErrors({\r\n                ...temp,\r\n            });\r\n            return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n     const handleSubmit = (e) => {\r\n       \r\n        e.preventDefault();\r\n             \r\n            \r\n           if(validate()){\r\n            setSaving(true);\r\n            const defaultTable = uploadDetails.tables!==null ? uploadDetails.tables : null ;\r\n            axios.post(`${baseUrl}sync/upload/${defaultTable}`, uploadDetails,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            toast.success(\"Upload Successful\");\r\n                            syncHistory();\r\n                            //Closing of the modal \r\n                            toggle();\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            toast.error(\"Something went wrong\");\r\n                        });\r\n             }       \r\n    };\r\n    const varient =(value)=>{\r\n        console.log(value)\r\n        if(value<=20 ){\r\n            return \"danger\"\r\n        }else if(value> 20 && value<=69){\r\n            return \"warning\"\r\n        }else if(value>= 70 && value<=99){\r\n            return \"info\"\r\n        }else if(value=== 100){\r\n            return \"success\"\r\n        }else{\r\n            return \"success\" \r\n        }\r\n    }\r\n    const CentralUploadStatus =(value)=>{\r\n        if(value<=0 ){\r\n            return \"Not Yet Uploaded\"\r\n        }else if(value> 0 && value<=99){\r\n            return \"Processing\"\r\n        }else if(value=== 100){\r\n            return \"Completed\"\r\n        }else{\r\n            return \"Pending\" \r\n        }\r\n    }\r\n    let tableListObj=[\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Patient\",\r\n            date:\"2023-04-23\",\r\n            status:100,\r\n            centralUpload:100\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Triage\",\r\n            date:\"2023-04-23\",\r\n            status:30,\r\n            centralUpload:30\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Hiv Enrollment\",\r\n            date:\"2023-04-23\",\r\n            status:97,\r\n            centralUpload:97\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"HIV Clinic Visit\",\r\n            date:\"2023-04-23\",\r\n            status:40,\r\n            centralUpload:40\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Biomteric\",\r\n            date:\"2023-04-23\",\r\n            status:0,\r\n            centralUpload:0\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Laboratory\",\r\n            date:\"2023-04-23\",\r\n            status:70,\r\n            centralUpload:70\r\n        },\r\n        {\r\n            name:\"Kwara GH\",\r\n            number:\"234,900\",\r\n            fileName:\"Pharmacy\",\r\n            date:\"2023-04-23\",\r\n            status:80,\r\n            centralUpload:80\r\n        },\r\n    ];\r\n    const syncDataBase =()=> {        \r\n        setModal2(!modal2)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-right\"\r\n                startIcon={<FiUploadCloud size=\"10\"/>}\r\n                style={{backgroundColor: '#014d88'}}\r\n                onClick={syncDataBase}\r\n                //href=\"https://ndr.phis3project.org.ng/Identity/Account/Login?ReturnUrl=%2F\"\r\n                //onClick={loadNdrWeb}\r\n                target=\"_blank\"\r\n            >\r\n                <span> Genrate Tables</span>\r\n            </Button>\r\n\r\n            <br/><br/>\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title=\"List of Tables Generated\"\r\n\r\n                columns={[\r\n                    {title: \"Facility Name\", field: \"name\", filtering: false},\r\n                    {\r\n                        title: \"Number of Files Generated\",\r\n                        field: \"number\",\r\n                        filtering: false\r\n                    },\r\n                    {title: \"File Name\", field: \"fileName\", filtering: false},\r\n                    {title: \"Date Last Generated\", field: \"date\", type: \"date\", filtering: false},\r\n                    {title: \"Central Upload Status\", field: \"status\", filtering: false},\r\n\r\n                    {\r\n                        title: \"Action\",\r\n                        field: \"actions\",\r\n                        filtering: false,\r\n                    },\r\n                ]}\r\n                isLoading={loading}\r\n                data={tableListObj.map((row) => ({\r\n                    name: row.name,\r\n                    number: row.number,\r\n                    fileName: row.fileName,\r\n                    date: moment(row.date).format(\"LLLL\"),\r\n                    status:(\r\n                            <>\r\n                            <p><b>{CentralUploadStatus(row.centralUpload)}</b></p>\r\n\r\n                            <ProgressBar now={row.status} variant={varient(row.status)} label={`${row.status}%`} />\r\n                            </>  \r\n                            ),\r\n                    actions:(<div>\r\n                    <Menu.Menu position='right'  >\r\n                    <Menu.Item >\r\n                        <Buuton2 style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                        <Dropdown item text='Action'>\r\n\r\n                        <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                            <Dropdown.Item  onClick={() => downloadFile(row.fileName)} title=\"Download\"><CloudDownloadIcon color=\"primary\"/> Download\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item  ><CloudUpload color=\"primary\" title=\"Upload to Central\"/> Upload To Central\r\n                            </Dropdown.Item>\r\n                            \r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                        </Buuton2>\r\n                    </Menu.Item>\r\n                    </Menu.Menu>\r\n              </div>)\r\n                }))}\r\n                options={{\r\n\r\n                    pageSizeOptions: [5, 10, 50, 100, 150, 500],\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                        margin: \"auto\"\r\n                    },\r\n                    filtering: true,\r\n                    searchFieldStyle: {\r\n                        width: '300%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                }}\r\n\r\n            />\r\n\r\n        {/* <Modal isOpen={modal} toggle={toggle} backdrop={false} fade={true} style={{marginTop:\"250px\"}} size='lg'>\r\n        \r\n        <ModalBody>\r\n        <h1>Uploading File To NDR. Please wait...</h1>\r\n        </ModalBody>\r\n        \r\n        </Modal>  */}\r\n        <Modal isOpen={modal2} toggle={toggle2} className={props.className} size=\"lg\"  backdrop=\"static\">\r\n        <Form >\r\n        <ModalHeader toggle={toggle2}>Upload</ModalHeader>\r\n            <ModalBody>   \r\n                <Card >\r\n                    <CardBody>\r\n                        <Row >                                  \r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >Facility *</Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"facilityId\"\r\n                                id=\"facilityId\"\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                required\r\n                                >\r\n                                <option > </option>\r\n                                {facilities.map(({ label, value }) => (\r\n                                    <option key={value} value={value}>\r\n                                    {label}\r\n                                    </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.facilityId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.facilityId}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        </Col> \r\n                        <Col md={12}>\r\n                        <FormGroup>\r\n                        <Label >URL *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"serverUrl\"\r\n                                    id=\"serverUrl\"\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                    required\r\n                                    >\r\n                                    {serverUrl.map(({ label, value }) => (\r\n                                        <option key={value} value={value}>\r\n                                        {label}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                                {errors.serverUrl !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.serverUrl}</span>\r\n                                ) : \"\" } \r\n                        </FormGroup>\r\n                        </Col>\r\n                        {!disabledTables && (\r\n                            <>\r\n                                <Col md={12}>\r\n                                <FormGroup>\r\n                                <Label >Tables</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"tables\"\r\n                                            id=\"tables\"\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        // disabled={}\r\n                                        >\r\n                                            <option >Select Table </option>\r\n                                            {tableList.map((row) => (\r\n                                                <option key={row} value={row}>\r\n                                                {row}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Input>\r\n                                        {errors.tables !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.tables}</span>\r\n                                        ) : \"\" } \r\n                                </FormGroup>\r\n                                </Col>\r\n                            </>\r\n                        )} \r\n                        <div className=\"form-group mb-3 col-md-12\">                                    \r\n                        <div className=\"form-check custom-checkbox ml-1 \">\r\n                            <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"                           \r\n                            name=\"allTables\"\r\n                            id=\"allTables\"\r\n                            checked={disabledTables}\r\n                            onChange={handleInputChangeAll}\r\n                            />\r\n                            <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor=\"basic_checkbox_1\"\r\n                            >\r\n                                All Tables\r\n                            </label>\r\n                        </div>\r\n                        </div>\r\n                        </Row>\r\n                        <br/>\r\n                        {saving ? <Spinner /> : \"\"}\r\n                        <br />\r\n                        \r\n                        <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<SettingsBackupRestoreIcon />}\r\n                            onClick={handleSubmit}\r\n                            \r\n                        >   \r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Upload</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Uploading Please Wait...</span>\r\n                            )\r\n                        } \r\n                        </MatButton>                                          \r\n                        <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={toggle2}\r\n                            className={classes.button}\r\n                            style={{backgroundColor:'#992E62'}}\r\n                            startIcon={<CancelIcon />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize \", color:\"#fff\" }}>cancel</span>\r\n                        </MatButton>\r\n                    </CardBody>\r\n                </Card> \r\n            </ModalBody>\r\n        </Form>\r\n    </Modal>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\nimport {getQueryParams} from \"./../components/Utils/PageUtils\";\r\n\r\nimport SyncList from './Sync/SyncList';\r\nimport Setting from './Settings/index'\r\n// import Backup from './backup/backupList'\r\n// import Restore from './restore/restoreList'\r\n// import RestoreIcon from '@material-ui/icons/Restore';\r\n//import SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\n//import BackupIcon from '@material-ui/icons/Backup';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport CloudSyncIcon from '@mui/icons-material/CloudSync';\r\nimport Websocket from './Sync/Websocket'; \r\nimport NewList from './Sync/NewList'; \r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    fontSize: \"20px\",\r\n    fontWeight: \"bold\",\r\n    padding: \"5px\",\r\n    paddingBottom: \"10px\",\r\n  },\r\n  inforoot: {\r\n    margin: \"5px\",\r\n  },\r\n\r\n  dropdown: {\r\n    marginTop :\"50px\"\r\n   \r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  downmenu: {\r\n    display: 'flex'\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={5}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    \"aria-controls\": `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\nfunction HomePage(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(null);\r\n  const getstate= props.location && props.location.state ? props.location.state : \" \" ;\r\n  const urlIndex = getQueryParams(\"tab\", props.location && props.location.search ? props.location.search : \"\"); \r\n  const urlTabs = urlIndex !== null ? urlIndex : getstate ;\r\n  useEffect ( () => {\r\n\r\n    switch(urlTabs){  \r\n      case \"database-sync\": return setValue(0)\r\n      case \"setting\": return setValue(1)\r\n\r\n      default: return setValue(0)\r\n    }\r\n  }, [urlIndex]);\r\n  \r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n     <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>Central Sync</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <br/>\r\n    <div className={classes.root} >\r\n      <AppBar position=\"static\" style={{backgroundColor:'#fff'}}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"primary\"\r\n          aria-label=\"scrollable force tabs example\"\r\n        >\r\n           <Tab className={classes.title} label=\"Generate & Upload JSON FIle\" icon={<CloudSyncIcon />} {...a11yProps(0)} />\r\n         \r\n          {/* <Tab className={classes.title} label=\"WebSocket  \" icon={<SettingsIcon />} {...a11yProps(1)}/> \r\n          <Tab className={classes.title} label=\"Generate & Upload  \" icon={<SettingsIcon />} {...a11yProps(2)}/>  */}\r\n          {/* <Tab className={classes.title} label=\"Configuration  \" icon={<SettingsIcon />} {...a11yProps(3)}/>  */}\r\n      </Tabs>\r\n      </AppBar>\r\n\r\n     \r\n        <TabPanel value={value} index={0}>\r\n          <SyncList />\r\n        </TabPanel>\r\n        {/* <TabPanel value={value} index={1}>\r\n          <Websocket />\r\n        </TabPanel> */}\r\n        {/* <TabPanel value={value} index={2}>\r\n          <NewList />\r\n        </TabPanel> */}\r\n        <TabPanel value={value} index={3}>\r\n          <Setting />\r\n        </TabPanel>\r\n       \r\n     </div> \r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default HomePage;\r\n","export const getQueryParams = (params, url) => {\r\n    let href = url;\r\n    //this expression is to get the query strings\r\n    let reg = new RegExp(\"[?&]\" + params + \"=([^&#]*)\", \"i\");\r\n    let queryString = reg.exec(href);\r\n    return queryString ? queryString[1] : null;\r\n};","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport HomePage from './main/webapp/jsx/components/Dashboard'\r\n//import HomePage from './main/webapp/jsx/ndr/Dashboard'\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          \r\n          <Route path=\"/\">\r\n            <HomePage />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}